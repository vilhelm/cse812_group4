%!PS-Adobe-2.0
%%Creator: dvips(k) 5.94b Copyright 2004 Radical Eye Software
%%Title: sample.dvi
%%CreationDate: Wed Mar 05 10:15:35 2008
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Bold Times-Roman Times-BoldItalic CMMI10 CMR10
%%+ CMSY8 CMMI7 CMEX10 CMSY10 CMR7 Times-Italic CMSY7 CMMI5 CMMI8 CMR8
%%+ Helvetica
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o sample.ps -G0 -tletter sample
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2008.03.05:1009
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "30 October 2002",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 49 /one put
dup 50 /two put
dup 51 /three put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
/UniqueID 5000791 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA1772CE422BB1D7283AD675B65
48A7EA0069A883EC1DAA3E1F9ECE7586D6CF0A128CD557C7E5D7AA3EA97EBAD3
9619D1BFCF4A6D64768741EDEA0A5B0EFBBF347CDCBE2E03D756967A16B613DB
0FC45FA2A3312E0C46A5FD0466AB097C58FFEEC40601B8395E52775D0AFCD7DB
8AB317333110531E5C44A4CB4B5ACD571A1A60960B15E450948A5EEA14DD330F
EA209265DB8E1A1FC80DCD3860323FD26C113B041A88C88A21655878680A4466
FA10403D24BB97152A49B842C180E4D258C9D48F21D057782D90623116830BA3
9902B3C5F2F2DD01433B0D7099C07DBDE268D0FFED5169BCD03D48B2F058AD62
D8678C626DC7A3F352152C99BA963EF95F8AD11DB8B0D351210A17E4C2C55AD8
9EB64172935D3C20A398F3EEEEC31551966A7438EF3FEE422C6D4E05337620D5
ACC7B52BED984BFAAD36EF9D20748B05D07BE4414A63975125D272FAD83F76E6
10FFF8363014BE526D580873C5A42B70FA911EC7B86905F13AFE55EB0273F582
83158793B8CC296B8DE1DCCF1250FD57CB0E035C7EDA3B0092ED940D37A05493
2EC54E09B984FCA4AB7D2EA182BCF1263AA244B07EC0EA901C077A059F709F30
4384CB5FA748F2054FAD9A7A43D4EA427918BD414F766531136B60C3477C6632
BEFE3897B58C19276A301926C2AEF2756B367319772C9B201C49B4D935A8267B
041D6F1783B6AEA4DAC4F5B3507D7032AA640AAB12E343A4E9BDCF419C04A721
3888B25AF4E293AACED9A6BDC78E61DA1C424C6503CC1885F762BE0618B16C14
7386EB4C4B9B3142B9662F48C5415D6A0A82B0F384E51C84D0FC02F86B546CF5
8B99F29AFFF1D86D447B164F067B1222A7ED9358C936DBE7839DA11E9EF63B09
3A12FD4B6C8ACDA4767EB58736F0C595B47964C8CC9099909CB3EAB6FD9FACF1
57C9E5A2FBE4BA8E18D8D3A0FF9B5BFC9769AD4781785B63DAAA8FA88131C213
A967E3D1A8B6C50892E3AABE22868C8EEA46A078BDEA34CE995DDC2D13EE7F2D
5544A15A0F52AF668F7C2817B27B8F06B6F08800823F9336ADC00347559E8F0C
3A584FD0834401191C7F368067F68F4170B39E5C2D66C52949D3139E0E2CE5A0
291856190E94E634BE8DA6BDFEBE6CD0367FA0396AAE8DAC15ACB5148782DD39
36D072867F1483D9671F7024B6A292A43DE0147C15FA5E9542DE9E2A687071FC
268EC6E93E8E621C01DB76CFCDBD7DB9DDECB2736665F1DBF42B43B54F404D4E
09F137792C3CCDCF7A6F125C564B7C8CDCE18E737F4714FE89DAB002EE02CDA0
58778E034E5DEE4B9452F3A5D89709DD4DB2486632CD3536C57560EC47756483
36EBC8AA7BDA03E45B46E28F936D59437C1AE7A5F177391345AF01056954EDE6
68893F1BB59DB1B496D85BDE660468DBD0DDDAFF9A4299A54BF727A331B18F49
8BAD9147F19EE2A0AD01ECB20B72E6EF2F770118FE89999F60E1953E68CB1E13
E01040109EFEA023BE6E02D4F5962C72CE4523AFB583D6A539601D72A5EB3C5B
04233965E014907A8445F00CE613AE7CB01E9A2325FC0A6A7C0255DB985E4DFF
B0A664695A77A942C7D7BA22B41B5CAE9DC2561D3DFF501BAF81260FD23F0BFD
2B780CE999A9B197E71BC9783871FFC5869EA24884001527AD2E185426171928
FF4286E316B1F513B4F3F410158203D753EC52BA743CDECD05B85B7A4142CA7F
396692F1A0F3AB8BB024F37B08547612F0AB6A9CA3E9F6E95396C74305152F51
B0832B3BBA145D1C902FFB6F39C288F6DE4BE4361995E03AE8A8054A308553B5

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.1: CMMI8 1.100
%%CreationDate: 1996 Jul 23 07:53:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 110 /n put
dup 120 /x put
readonly def
/FontBBox{-24 -250 1110 750}readonly def
/UniqueID 5087383 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF753642CD526A96ACEDA4120
788F22B1D09F149794E66DD1AC2C2B3BC6FEC59D626F427CD5AE9C54C7F78F62
C36F49B3C2E5E62AFB56DCEE87445A12A942C14AE618D1FE1B11A9CF9FAA1F32
617B598CE5058715EF3051E228F72F651040AD99A741F247C68007E68C84E9D1
D0BF99AA5D777D88A7D3CED2EA67F4AE61E8BC0495E7DA382E82DDB2B009DD63
532C74E3BE5EC555A014BCBB6AB31B8286D7712E0E926F8696830672B8214E9B
5D0740C16ADF0AFD47C4938F373575C6CA91E46D88DE24E682DEC44B57EA8AF8
4E57D45646073250D82C4B50CBBB0B369932618301F3D4186277103B53B3C9E6
DB42D6B30115F67B9D078220D5752644930643BDF9FACF684EBE13E39B65055E
B1BD054C324962025EC79E1D155936FE32D9F2224353F2A46C3558EF216F6BB2
A304BAF752BEEC36C4440B556AEFECF454BA7CBBA7537BCB10EBC21047333A89
8936419D857CD9F59EBA20B0A3D9BA4A0D3395336B4CDA4BA6451B6E4D1370FA
D9BDABB7F271BC1C6C48D9DF1E5A6FAE788F5609DE3C48D47A67097C547D9817
AD3A7CCE2B771843D69F860DA4059A71494281C0AD8D4BAB3F67BB6739723C04
AE05F9E35B2B2CB9C7874C114F57A185C8563C0DCCA93F8096384D71A2994748
A3C7C8B8AF54961A8838AD279441D9A5EB6C1FE26C98BD025F353124DA68A827
AE2AF8D25CA48031C242AA433EEEBB8ABA4B96821786C38BACB5F58C3D5DA011
85B385124DFAE11BA4AB27032F02AB84277DB8B54826CC030068965BE5E43DF2
58414D8BC537D75A3DDFE1C566F0C0BD2F6C1418F6E61A61D23C499912DFDECB
C3A3884F36FE736076D6268F12E27781FDA02A2486753D55830EBBF2F4DAC2A8
6F11545A9382CA30F32C44023C1A894F2D0D169984F15625F3E7DFF0E5CC3675
7BDB8AB60CC79BE461F1224A9583598114C16E9C787C62A51A410D808E8D3EA0
3D478B4265F99F39616254C01BD5EB482887DC37D5A2113B58F7CB31BC59974A
78CD286E4F367C3DCCC2A4300E1F0B420EB2C0A2DD6C1E01E8E2338FB6816932
C82C7B11C451608438150216DCCBE6857E85C45E248AC7ED80C6B9DF5B51A35F
FD312D2EDE76A545E26BD84683DD9E0FC428FCE72BADEFC1C40CC7904C1093DA
C46A2240FF7F5086E6F763087F511560B37263F0FE768A63B56A97FAC6B93912
F1FB38DFFDE72BDAD71F8049E12195D28BC4EF0F00704AE36FAEA57D0DC7EC1E
EDEC64D42AAC7FCEC25AB757059E59429B9A960BCEB9A8AF51FF940A0BD1A917
570F27C0D5878D8085ADEED9FA1B6C83D245E29225EA8AA6C15C3F4DF36BD222
E09FEE3FA5D55CB948AE880DA4CCDB3B5347BD1E07DF6657E9CA2113502BC56C
4C4C1C0476F9D522E5105C2483FFC4B3FE08896D36D7BAB183816560B4A828AB
F6A27F574682D789EDE7C1002745C22C5578E8476DC89541216D2F07B18C5B56
4A59436510FBF326BCD1A542DE01C89613528840DD4A0426B7E4813C21DEC92C
4A2F46B211350A6A1CE1572E55829B4DCC4D1BC033DB90E85E8692F3A7A3D4FD
76A0689E9151F7E04899CF68BDB0BBC8B623966AD189FFAFDABD67D2F8631A3B
D8F4D4D26BCEA899E32652004931495AA7A16CFAA04F67C2EDB15B03A5E85241
57
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI5
%!PS-AdobeFont-1.1: CMMI5 1.100
%%CreationDate: 1996 Aug 02 08:21:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 105 /i put
readonly def
/FontBBox{37 -250 1349 750}readonly def
/UniqueID 5087380 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA06DA87FC7163A5A2A756A598FAB07633
89DE8BB201D5DB4627484A80A431B6AFDBBBF23D4157D4AFE17E6B1C853DD417
25F84CD55402AB88AB7EEFDEDBF2C2C731BD25567C53B474CCF739188A930039
098A197F9C4BE7594D79442B2C8A67447DE44698321145D7689B91EF235EA80E
B600AA8E238064F154284096C4C2554EFE8DDF13AFF8D3CE30E0999375C0FEE6
F992DEA5FC3897E2CC8B7A90238E61E41622DE80F438DD994C73275CC52249D9
F6686F87F394FB7BB668138B210BEC9E46415A1B58C990B81E7D7DD301143517
4C2A259D2A0A1E200F8101469C10D7D537B0D4D39296A9AB3F132DA9A3B459B0
F850E2B3A03BDCB35AEF82285D19C38F474FB414F8EC971B994D1C7DD753B271
2B71549DF497C665DF0F266988209D9EB616E4D9BA229FF984E7A886DB01FD21
48ED2E4859FD6416C2CE52537464EA884C8C9C2D1083E2B83BE4B766474C23B6
6E8EC5003200AB10514BB44D14CA700416AB6B2683E80862E7D5B49A05526A32
554BB23AB8B0824BBA198E3825CE82380CC0FECF46651E3E5D77F09465E73164
20342822F29572BC7F73F2C3BF95ED3BB6FDEADC20C6AC866C4F2C679594D7E8
8D944704A3C5D771DC39503BECAB89F34D8CDB8FDB91AFE21F3F0260D05E90C5
73E2C13DFA022C4522E5918EE25038A0498FBB530DA33B0AE238B1C6ED03FC04
2BFED8236E07820C5BAB411EAE1B31D93A2FA7C374B1725FEC359ABCB88E2C89
214529A263D795AACB0B95A3AB2F4E08EF350C282CE521716DBB06E5B8291B3F
5D4ACA230FA192F64BC902A4C8842C0F916F92FBD002ADD408BF0401D0284FBB
F05D4C6DB631420747CC902C5E1617E6573612FB26C8378DF41FFB5048D3CF06
4893DBA48EF4B043D760F60C75712169D16C83EE020C45369E443E853E1809DD
F395B812067D6FDBD26111B34F42C21036AF952D0D767FD17F6959D9FDD46005
D64FFF54772B50BB9B173AE79702981F58F9F235C591F476A31852174DF0619C
A470359153DC32610E782B204E7945515464DACE9099B81EEECC7EBD4B5126AF
C3FD9DDFB329AF1C95C41FA4A5F6958869509A23BD7210386329771FA46FF926
0E54AC35106253EE140449425A8670E1F92B178A02A58EB57540F4BD8110E548
BB584EA6D625C5F5FE0124A98E49915F1A1B95D2125874360EED1C4379FEF3C6
90E5780C20309F11F2F23FAD635C44BA030B39EFF083A3ECCDD2641DCC67E900
CFE9B1E3FA03479C9040349B7C63F2E855EF5A8568573595FAA8C2F85271E206
385315994BAD8EAECEC06B6EB436DC0004932CA9AD5A4A42E69B25172A292D54
79A55138514F6E1EB0F82E6F90A36FEE157ED27D2C8AEE03E9E01ED9A94E19BA
22FB097A0F2237DB29A38DFAD90327F8FE97419F08DBF0AB75E2527EBFE173B0
93855F5CE5EE322A888AB1A3B8B72A0C747F0FA0F85BAECD76FCFF2A3CE27187
C59CED086B9BA96D25F2DDBBFE80E6D778A641DAA1C4DAC1DBA9F10A30DA4727
19D65907D5951CD3D8986565B91868AD99147D8FE9EF222D4A6D2E1839286980
F57FE64BDA994DBA9C6E7A206173C2F213D41AD4E34DC7FD1E2048680756EFF6
D26719DA156F56CC511482E24483008D8B92524B393AB542846330A30AF1508A
3F969D5F0B259C4433B42982100F2FC59188644CA373772877DE264DCABA9945
BFC2740BE637E2386BAC61F23B42469DE59F4414A628D0E94AF8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.1: CMSY7 1.0
%%CreationDate: 1991 Aug 15 07:21:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
readonly def
/FontBBox{-15 -951 1252 782}readonly def
/UniqueID 5000817 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D251491EBF65A98C9FE2B1CF8D725A70281949
8F4AFFE638BBA6B12386C7F32BA350D62EA218D5B24EE612C2C20F43CD3BFD0D
F02B185B692D7B27BEC7290EEFDCF92F95DDEB507068DE0B0B0351E3ECB8E443
E611BE0A41A1F8C89C3BC16B352C3443AB6F665EAC5E0CC4229DECFC58E15765
424C919C273E7FA240BE7B2E951AB789D127625BBCB7033E005050EB2E12B1C8
E5F3AD1F44A71957AD2CC53D917BFD09235601155886EE36D0C3DD6E7AA2EF9C
C402C77FF1549E609A711FC3C211E64E8F263D60A57E9F2B47E3480B978AAF63
868AEA25DA3D5413467B76D2F02F8097D2841EDA6677731A6ACFEC0BABF1016A
089B2D24F83F8FEECD9B11A16D76AD6AD0934A8604FAE813A1304C950E76FC3E
D0FA05FBAAD62B378AC5316425609AD3143A59FAAEE73055752EBCB7B784017D
10D7B44D7DF4D4793D776B70373076A662D812E29520E2915F7D742EC0650CB3
31FDD62F15E4D5BD0CC19D2E1C7364BCEE117028BAE01859A6AB353634EBC37C
ADDEB23C853A9AA732CFDC99134B91D9CE53E3E9C3ED2CF043D4D2E985346C98
DAD4A3F598E68E5DE482B93DFD55D2705D05D0D4B14B288D72B73C2E1B2543A2
E18C363CD7BF6FB59AB75C0BDB66F9FED7CBFA62042FAD21C7D592FB1D2B3A6C
4643296A34B1C67E11D1D1D988C1415A4AFBD1A32802F05DA5EDE57C6829DBD8
87A5FC79B176DCC55594ED46FE588E7D6BAF902B8231695ABBFDEA733923B39A
0671D24103DC517C1FE0E93FA71E36B9F5327D83C5093C1D3054810933524C4E
FEF311EC5CA6AF0B83316B093DD08F295D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.1: CMR7 1.0
%%CreationDate: 1991 Aug 20 16:39:21
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 61 /equal put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
/UniqueID 5000790 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6CC3F1E9AE32F234EB60FE7D
E34995B1ACFF52428EA20C8ED4FD73E3935CEBD40E0EAD70C0887A451E1B1AC8
47AEDE4191CCDB8B61345FD070FD30C4F375D8418DDD454729A251B3F61DAE7C
8882384282FDD6102AE8EEFEDE6447576AFA181F27A48216A9CAD730561469E4
78B286F22328F2AE84EF183DE4119C402771A249AAC1FA5435690A28D1B47486
1060C8000D3FE1BF45133CF847A24B4F8464A63CEA01EC84AA22FD005E74847E
01426B6890951A7DD1F50A5F3285E1F958F11FC7F00EE26FEE7C63998EA1328B
C9841C57C80946D2C2FC81346249A664ECFB08A2CE075036CEA7359FCA1E90C0
F686C3BB27EEFA45D548F7BD074CE60E626A4F83C69FE93A5324133A78362F30
8E8DCC80DD0C49E137CDC9AC08BAE39282E26A7A4D8C159B95F227BDA2A281AF
A9DAEBF31F504380B20812A211CF9FEB112EC29A3FB3BD3E81809FC6293487A7
455EB3B879D2B4BD46942BB1243896264722CB59146C3F65BD59B96A74B12BB2
9A1354AF174932210C6E19FE584B1B14C00E746089CBB17E68845D7B3EA05105
EEE461E3697FCF835CBE6D46C75523478E766832751CF6D96EC338BDAD57D53B
52F5340FAC9FE0456AD13101824234B262AC0CABA43B62EBDA39795BAE6CFE97
563A50AAE1F195888739F2676086A9811E5C9A4A7E0BF34F3E25568930ADF80F
0BDDAC3B634AD4BA6A59720EA4749236CF0F79ABA4716C340F98517F6F06D9AB
7ED8F46FC1868B5F3D3678DF71AA772CF1F7DD222C6BF19D8EF0CFB7A76FC6D1
0AD323C176134907AB375F20CFCD667AB094E2C7CB2179C4283329C9E435E7A4
1E042AD0BAA059B3F862236180B34D3FCED833472577BACD472A47CD4FFE5D78
D8A2086B7832F31FAFBCE07449C2DF202DEF9FC7CEAB4028A0FB788150A07C01
D06A674C0E9FFCCCCF9D8E5F0D01A69402622894D12C1F675257EE11E4645236
8EC81C2F2CE06B00CCB14868E8B56F2F030C58FF8CD99977A16B30DF54CED890
6233C5DC2CECB317276E26258C30FB3784C3EA7BF0D42B5467D1464A673A3290
8C4665AD6C177E404591481AC78826B1D4098A3EBAFDE7FA2C400788CE69C866
BC98B6A9795FD2E6B0922E41FA2A70A3BE74B41BDFDBF106EAF03C2718763E99
DEAA6FB029CADA5286B7BB7217C1BEC213ACFDE9E023A78FC569C3A71FF59FB7
54CCA87B85946E17CAFAF953DC873E9F2CEEDF18407AB9EC8B11219EE6A66669
097513A1FF22B17F61918D6A335E5671E192FD2B78F631EA3A5A56ED0C0A66B5
206E65C8C704EFF9FAEDD77304F6618F2EC0BEE859B43DEE06CCB6FBAF386A6F
EB82EE39A4D89B78AF839C29FDB6CB06205009AE8FDFC0EC9781D4CB8A2F019A
F1E1A442D39C65D02C2A211548C5264B78F78962C212CD7F89BF21FCE117192B
6DDDACE9168A603E2636C7089D9CC68B47C2E20FCA199A9529CB1C7BAD97BE2D
7D976214AB6A4EDA26687A19C1ED23C182C99D9671ADD572FCE54F8CFB4C2704
F42E49A59F30EB2E354B3D2562A2B8CABBF819200EA314B52F37148AA6BB1141
B627A0FDC8E292FEAA23668CBAD16F90176E9D7E11DE13B6A0C9732ACBCDF5DC
8E779F93F230888D9D3254C6F9D53A95DBD71C105A458A75F7A78F1B159A52B0
FDE666D2399545C6B7F4BACC014A9389E5D0E9A519892997A2300D780866D5EF
C078DA7FB6EC86A932C8A6F042EC631FD90A092425772358B162CBE1CD74D46A
79894DE614F8259BC9C88B8D1A798CA22815E4435AB09B470F7D6A28EC005E6F
54E06FC3908D37F099DC8017E3653C94D2752015DA2FD5F2A12EEB051F37987E
79D37EF3D52552A5C4B01D240257847541080A24019D5F0294906A9286C1D77F
82D34CE34EB986935409EA8D79F50EC4BCC6E775C406495C7BD28EBB7E7D2013
CC9646C684A55172BBC895CFC37279D76D7C6A3D015394C811B9950AE93B07E3
B429BFDF857A15A7C2024E4F430C4FF9157A40F54C173A3939F530AE1CCC7DF1
5F669F91465A8DE91F393D635E16F25E9E6E3A3B5B374DF3363E79D48992519E
9E12D0259324B7F17F2989AE28CCCACE9D5A4D0135A52BD2ED6BA11C63DD9FAE
7F27D1386C420243DC488861D1F23323E17078BC5597B4ACAB4109E0A8D42303
37C2E1BA95F3515B5C1519F6B765562A1D1EA68C292E0327170C893C5CA6E841
402E82C0DC6778A1837931F7E50FA2F3160BE0AA7DE99204C6F3B8E5D5E8E409
56A271CFDC8376B677AD235410AAA654F0E3CE80A732CE2E8E01A58C7443FB4B
366806C8810F1A379F7307B7A81A0091D930B0C6E99EBC7F668EF03E96784CAB
8E6AAFE7DF9E1F79015EC0DA61D096A23123BB56A06F30D3EB6C714A5C0FFCA4
4DC9C496231F8C1EDDBC9B5201EECE6526464414DFEF7FA5008B3DC8A3C0D9B9
B27264275736986FABAB6A844BA69852DD42CE078416123EFE57601A8B86AA4B
E88942DB19D206334E8809F86008883E9F28B99B95C18071BA26321523B5E3BA
09A0565FD38A1DFB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 20 /lessequal put
dup 21 /greaterequal put
dup 33 /arrowright put
dup 50 /element put
dup 102 /braceleft put
dup 103 /braceright put
dup 107 /bardbl put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57034F6B6A67AB666E15104577F342F68
CDE6AB4EF53E08A8E0552B76072FF46E80AC884959B54D147A9D5105D1FC6B3B
BEB747B75D6E6A3BE833BFC95FBCB2A23A8697CF76D1B9F09F567345137B24FB
84474441D5CC4C121EE3C00C85BF44A4AE873BDB4194882445B788B6BB493660
438A9F3F804726DD6260C64707B2B1DACB291D4DB0CA4136DCFEFC1DB4BED492
C9FDAD9FDEC8B94FE308309D72397CEF54C9BE580706D6D4724273F9C82E0AF9
538D5028A1B8478FA3B53F0907C75A4749C923F21377AFDB455AA6F2784C9829
DD6FA52F8E856C9BFB8FF4381CA9413335CECC2A35854B46FF9AC2B13D58C7DA
8509E802A36B2F5E5935333D8041DDE1DA7BB0E002B20EAA64A2475AB3FCAA98
E5D5534087C44D74FC4C322D9C3123F052B0F9503EACBDC9F898DE3ABAF9F193
F98544D828FD88E852A59AE4D38E4294B7E320699A8087A6FF45326945225931
EF231F06DEA8EE930DFBFA611D72D7E5A53B272E4C4E164D0ADD45DB05CE31C5
6CB3F4CE9117E3F436F14AB8CCB67E90D5DFBAEE1BA103F471F359BB97820E22
2220DFC2404FF92B88E248DE6910C5D0EDAEB4F6A04FA21D4CE6296ACAC15D51
5EDEC66699AC997EE0F4AB37F8AE3B758707BA4F94FD67BAE586A5C3F3EDE9D8
98F0F5E810A665B3ED6994ED4C664FC94A7A23EBAAA314E020C9DEEF5D57DEAB
657DEC70CF7B333D38755DD387628804AD7CA5DED568186D21458C5FC41AC1F5
E413A94A429BE4737CDC4A0BBA5FF3D927EE4A32E15734BBA9A093451FD02492
5FF995747D23501E209D9EF5B8B0F716D224B93A394A38F3C8455CE7537DEDFC
FA488870FD7E6AEEB594154CA7BFBC83B08BF97751EFE942318C5DD126A28977
0C3D525DF4EB655A917C1FBAE7C664726F40BD556E30271616DFE67BA651E6DB
A0B7A7A8448E95B7EBD4D04FFA9CD8CFC55BB1882349D35A3BFF3B9728894923
6EA74855732A4FEE0F9B0015A899750F888B33980ED6EDF6CC42CEF45C0BB7BA
93914BD397971DBD1F3BE5C66D51C52242EB49A59F23DB5566C50574C291BD78
8D85043C84A5BE8AF427AC060220EA0204FCB753DB399E6699CF35782AC528CB
7AA1F39FAC11749D42FCA8A5A19D728F5459394E96AA7DF39EE5B126325A56FE
EB262FD227AF1375734E8E85FA09277FE204DFCDFC258DF6C4796E3D3ED0E9B6
917B3885D47FAEC99EE1F86981563B63C95A7FC02418740051704B1B4CFB231C
16F7D0151D8CD049CAC29C35960F15086AA5D33E15CF6D051A39245A9EEE5AFA
D6A1A4EC5CFDE5E142CD826492E5F4031A234FB118ACE05B86D700191A0A108E
A611A58E926B88C69E7C7793923D47C3701E8CC50E456C9FAADF2CB600C40FF1
7913CD498B7A6D1213983BAF3A5085B19A8F8EC96F87222D1B75EBEA947A3B0B
798438CACD02D02A0D0AA0A11F38562EED2AC458BDC36740991E1031490DA505
0EA72AEAD2AD9D55177785CFD5B46157AE0497038E5FF130265411102F8B58A0
0260EB90C8700EF1C6E9E1AF70897308B76E3B34E682EECD28667ED635392189
9BA218C300F771CF870AA02BD8E684347C7A05CC3E317A9EC6EE7F0641918ED6
32C2DDC22E6BA1943327D8E7FC5171F203F6C88412DF3647657491405B7F80C1
C34501FA86FD0C6EB406D8FA1337DBD0AA237CA11ADD07592349019C22D354BD
F01A855B3A2E2EF762F2248337007A5FDBE7363EE427C74145978D49085AFEC5
4975BBABA244661F73F245C26D6E091CB880C95D3735F38FC72F2CC95DE9B187
9B0198BB22441583766493C0B18565CF3510DEFBEA7048599C42C41D3A4A5D80
6A6FD1E1144A0F9499C5B8583C34526BE1FCAAD366C287FC6B69FF8850668E77
B14BB8E2FE862C816FBA59AC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 26 /braceleftbigg put
dup 56 /bracelefttp put
dup 58 /braceleftbt put
dup 60 /braceleftmid put
dup 80 /summationtext put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
/UniqueID 5000774 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1CC71EF3BE29E7C9EC47F20088C52CAEC511F532AA38EAC7BB10B5CD5
285CF4277EF3F022DA5DF15D675BF1B108B71578F05696149CC686C1FEA63A15
F401D84C961CC5AB7407F206E979DF557E94FF0285FE702A00DAC1910803A266
21E2359954BF3DD0CC09CCD690E502C2B19C6BD25215822D2A922422680E53B9
449EF9116E9692D110AE3E6EB124B07B28A821A3322968A491987D18BE148C03
6DF0DCBF9F053C3811FA51334DD0DC6CE46D73B242B4599E995A8458BCBABF4A
A6AFEDE42DA91B20EDC8B3118200FE22B293759CC49D7E734F6547F81730E075
65D338EA6DF77106A9E8B3C32C9205D0B2DA84260E75B06C006ECB4B49A4528B
583B8EFEA9A470F31563B6E94E3688117829CF338DD2E04DEBB0AECACD60F5DA
4850F1E51E23A9A1013A31F6F9237227657189D18791EBDE0EE3FF76E2E47EE8
CE13DF8148214087B952C3B3703646732DA4E198A7405D1FD3789BF29A46AD59
C38779616131CD1804D6885445399DC1CA005463C07BD5D1E0559333CE8BE1CF
E98228754054326E6A358613E77119414EA426908BC9268A0F70D7456F174E2C
BC4B262A4984B5403592F00327BDC1918EBFB8904DE3BE04C03C133877A1E3E4
A5A3A8AD02A6F95111015C3706CED3116D8B03CCD6AF59B845AAB7AD965E8A38
ABF01C473B31D11A35921663D790AF77E12F966C30DFC5329B57E145D34D3ADB
2C2F2BE9F263A1655418C264151E870E5FFDE6D487FD2E638531E3C859E9283E
269A690D9CB7AF28EAEEFEF2920A040D7DD06E98E6A46874B438AD7AA47E0857
BAB8F745C21D1E9C3A43137F54CD4EE8BA9D7A0D6F659432BB54AD5438402F70
4E3C06D9EB961B941100409EFB181A734DD282DB09C1804A3446EF5C7609D885
BDC8649829289FEC8CABEE933898943722822801BFCD7F510788A86D4F21C8D3
1A9B3F44836B22E3E1D9DB88BB2D1EBFCB2F0F190179EB9E4F2812C233615382
1AF2FC292F3AFAF5C648BC3A2143D1AADCDD605426146B77D2A1CFF0FC9A9BA6
A3FD81F16DEBEC5CC0885FBA54655E7260066F9E95B35C52DAF1A6B9E80241AC
EADF8B59C85F10203AEB78CC91EAAFC30A2291533327A72CE1DC701A64E26A55
46A02280AAA3F417ECF6E1C4E8BC0A3AD900F93593E4E4E6B387F38B316DEAFC
24F0A43C0E93DDD77F80B0E1C3F8787FBD3E8C9BF0242BDA43A33C7E39FD9154
4387D59A7B698CA431B6AFDBBBF23D4157D4AFE178518638B4D59278F4B0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 84 /T put
dup 100 /d put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 116 /t put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{0 -250 1171 750}readonly def
/UniqueID 5087382 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962EAC6E3EBFB8AD256A3C654EAAF9A50C51BC6FA90B61B60401C235AFAB7B
B078D20B4B8A6D7F0300CF694E6956FF9C29C84FCC5C9E8890AA56B1BC60E868
DA8488AC4435E6B5CE34EA88E904D5C978514D7E476BF8971D419363125D4811
4D886EDDDCDDA8A6B0FDA5CF0603EA9FA5D4393BEBB26E1AB11C2D74FFA6FEE3
FAFBC6F05B801C1C3276B11080F5023902B56593F3F6B1F37997038F36B9E3AB
76C2E97E1F492D27A8E99F3E947A47166D0D0D063E4E6A9B535DC9F1BED129C5
123775D5D68787A58C93009FD5DA55B19511B95168C83429BD2D878207C39770
012318EA7AA39900C97B9D3859E3D0B04750B8390BF1F1BC29DC22BCAD50ECC6
A3C633D0937A59E859E5185AF9F56704708D5F1C50F78F43DFAC43C4E7DC9413
44CEFE43279AFD3C167C942889A352F2FF806C2FF8B3EB4908D50778AA58CFFC
4D1B14597A06A994ED8414BBE8B26E74D49F6CF54176B7297CDA112A69518050
01337CBA5478EB984CDD22020DAED9CA8311C33FBCC84177F5CE870E709FC608
D28B3A7208EFF72988C136142CE79B4E9C7B3FE588E9824ABC6F04D141E589B3
914A73A42801305439862414F893D5B6C327A7EE2730DEDE6A1597B09C258F05
261BC634F64C9F8477CD51634BA648FC70F659C90DC042C0D6B68CD1DF36D615
24F362B85A58D65A8E6DFD583EF9A79A428F2390A0B5398EEB78F4B5A89D9AD2
A517E0361749554ABD6547072398FFDD863E40501C316F28FDDF8B550FF8D663
9843D0BEA42289F85BD844891DB42EC7C51229D33EE7E83B1290404C799B8E8C
889787CDC2B27F188AB67448F8867C398C58491975019BDBF4DE65AA6D0FC041
27A1951DB5CBC2A26FC2E1845EC07146ED9B8C22C68C664DA1A601F810654A16
3354EE28B424F531C42A8C2EED7D2DEB9C4A14A9BF566E798822AABDBF76FEDB
DD66F8877B79AE427EA870C9EB4A5BCBA6F3B588C670FB4BDB2238BF9A6F1EDE
723B3BDDDD51D519CD335FB60A359D5AA5406C622F132FD54CD1D0DFA16024D9
166ADE5E4FC754A57362B42EFD532D6FEC16EFBB1FDEBE5B389A2ADBBA90F406
29543E07437BFF6DE3DD75FF3C962C69420786F5AE86C68DA95AD59F308399C4
91C285B6C7E78D4CD4AC2B7341B2C359F7F64B0E42980D6749393C6E3EB2B5C2
741D9A8095CB406C18E6A4AA6C03D2F886E92831E4E6FE9631A7D98086FC5180
FFC69540E06173230FC1416D6A6C398B63E6A846837E6CD8E0880EC3D0630EE1
BA943C09639042A6709D1F232ECD332FAEEF78BC7A8ED9BE69D6B4B5D07D912B
54A4AE0C7F5D63601E44A73C4B33CF5FABA7A065D6EF20A9B029BC5FB0DF94A2
5E753B18662F97182BE781B8EEB1BF1BA09F208A04BE9DA2C69B0C00BA7CB867
727574631E9C67B6612CC9643334C683A1D128C1D5F1AC4E99A03037B154B012
1EDEDE3B00F2B5F36D48F38BDD29606A005000DCD409011BC0849AA8E983610E
82718443EC011792BECAD3106D63B32981382FEAFBFB3736AEDD61410C5B88CA
37CE8175898A62B2FD3CD42B8B00E1CA04C289259F74631564C81016253D48BD
C6EBA5826C7F0EFFF3D2FA128034B500761D8A7AF6FC3263044E2F5CC62ACB66
ED8D91024F3DF69AD35D447E9958BD1398F0E4B50383629BD6B1B86F6BAAE817
D156636606F2AAD88B3C1CA251A40EFC5B587EE83AC3873E058A9756A2438BB0
DCA0EE44C1F610E384033AE9FB50FCB452C8E5A0FDB244B634C2596492F64F4C
57FE9D04E79A64EF734360BDF0ED84A6CF5DD9747374EE1D8DB962935E0CDF9A
1E7315932B049DA8405D68D3A62B1731C01AC0035D40D02797D9AAA8AB2C0797
AC67676D5EE4117374159E501D3EECA4744E4BE92DDC1E044A15AB9FD28FF794
43DE85CBA75C6F19D02F294E1A172B974DFFB67C10B6F74BDC0E28A1BCC3343F
9248E018D87CB8CC1CA362B4E2CD7B3BA2AB2468A917B438FCEAED26D7429E1E
FD62BEEE35A298EA9746E09BDFD3B027680498DF3CA4EE452254D93FBA212DA5
981E52D5F4FB2F37A3E129B7D8578A1B60CDE5F840EB567D5CBE1A42D15EBE05
870FF83138150B1CC387E2A66F9116D7ED6874EA2420E6FDF42673023E7AEECF
0ABEB097187D4E191B07A5EEFC7FF442ACAE26173840E14C8BDB859DA4C11108
9D4CC1FB39CE0D7AD9FE64C62C98B0F8F2293A5B0082A01830612657431F8D64
67272AF44592EF8D03D584DBB307C6B6014D0D01C53063723315647DC1D8A7F0
92FF90DB13CF5C31617936AA9540524820CB568BA1F1876C1E59B172EFB9FD2D
22EB8865E48758BD14DCE6487D72F66EADB2B50FC8099ACF1CB8023036FE07EF
68C9DD52A297A222B4391200DA42B1DE65A12F8B6D521101D3FEF3F53B02BAC7
009DD7D96E6B4711FB547A69D62AAB34BAA9059A1D3D457A14F86E2C75D61428
109C4DAAA8002E08EB3C75CF2CEE696F90AAA3650E9860C4004024061544A313
4E6483924E0AB7E7958E3CF2105939B0BFE664DB4266C83D7E02E3CCC2299B5F
2B25CF2825CA54A698993E8E04E3D7BAC0BEE478A04FE770D9CD196E3C959C11
6C9FF7E5D7D71CF18177FE1451FD3F86C2E203D63C9A415FD589BC8567380169
66FF1E489B66F7BAD0FD1511198F8316A9B5D2ADBAFA9E69CF3BA6F50ABB3BBE
BB68FD1153D656447AD2F732C94C2A2A41C47B6092C665D0641DED8B9B5D0EC2
6C51661FF0434252E369412EA68B78E465F01076D29C46C0417DF5F320BB08B8
1B62C0F609CA289BC4C27119D34BEB90B1B3851C8D51C0E5410F2ABDD2D07B90
C5C4692B664AFE220E3B10B910317619ED13FB8962E0583671BDA8C4C4326D9C
AADF6568F3D1334ABCD20DCEC3D8ADDAFAD266CA30AD8FD64C1E686EEC5E3A16
9CEAF2591CB5E4AB3F673DF4264E77B7C48609FBAD8ACC46F68BE5C6AB0EAA5F
2D8CF62555F9292C678D7B86507A74A9F0EFD9E9502C6AEAB5A774A0E84479CD
B4EB14671AF7E16CF23AC8C518812CE42289D27345CEC60AC0FC6B98C3F38EBA
9B77A0B9F9E667F7FC3B1CAD9B611B2362633D3724A0C2CB01ABB4EDD1B1AF14
26D738FEDB4A2D189475E76F09520D64F15ABA55FCF791E9864E8E0C8C791D64
19BD41A459432C1FAF661C3985F6B924DB0C1B64914721AA5F1E4CEFFBED9243
8C921A98603014880EBE3A54C44713A65BB4B5E018797395815421FA655B41CD
D108BCE35564B1BEB22A256E82B55BA7B20AE265BC329D8F2F8C8DC5C985FD23
9CA3CD3ABADF493A7BBA55C436B5B30EBF91E5D4A39EA5EDFFC77D247CCF9115
AA2005E73CE298358CF6588B09913A2E4796CCB968A5E837554404D4648A5F20
5090034040D3D105487EA7724822DCFF856692080181527B625F8128AA3B6065
F71527DAEE984CEB62EB1726407FEDDC301738C9E3C089D507974349033065A2
51BA5D68B7EA74FDB75C64983D4CCC5875BA2B75B7FC4E958E7DD103EE145D83
BC3510CBD500238410B8B517B9599FE5AF53C91335623B34988296543229CDBA
3791A62ECEB4C90F8AAA6B233EC0F76924FBB7CDAD19D92B9637998229FA6E6B
A72087E133FB3F1B52B6241EC3D2262DE24612A866929D5C17FF3E091D104088
176733ED74ED72BC9D9010EDF6BD520AE23366AAC73329F981E1471C4D1E0BF6
398ADDA0C6F2314016366453FD46A7BCFE998CB067EE69E8C6B057963F5717D3
A638C0779ECFB32A348F3F4E06FDD3E6D98BB0F6B765B03B021E24C4CCA458EE
6F2A7107A7245849B5A640CD2991240E41F6A82E9CC72E5D3C0381A1D16E37D9
7D1D7C9BF9541328FDAEF26EB36FCA4B37A94AB49C2848DD6239C877FAEF5238
1E75EE4ECC288D40A544FD511621374B7039260CEE4EC6C83F92EE4A66FC69E8
A66D142A43CC720C295AC123E81F234B3615FDBD61B74FD56F00B7A3B45AC682
96AC2F3D8BBF6A0E0F79337862EEEF0C3C7F726773C50751300485350EBD0E92
8EC16C0FB1A5772444ACCF56C86D643A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.1: CMSY8 1.0
%%CreationDate: 1991 Aug 15 07:22:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 102 /braceleft put
dup 103 /braceright put
readonly def
/FontBBox{-30 -955 1185 779}readonly def
/UniqueID 5000818 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFBB2A7C1B5D8E7E8AA0
5B10EA43D6A8ED61AF5B23D49920D8F79DAB6A59062134D84AC0100187A6CD1F
80F5DDD9D222ACB1C23326A7656A635C4A241CCD32CBFDF8363206B8AA36E107
1477F5496111E055C7491002AFF272E46ECC46422F0380D093284870022523FB
DA1716CC4F2E2CCAD5F173FCBE6EDDB874AD255CD5E5C0F86214393FCB5F5C20
9C3C2BB5886E36FC3CCC21483C3AC193485A46E9D22BD7201894E4D45ADD9BF1
CC5CF6A5010B5654AC0BE0DA903DB563B13840BA3015F72E51E3BC80156388BA
F83C7D393392BCBC227771CDCB976E93302530FA3F4BEF341997D4302A48384A
CEFFC1559BC244835D66BBD96C8A7AA401277C8B7017EA120CCBEF1CD6E00F0D
22EFBE943B7863A7FDB62070671D966D5A13F9DE8E576861C9FE1BDB92A8BA02
A44BAA2E1461DA7AA97AC9072EC691F74C0E1C03BD3CBC39870CF40AE25F6A80
0D4B051AC8EB2274DB4856C1CA62C55B122A97CFD0AAA8B37F8D7DB642A58280
CA5AF2B4BF2207AF703F8902A8BE19BFD9BBEECD63D362F819E71F6A02288C08
050A7503B4C8BB5CEB75C33C47F25C641F119E55BBBC4AFFEFC6F5C138B24041
DC0583260A33E4F75D0F14E5CCCA41E94233C670D1884554F334AA0A6C736077
83445B1DDC9185AC8115B4F590ACDE1D473A52C89AED7F77DCBD773D8C3EADF7
166D328526B01FBA4BEEBCF52E4B39490A3B3766730036ECFB481D255E317DF4
79432A95C4F1125EB9903AA9FE1CAC8003EF0DDA0851215036449C3463822D0C
6DCBF375FE062BCD746000DCA10035C3A3FD8371E83A4491256816081D9CE0C2
8A645903FB0DAEF45CBDEE53BC6391F527A92AE5DC2F6C1555711280A7EF311F
8BE208326B1E2D31D01387DCC5EB47808CF15D610D3D0EBC48EEB2905A86E2F7
45804E51470A75A82FD5D9EE32BABDAB67F4C8F30E845BBB8FD4DDD885ED613B
997D63DF0D6C5BBBBF249DE7CF3DE605B3EBE10CD5949B4D092860A4D35D8BF7
BA9F53639E5CB4B0A8D044C5A606E7D9DC3AD3DD15ADFB6BACAAAEFD9ABEF05E
1E0F2BCBD125A3D4F52634EF6C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 109 /m put
dup 120 /x put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BE5C79A3B8E6D18D7
18CB10253918FB0526410DCD39DC7BF230AAEDB151ACE05AFBFCA3F67F0E4016
2552A51A9C21114523A32079552DCCF39AFEB2860CB7E995D3321EFBB28EF0C7
CD4A976987E1629418A4203F5BB3CC348AC52F4F0862D035E6AC4135C93FDF9A
A2BE70170825BD67D086B2280D22A2C57C040E6A6F6F4C77FEF78091F8E33467
8484A169F8ACD321FC39388733CA1C0B86C4291E60DC73CF1A9075D0F61488AD
74097708FFE51924523600288E374EDCA9ECF658E4B8978DE1907C5B7D40753F
1CB2682E0EF94B6F2C482E965CA923BB65C781AF4A676665462D1FB49CD669AB
A5FD223B416C7989663041F9EFC88D77D02D39EC1157D538C0B41C1685D7C0CF
2B8E9FC3FF3B65E9B480E59D1FDE2AC1E48300B064D30B108DB8458996DE4800
556902C4AD9263473BC3B926DD8420D84FF4FD6D3263FB9E97AEFFFC455301C3
F3A087F4CA424BD07AED277754FC1DBF9E7C5EF405AEEF627834EC97D83D0C20
F1C5F9FB899A326BEAF8EDE7CBFCD53B1C5EB2A498839FB2C86B7EE679DF73F7
FC0EBCBC0DB5368EA374F2D623721D38E3F6F3024BC23065C4640FC87709086E
4A434207F479B9776214FDE117584140381D43F8F39618E4F572819FA8260363
C23854E958D05EC0626BD6F367FD211F719909127509854D16573B1A35137947
B8D1D0BDC6018A7A876FBF9406F5FEECC4C7AB6DF2C527283E786DD5B7A331AF
7237DCDC2483E367DD892F6347E5FC212A173F4C57FC6C5867652E35F4E7C1C6
B44B38419BFE6EBF727A6A212D64423CD27DCC76148BCD2C4822031CD30D1978
00D063241B190836D5A9CA98BE49C77B9792949BE7E93EAA719F777413E90013
8FD04722B33B639B2C2FB22523EBF7F7CFCAE91B0C5EA9502100E1A065D690D0
309DC9365D90E99003018DAD55A5115A0DBDF30DA32169927F6D6DF2BA371699
28E7F06723F1FCFDB053A8D01F20F126F94694A52779B387B62E677AB94D7C9A
AE53C60DE5EE3A1E09CE2A3246B9B5EA106E382DE4B46F8EB3B207344F9CA529
89AD8A876F13387AB0CC3BBC829FA6CE8505766A92A30DCF28A4BB318E2697D8
D3B7B6E0586A00BD2C2DCEA73D94F88F9DD2E468F9D8A3086C3791339D1F2AE4
9C8A1DDBA754329FA92CCD80BCE795C7E7727B7C8B5571DC0777E8C06779760B
EFB5309102E646D2597225F817761911F0B5F542B39CE125D733D1B7D353CFB7
500CA2400526600CE10F41E21AC8952CF242B55F8AABABE3E1EC9A63D38B5E69
FD2598BA7B39CD34B050C48695ABF5E01CD2F22FE133D0565A443239A60AB6FC
3973BC11704E0AB3F3DE48229D4A504D6825B693E7A0C01496C18AA96C3E38FE
DB5B2C5BC0CDEDBB06AFDE1D8AE121384DD392B1C32B6F34C9F011D4324290AD
1AC7E7AD98FBA14C808A06AD4CAB69061241AE3B5D06795C159F5E1B5E1C5E3D
E9092DDEBB3E4FB5D3FBC2D03F919DC22DBB621D40994F1B1F8A6E1F4F7AD400
D25BD9E9E4E0BAFE3B5982F5471FA187B9D22E64FB766DEDE42FBFB1F3F5BC7E
49158A61ACD634DD51DAD6A06A9231F5DDFD8E7D6476B6AC14F9518CA1598ADA
085E31B669D14C99CDD9E111A0B81803F50E58387C17D3ECEDBD27C77104C8AE
5D2A6BE8EF4250653AB8768851F152921C413BE96983EE7F2FE80CB8A53E6A88
E69299CA11DF68E06B847DA9EB7B09B82436BB668115C396B33B27B760EC329C
7F244937480BE5C9C552DD183742DB0AFF762640ACF8EF2E6D1CCA92B88742BA
69A0B46531FF6B7718F0339532F0E92922D89E6F6AFB968E022102073D464006
874EA7CE306780B16E6090F2C0035E5CEF12E3F5B01F9AE999A1EA9EB970D03F
689AD9B81D71602D9F2FDA992B7704DF82C8B44F91452D295A765F5D594B522B
E3133E2000EF794A3FEEE724684215B2C14B665AA010CB68DDBA3DCA7073313F
6D3115E34A5108E8D7007D5113FCFC7A960515DF446C16843D4AE96F0B9513A7
2223FC46975BAC8044BB989563EBCE6857A45DDE965C9372EBC7CFEB675F545D
4F34AC3EF9A94F7F4E417E16D1FE232B798AFCB164F6862105193DB3DF1D8759
3479D66F6DD63DE2520FA782395624ED0AAF93E7FC879AF045DF1A4A25ADD1AE
C13EE7B2DE41637FFF9A1ADE941953ACAA0DAC54DCF24208D14D96FF40B7A6A7
86904C206CCC6B1480CEDEB94CF0C23EE3C7964DA3AFD5C734DCD7097DF30DF8
68C35E8A53FB9BE7976A2506E8FD2B673494C8B12C84A7CD21025967A9D85498
C0B9D1F7058682A1BC680B880500293DDA9F8831EEB73156478D3C3540228254
67C0AA55C7EAA9ECC603229AAB8DD34DE9BB738F0EF7299B402C092AAD71947A
9B77B2414E5AF9561CDA81FDF684E7F243C7C98FA3E9E955C7D332E78098EDE5
8FE2DEE6FF21ABE22733EB04B366F769106B8DC6C47B1C00E772EC136EADD8C5
047B2A106B8C57B417A6448A32E6125E4121F2D57E79DD5BAEEEA14A5D1D01E9
F92DBBB747AF9E0CF9F1A2FDFACF86A0F74F7F13285EC488A60555E6EDB68B09
505C1C90BAE275CEDE6D02829773ABD45E5855422497233E16E22A410F8BE7CA
96E1C2EDA95703FB29A531C343D9A431CC198838FAAC8DBF07641E786225D15E
86C71477F93BA48DF2184A94B03BA3223F6944AA7312E1E031AB7F7BC87EDB65
0E9FC77714885ECA3118DA15B9A5CBD9CA8B7B66927E32088D0BB997BE614B4D
854856E2A7DC9849653FFC800173919224F5B9E96AE5F541998C7084CCC47599
120ED60CAD816D5D6D5A03F68BA9714BCA8592292313B939CB284353B5DAE4F0
D92018B42740FC7524E4D2E95D6E4ACE208AA17CDE4EF872C9CE860458CA8AFC
B1E1A56564EDEF53151BE1EF2F145F5AAA728B5482FDEAA4AFAC1C2595D572FF
48D00C0EB0E5963FBAD792AE76B1280C0E0107ED4992130D2655C60E42175F7D
B554A923A64C795E3B6D5919721F71746B4EC496A8409E0EFDE80A292177A941
2F283232BBBE44B7D4431262082B245E3D535569DB4987F760141C5AFB84D845
A553B3D7A02E4566A500514F31EC1DD79381F38E02E033297E01085DB445F384
D7F2822B4BADBB5C859D398A17DF99623A70B156988F096BDF43942D470FBE91
EBFC03492A8607542E065AE65E67307E6EC2A7ABDCFCD5997E1CB523F02C36D0
06165CD28541A2640E66B293826A116B6D47CE1D00EB32ECA0C6923D5FECDD86
E008E899C30EFB930D8E8A66646008C0C0D08A9F21E7EA5A2D065E723C1DD919
6A3978E0E4378F4C4AFF9D73D00270EE6ADA12B3FEFEBD9C212956875A6BFD0C
FCC8010392BB792CABEBBB4A17412F587D528C3F7004728E2E752BBB6967EE77
97DBFDF641517ACCF2A3A789096ADEDA39F77AD5F7770B10FFDC33DDB8BC88C9
7A857C4DA29923F4A64D0AC2D8619B85A4364ADE043A3BC12B6AB22708169A66
B81FF74721B84227ACC30989FD28D52CDCA8F1522156829D82482A52F4184B54
7AC703799DD33C7D642329CFB1E1E69A26BF576BDC7111165B5BE2F2FEBE64A2
6507E137763E3FF8D161BA407FF9A3ECA47721D892BB7BFA6848E8EE9D0908EB
2E0868BDE0AF2E3A12445DABC8D4D5F9C805B3CEE3293C55E515EA1C41096955
EFF16741070B1C8C563C3EAF817CEDF9B672756D0CADFE2E5869B099B898D12D
DCADA63B10F83174F0ACD5FF4F8C9BB86E3BAF29BF17CB258AE41A287E064073
0E1DAF6409C9D59D1CC963E4DD8AEB2098FA6D73C12873FB033DD290349529A5
AB05E4C0D9FBD66A39A45DBC63298ACA633F76CC5E0BEB90ED615F111A9B044D
86E56A73F9986EC8484721882AAC030D1A5F85A0BB1ABE448B3DCB016F72AC8C
2B999156EC4C674978669B052D0CC059CCA44797B4B63C8888BF207FE76BA16C
E83517527270973029CFFFAAC0D610ADF0797247A2A9D36BF8169614BC089B56
F9BE16C5A42D0889D28E67B5F0321DE98A66517A9B3FAC929A8BED3FA9C17D36
947B37384399AEFB922FA1C648C387DD455D52B929878FAB955168CFA80DE254
C8E90824B54FF006A069C3240034D6745B8CE40EF739FF21AECF663ACBF8A432
EA19D0A372FF3804158723595AEB676DB611922DE6D19108738E607F30411168
1D56D328E44028B2259384E797CA67E7B4ECA47D258B29656D7F3B3307F1B686
B4C0E4EC195D871CFD30771BE00B6635CF85DA2269EE5AA8E66F8AF9B4394D22
35DEB05CDB8950452FF7D9C0AA1E4726449E2EAF1782620E5F00B1DA8E6A16C2
9AC1384334ED90D0BEA55D1A8DB7C62E8E6839E8CF4145B41B2ACCE5A3A13823
8A7533AA8856564AF06BF98E13E4EC5A102FD9DE92E4FF2E71599701F635B252
3DF169D4DD24C9F649D78A5FB4CAFDE855E4AC73D46A1482127B5AAA1587FCF4
32E1044DB7A43BD201009AEEE09E10EF7340419B7B4C0D64417726B1DE9E2658
6FA2B00EC2BAB43EB695333803372774AAA6C6E55D5BAB59AAC830DAF2DB8DE1
553DFF6303AEB5939CDE7993F23778F6EA4DF9FC8D5E6CD29A72798A8AFEDCE8
19DD48B42138F6A6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 21 /lambda put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 62 /greater put
dup 76 /L put
dup 78 /N put
dup 79 /O put
dup 82 /R put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 107 /k put
dup 110 /n put
dup 118 /v put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC27E4A7E07D09FB08355F6EA74E530B0743143F2A871732D62D80F35B19FD2
C7FDF08105847F13D50934419AC647CBA71DF74F4531DC02BBDA22AEEA3FBBBB
407E0ACC52BDC60D01A29407CC4F93EB8BF6D4813E9BA858D54F38918AC82720
4956D50291F0546E50FCAFA6DBD0099123F5ECD4AB338DB310DB4CAE11337A89
8ED99B6F483940C97544F888EAF0CBEB11094A13C073D0061808662A04A82BA0
AD35E8782F854AF66C20C0FEF18D0ECDD1646321B93D327E53D88CA0E825FA95
05AA57BD70EDA245A4843C04BEC5FD7A33D58AEBC8E9FD6D920194F2DC677FC0
AE0E9177BC16381F3ECB7533362C032A37EA8D2854B4F6AA09E0A89325AE9614
D31AEA48D1EBBC61359D10427DB8B4C755E036729F85BDA61405C757310E56E7
189098CCD83E5C626B656B01A8D0BC4B2B4CB6DD91839A496960A7410A13B403
A1F43D0C25A18FD316206075318E48DA467301BAF63ADAC4FB07C06F989B9F56
520C83A1F936D678A30C179DB0ACD5DBE6AAF266C83C79D1A72F1995C83F87DA
E37FD618A227D008691C2EECFB8C8BE104AFC4A835B717CB244E7171BF0D04F1
3AD18C312AEFD997C830A04F8CDD7FAC10A93D7F1EDB3EAEFC797204B5B325C5
A7DF828A37A849AC241139350B590C4A4739BC3BC6F5944DDFEDBF946222871B
7DD260FA2EE93E51DDA3BBB7C6D53EA7B30A7771A63F9F2EAEE423ED686E27F5
507984520881013C9A030BFD5240791E63B67A0B6E882F140EF3CF914B9606D5
5BCA77EADCFE8C72023F3CFD70833EAFB64140C17D884D5D930010080C663099
8BD45F2D049BFF48CDFEFDF3E34B67326DF8D22B92D1D52C7B82AB3B81C62649
51EA77F520328B090F57B1683904597F0B9D9FCC7393DC80880957485BFDA282
C9D6ADB4061E22144E078812B42EB05A84525E66326872347297175C29A0468D
E337878D8E15A262C0C6D150427C07D977769EF84A40B7F0B54D677AEED66F56
BDAA99FCD40512AD72AD81DB1F7F68D0C2A2A1E43408F44BE9BB8E4AC2C0D5F8
7B290A01478656543EC9B1770E3EE0469119C469519E6974BCBCE784FA7728DD
6DF9DD153C9AC97872DF8B5AC5D4C423BEB43DD7B58DCE2BF733289CB0429D3D
E28AD10D43D1D39D55ED99F4106D3F7447181935E0F984412369EC4973B71FFA
07709E5FD93AAE1E71420936B121582CA5FCB5D941685116C02BD32BD94CE97D
4661B0A126FAA32D4BE950F1FEB97FD865F1C8A4B4F5EFE0208BC8A284EA63BD
49EEB1994A91EA03955D2FFC5A31E5ED64A25161F1F04095D0E28FA325D09542
C92B211838A87EC55D5195A01E5542E41C8B6D7701ACC05A0907A2E8C25F9CF1
23599ACDDF216D7C9417F18FA3E2677876196F0E6074E95DB6AA618A7351AF95
F483BEA81447CA26A2B77995E854A80A0A46B4B7910D916A78C324473E23534E
2EE3CA4DAB4175A6AEB07860E5432CFD2EC79768135196482AF779CCFC6EABED
1EACFC39B73AC3C00AFF56C59D7CA47A513381E92CC65BFF57F10F4FA696D9F7
25B2C35B3B9D65EEC39F5172ECD9CCBBC50681C8B756D81C617244E59BD2F996
76AFACBBB700C1C73E238C27507D67C8E5F8FBD5696D72AFB40BCB340C661F61
42FF3E60BAC2382A39A88EE984077632C4EEFE8D275A9468010534B7C3BCFEE9
A9488A3C0215A9B8CFADF467A14E6B6A519155D70A62EA3DDB53360DF5C30B5B
43895C32A71E3FAEC9DD526401830A0D12C4AB4C430EC1B5D764A008AC2FC2BF
D26BB9CEA798C688C12FE82EF377FCF1F6C049C0514275A2ABE500BC232D20F6
439E5B4C4A7007D8B87CB27B82926ADEBB2471B22181CED93B0DAB7850A43F06
86B7724868954741FC7EC2C18CAD523D4A52319D431B374A4DE46EAFDC62B9DF
C3D670C66A10296E77E2D30E5EAED33F85DFAF489020193C0B8BD8124F162C4D
A165CBC06245225931AE4D2176F8659A75CE0A11ABB376D68017ED3F20D5CE7F
0BA3E74CABB1A587E1FC677C277B6051E38FAC389851198D1C996FC867134DF6
C6C21D43C41334B0D99666D3AFFC76A3E56E2A722FBA480298D1D47C21574431
1EADBF81F5CA0F6043263193B5236BB2D62E9DFCD5409005254CE1E5431A458C
C2FBA6876B467AEB5B384FF1F6179F027C28032192D70A337D123047B3B471AA
3FD1CE0806579668DD75B49468EEFB65BD8654758E36CED2A13FD62E73FDDDB0
49A18A1993EFC1CF142D9D24C897A9A16EA064F04B30FB90826102EDE76E3583
F8922E9C7031663BFCC08351F447FB70EEFE83190EA1F7F17917316AF8E1BC90
7EF7D729ACB2FCFBCE8D520A47C230A6DCDCC84D2861D20C4AFAA630B612274E
EDDBABCADDED264489EC71341DF7A680EE6B7DB3201EEF753449A2A1E9ED789B
05462A60C54DA2ABD4E41CBB437DF97696176A4D06DF6421A34B8BD570220955
4EC9CBDADEA0920C41FAE9E389BAD58EF4B60BA5C34E89C1F8CB5C039902C25B
D54A913E0B6F64B0E56FF4DE4DACC5680278D3F92579C8E42EDB53B5B11C194A
93C19AF2846E3B1780046B5AE6481BE56D5EB748C59AF19ED96BAC73CD33D8AB
3A1923ACB54A6105903124B44379914A4EE1964307226DC6CABA4B073C6F467B
1A5B513277E8E89B40ADBC25CF1E9104C173B1048140C49A2A6C2749163BA77F
49A59428AAF74AF617B5CDE26D4789FF865F14E4CB090D3563DF096794222B2E
A9AD4C50F7400C39B7AD5D43F174F9E4A6412AC07D54455B302EE4BA47574C1D
D1C032E69F42A905BFCF78D10771D92F857B40CF721B70D043FD031471B574DF
3E2DD2AFBED889E0C23DEBDA66D68C0132F1173E23CDC226F798D578E8E44A7B
65F8F71143FBF7505AA48DC706A47372676860AD09B6C4CE70A3D2304501D868
AE5DB65FC06D168E049DFE276227C26BFDF0A103BD49AEE59039C5394484AA29
99631AA5100929FC0F4F2F39FBDCA14587AE96C7FDB2507C9697A9BE679645D1
7CAAD98349D78D5103DAF7F89890B3EDB6197038AA88B2ADA9312FCAB970ABEF
FC947B8C29072EAD4CFBE3A2585A9C64259AD4D5C22C520547A80638900CC4A5
C06A6A367CB46D41D0602FDBEEDD1CFCDE6E7F7C8D8E1FC006280D2230B57E09
F5157BE034E78BE4F0B99AAEAD7892466A1A0A45BF78E361E4934D7747CE726C
1D31A9F188F9927BC89806165BEFF2561CF62346353DA56BA7070022F0F118CB
74E30878E47694B7BDA6060B972F88C19867CFA7B42BB0522FF4CF915BC32BBF
D35A769F67D9C1E2C67120B392AEF32B4F0EAF6A6973B19D27A4F5EB227C9E1E
D17EAED0383FCF7E93AC164C190A41B9657F8F4BAF120107DC83778807DC8DB2
0A1AF695E5E6A2812553731B7C9AB07350A25D407A7492016D8851385447267B
40419DA0C922A99DF43719BBCBB9B99D11A045A36911A605003BDBC678A48BB6
D9F20E15F4E268D78DC111C7E23FD5B1EA9FB3193458D261ADEAAC17B717BC45
210A754A9FF56323C8C3B8D8E4ACCEE761DCD3A7FE95A8B01A9C69B508548499
B96999FF9FE3E0D22C4CE7C4C41C47CF7975D5D93E86C976181AB3E4490EB502
6D53F0FB3E19BA83925226D071B10DB6031F8823CC03EC845409A35476BD9A31
427D49E782067FEFA2C0385BCEDC40099915C3F0F5E1C15D65237499A1DB204C
A4DA3223E8BFB130B7BBD677B8E9EE430E08DC4B1FEC7FF2B8AF19A0276BCA0C
4533E806C3D62088D96932AC9D1291AE3641E4E203BD6612455919A5A384BA84
34EB3BD7051289FB7523B2F27CA1C75736EBA319C48077A7702BFF3D3505AEBC
A5568BD2E35B2DE393BCD0D12267DE8CA91142FB514D0674D16E82D993716E17
F34D46EDA17557EAE14C622705E0F87CD01B75C151E0F3E7BBF9DA246F887D44
ADF76DA285949F7755EC5264D31555D3F5268B44885E905665D6F2C569F28ADA
982B0BD2D4AB5135B67BF3DCAD564D5D3F2499425098948D8BD9C7ECBCFFDECA
78516493E1BFEE84017EACE76DA3D777C7B9F929A5C2C858ACBD507E3C8D64A6
D0A802D21F9A3E309E952DC8DC553AFF624A3EE66C2027A7CC3C62CFCC164317
197C0CAEC0000F66FBB3980DE72E21672879B54D551AFD92758BFBC2DC7B3AB8
1E7431C685838F99A5B8B9CB86472FD08880C665731F82D56391EB98822E05C0
74DE67FBB4EF79FB960B5694DB0852D1FCC68B42089FC67277AB68C83C78AC1C
7911D4AFC593ACF0D2CE4E1A2768DD0C0509CF151B8720C43BDA087A6755E543
9F2518199EFECBBDAC113984E4EBD808B6941C919ED2E0064E621E88094CE06C
4DFEC5E80D0FF30A1CF969F02FD2A92D3E9BB66481C3079888ACB22DCDDD1C8F
4B801189FE7B6F65B4482FD45D21B2120F371AC6DA9E4A5916047246F7650C18
C4C7DDD7BFD99B6D1E439AF0BCB0A269E8CF92D21DD06078415400DDCB4B68FF
2A314198CEC06AFF26BE63D8FFA3CE203C9F7126DFDC64BF8AA13C6E785B4F0F
21BECB574072A864A6799CF333D4AEE52550CE655327D563A97AFA221B662F19
42F9F5C1BBE5B46B11C9472345C26C65EA54FF10EDB929D063E29BED2ED8D2FD
85EB78E8529835F35409926CF9CDD555F927E9719C6E741C415306B2BA437483
7565406A36B5634CE1251B02DD3EFE8482454FA142186EFDA8EF3983B0DBA8EC
1233F2738282C57932727FE0D406BB39C0F763C1A54DC1FB529B8B6C37E4ABDC
904ABFA0D1B4EA2D5DD8DB4871D2921F16C799C1751F69E97C187CE68353CC12
341FF7F78F65F3E5FED3680FA2EA268CC117116C02F2918E1D5D4B2881E6F1B1
201C0C86E3CA830D8E546474307910905869CDC9490F4D786AC64C54E7A957DB
40141220EA116F3BFD00A76211C5C42DB3B88B793EB697E847468EEF259F3B40
2C9735CB9532A4EAAED2C5FF68D28530C4D5E60FD59557F8926C04BFF6552A46
D76A8D64E16F47AC720A75FE81E9918BD362750B49A7065EA4D74D36233F5D6F
3999FD1CB9C02F2CC7F6FAD700447EFDD7E419972C893E581033F8751C496A73
459468BB7EE03B41A984AE5D6F059F6151495C83E4CEEBB0D9922867242D541F
4E2E186755E71D567571232B7F59E8B14F41F0CB4A136E7BE73C64F7A05ADC35
EF151492A5A36BDA7CA825935488EF902D78C66F4C2212F26BAAB60E8BB8E7AC
652C6F2D0B6992F3EEF5307C6260D6FB34CA8A814563280317B33FD44ABFEEBE
3BAFABC374E2936D34FBE975B7D79302FB4E07A802505F97B4BE61EFBBBF33BE
F0168BC174A9B8213A9AEC519736C00E96EA3287596D34A9305B20B74FD744E9
9F2D420F286614688BC72276657C0A4E715307A7356D97FD542C0EA859C2D9AF
7176BCAF173A6CD4FFB75C3E6C5283E9E78CE23FA559FBABE870D5EB0BFAC400
8C135BD0DEC506F65A4D88DABCC08EC8615EE384B7FB7AE3FA59204FD07A173F
97725AFF2D51E8E9928910F976812E056285C95096
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (sample.dvi)
@start /Fa 133[26 29 29 44 29 33 18 26 26 1[33 33 33
48 18 29 1[18 33 33 18 29 33 29 33 33 12[37 33 2[41 48
44 55 37 1[29 22 48 2[41 48 44 41 41 6[22 11[17 22 17
44[{ TeXBase1Encoding ReEncodeFont }43 66.4176 /Times-Italic
rf /Fb 204[35 35 35 5[55 43[{}4 66.4176 /CMR8 rf /Fc
135[40 9[43 110[{}2 66.4176 /CMMI8 rf /Fd 166[38 38 50
1[38 32 30 35 1[30 38 38 47 32 38 1[18 1[38 30 32 38
35 35 38 65[{ TeXBase1Encoding ReEncodeFont }21 53.134
/Times-Roman rf /Fe 150[22 105[{}1 41.511 /CMMI5 rf /Ff
252[34 3[{}1 58.1154 /CMSY7 rf /Fg 141[32 2[42 1[60 4[42
1[23 37 3[42 12[46 3[51 3[46 17[28 8[42 49[{
 TeXBase1Encoding ReEncodeFont }12 83.022 /Times-Italic
rf /Fh 194[51 7[33 33 33 33 33 5[51 43[{}7 58.1154 /CMR7
rf /Fi 148[42 3[42 42 51[55 16[83 11[65 65 18[23 65{}9
83.022 /CMSY10 rf /Fj 175[88 19[74 1[74 1[74 29[62 26[{}5
83.022 /CMEX10 rf /Fk 133[32 34 38 3[25 5[41 59 3[23
4[35 15[39 84[{}9 58.1154 /CMMI7 rf /Fl 152[35 35 102[{}2
66.4176 /CMSY8 rf /Fm 135[44 10[69 11[42 3[23 1[23 29[65
1[23 23 5[42 42 42 42 42 4[65 1[32 32 40[{}16 83.022
/CMR10 rf /Fn 133[39 41 47 1[40 7[50 2[43 1[29 2[41 39
18[63 2[63 67 1[57 13[65 1[65 23 23 36[48 9[53 11[{}19
83.022 /CMMI10 rf /Fo 168[245 87[{ TeXBase1Encoding ReEncodeFont }1
245.311 /Times-Bold rf /Fp 133[37 42 42 60 42 42 23 32
28 42 42 42 42 65 23 42 23 23 42 42 28 37 42 37 42 37
3[28 1[28 3[78 60 60 51 46 55 1[46 1[60 74 51 60 1[28
60 1[46 51 60 55 55 60 5[23 23 42 42 42 42 42 42 42 42
42 42 23 21 28 21 2[28 28 28 36[46 2[{ TeXBase1Encoding ReEncodeFont }
67 83.022 /Times-Roman rf /Fq 107[29 29 24[29 33 33 48
33 33 18 26 22 33 33 33 33 52 18 33 18 18 33 33 22 29
33 29 33 29 3[22 1[22 41 48 48 63 48 48 41 37 44 48 37
48 48 59 41 48 26 22 48 48 37 41 48 44 44 48 61 5[18
33 33 33 33 33 33 33 33 33 33 18 17 22 17 2[22 22 37[37
2[{ TeXBase1Encoding ReEncodeFont }75 66.4176 /Times-Roman
rf /Fr 104[75 29[37 1[54 37 42 25 29 33 42 42 37 42 62
21 42 1[21 42 37 25 33 42 33 42 37 9[75 2[50 42 7[58
1[29 7[54 18[19 25 19 2[25 25 40[{ TeXBase1Encoding ReEncodeFont }35
74.7198 /Times-Bold rf /Fs 139[21 29 29 14[33 37 37 31[50
65[{ TeXBase1Encoding ReEncodeFont }7 74.7198 /Times-BoldItalic
rf /Ft 138[46 1[36 4[46 5[46 46 1[41 46 2[41 9[86 3[51
8[36 2[66 71[{ TeXBase1Encoding ReEncodeFont }12 91.3242
/Times-Roman rf /Fu 136[102 1[78 47 55 63 2[71 78 118
39 78 1[39 1[71 1[63 78 2[71 9[141 2[94 3[86 1[102 1[94
110 4[86 3[94 102 19[47 45[{ TeXBase1Encoding ReEncodeFont }25
141.137 /Times-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 180 91 a Fu(A)53 b(K-W)m(inners-T)-13
b(ak)o(e-All)53 b(Neural)g(Netw)o(ork)f(Based)g(on)h(Linear)1110
257 y(Pr)m(ogramming)e(F)l(ormulation)1408 518 y Ft(Shenshen)29
b(Gu)i(and)g(Jun)g(W)-7 b(ang)-82 821 y Fs(Abstract)p
Fr(\227)12 b(In)39 b(this)g(paper)-7 b(,)38 b(the)h(K-W)o(inners-T)-7
b(ak)o(e-All)37 b(\(KWT)-7 b(A\))-165 905 y(pr)o(oblem)42
b(is)g(f)n(ormulated)h(equi)o(v)o(alently)f(to)h(a)g(linear)g(pr)o
(ogram.)g(A)-165 988 y(r)o(ecurr)o(ent)i(neural)g(netw)o(ork)g(f)n(or)i
(KWT)-7 b(A)45 b(is)h(then)e(pr)o(oposed)h(f)n(or)-165
1071 y(solving)26 b(the)g(linear)g(pr)o(ogramming)h(pr)o(oblem.)e(The)h
(KWT)-7 b(A)26 b(netw)o(ork)-165 1154 y(is)37 b(globally)h(con)m(v)o
(er)o(gent)h(to)f(the)g(optimal)g(solution)f(of)h(the)f(KWT)-7
b(A)-165 1237 y(pr)o(oblem.)27 b(Simulation)h(r)o(esults)g(ar)o(e)h
(further)f(pr)o(esented)g(to)h(sho)o(w)f(the)-165 1320
y(effecti)o(v)o(eness)g(and)g(perf)n(ormance)h(of)f(the)g(KWT)-7
b(A)28 b(netw)o(ork.)532 1459 y Fp(I)t(.)45 b(I)t Fq(N)t(T)t(R)q(O)t(D)
t(U)t(C)t(T)t(I)t(O)t(N)-165 1691 y Fo(W)92 1581 y Fp(INNER-T)-8
b(AKE-ALL)19 b(\(WT)-8 b(A\))20 b(is)h(an)e(operation)f(that)i(iden-)92
1681 y(ti\002es)39 b(the)e(lar)o(gest)g(v)n(alue)f(from)g(multiple)h
(input)g(signals.)-165 1781 y(Such)20 b(an)g(operation)f(has)i(man)o(y)
e(applications)g(in)i(a)g(v)n(ariety)f(of)g(\002elds)-165
1880 y(including)36 b(associati)n(v)o(e)h(memories)g([1)o(],)h
(cooperati)n(v)o(e)d(models)j(of)-165 1980 y(binocular)d(stereo)h([2)o
(],)h(Fukushima')-5 b(s)36 b(neocognitron)d(for)j(feature)-165
2080 y(e)o(xtraction,)26 b(and)i(ect)h([3)o(].)-82 2176
y(As)34 b(an)g(e)o(xtension)e(of)h(winner)n(-tak)o(e-all)f(operation,)f
(k-winners-)-165 2276 y(tak)o(e-all)23 b(\(KWT)-8 b(A\))25
b(selects)g(the)f Fn(k)j Fp(lar)o(gest)d(inputs)g(from)f(the)h(total)g
Fn(n)-165 2376 y Fp(inputs.)e(It)i(can)f(be)h(considered)d(as)j(a)g
(generalized)e(form)g(of)h(winner)n(-)-165 2475 y(tak)o(e-all)28
b(operation.)e(It)j(has)g(recently)e(been)h(reported)f(that)i(KWT)-8
b(A)-165 2575 y(is)30 b(computational)d(po)n(werful)h(compared)f(with)j
(the)f(standard)f(neu-)-165 2675 y(ral)36 b(netw)o(ork)f(models)h(with)
h(threshold)e(logic)h(gates)g([4)o(][5)o(].)g(An)o(y)-165
2774 y(boolean)g(function)f(can)j(be)f(computed)f(by)h(a)h(single)f
(k-winners-)-165 2874 y(tak)o(e-all)i(unit)h(applied)f(to)h(weighted)f
(sums)h(of)f(input)h(v)n(ariables.)-165 2973 y(Beside)j(the)f
(applications)g(in)g(neural)g(netw)o(ork)f(model,)h(KWT)-8
b(A)-165 3073 y(operation)40 b(has)i(important)f(applications)g(in)h
(machine)f(learning,)-165 3173 y(such)f(as)i(k-neighborhood)36
b(classi\002cation,)41 b(k-means)f(clustering,)-165 3272
y(etc.)48 b(As)h(the)f(number)e(of)i(inputs)g(becomes)f(lar)o(ge)g
(and/or)g(the)-165 3372 y(selection)37 b(process)h(should)e(be)i
(operated)e(in)i(real)g(time,)g(parallel)-165 3472 y(algorithms)32
b(and)g(hardw)o(are)g(implementation)f(are)j(desirable.)e(F)o(or)-165
3571 y(these)25 b(reasons,)g(there)g(ha)n(v)o(e)g(been)g(man)o(y)f
(attempts)h(to)h(design)f(v)o(ery)-165 3671 y(lar)o(ge)44
b(scale)j(inte)o(grated)d(\(VLSI\))h(circuits)h(to)g(perform)e(KWT)-8
b(A)-165 3770 y(operations)27 b([6)o(]-[14)n(].)-82 3867
y(Unlik)o(e)44 b(the)g(traditional)f(KWT)-8 b(A)45 b(netw)o(orks)f
(that)g(utilize)h(the)-165 3967 y(concept)19 b(of)i(mutual)f
(inhibition,)f(this)i(paper)f(presents)g(a)h(neural)f(net-)-165
4067 y(w)o(ork)f(implementation)f(of)i(KWT)-8 b(A)21
b(operation)d(based)i(on)g(the)g(linear)-165 4166 y(optimization)31
b(formulation,)g(which)h(has)h(the)h Fn(O)r Fm(\()p Fn(N)9
b Fm(\))34 b Fp(comple)o(xity)-5 b(.)-165 4266 y(F)o(or)37
b(this)i(neural)e(netw)o(ork,)f(global)h(con)m(v)o(er)o(gence)d(is)39
b(guaranteed)-165 4365 y(and)28 b(time-v)n(arying)d(signals)k(can)f(be)
h(tackled.)-82 4462 y(The)h(rest)h(of)g(this)g(paper)f(is)i(or)o
(ganized)27 b(as)32 b(follo)n(ws:)e(Section)h(II)-165
4562 y(deri)n(v)o(es)h(an)h(equi)n(v)n(alent)e(linear)i(programming)c
(\(LP\))k(formulation)-165 4662 y(of)d(KWT)-8 b(A,)31
b(which)f(is)i(suitable)f(for)f(the)g(neural)g(netw)o(ork)f(design.)
-165 4761 y(Section)h(III)f(introduces)g(the)h(neural)g(netw)o(ork)f
(design)g(procedure,)-165 4861 y(architecture)24 b(and)i(properties.)e
(Some)i(simulation)g(results)g(are)g(pre-)-165 4960 y(sented)18
b(in)h(Section)f(IV)h(to)g(sho)n(w)g(its)g(performance.)d(Finally)-5
b(,)18 b(Section)-165 5060 y(V)29 b(concludes)e(the)h(paper)-5
b(.)-95 5205 y Fq(Shenshen)24 b(Gu)e(and)g(Jun)h(W)-5
b(ang)22 b(are)h(with)g(the)g(Department)h(of)e(Mechanical)k(and)-165
5280 y(Automation)32 b(Engineering,)g(The)e(Chinese)i(Uni)n(v)o(ersity)
g(of)f(Hong)f(K)n(ong,)g(Shatin,)-165 5354 y(Ne)n(w)24
b(T)-5 b(erritories,)25 b(Hong)f(K)n(ong)g(\(email:)h
Fl(f)p Fq(ssgu,)e(jw)o(ang)p Fl(g)p Fq(@mae.cuhk.edu.hk\).)-95
5429 y(This)g(w)o(ork)g(w)o(as)g(supported)i(by)e(a)g(CUHK)f(Direct)j
(Grants)e(under)h(Project)h(Code)-165 5504 y(2050375)2378
821 y Fp(I)t(I)t(.)45 b(E)t Fq(Q)s(U)t(I)t(V)-5 b(A)t(L)t(E)t(N)t(T)25
b Fp(R)t Fq(E)t(F)t(O)t(R)t(M)t(U)t(L)t(A)m(T)t(I)t(O)t(N)t(S)2079
953 y Fp(Mathematically)-5 b(,)27 b(KWT)-8 b(A)29 b(operation)e(can)i
(be)f(formulated)f(as)j(a)1996 1053 y(function)d(as)i(follo)n(ws:)2210
1334 y Fn(x)2257 1346 y Fk(i)2308 1334 y Fm(=)2395 1217
y Fj(\032)2499 1284 y Fm(1)p Fn(;)83 b Fp(if)29 b Fn(v)2767
1296 y Fk(i)2794 1284 y Fi(2f)p Fn(k)j Fp(lar)o(gest)c(elements)g(of)g
Fn(v)s Fi(g)p Fp(;)2499 1383 y Fm(0)p Fn(;)83 b Fp(otherwise;)3943
1334 y(\(1\))1996 1536 y(for)28 b Fn(i)23 b Fm(=)f(1)p
Fn(;)14 b(:)g(:)g(:)f(;)h(n)p Fp(;)29 b(where)f Fn(v)e
Fi(2)e Fn(R)3030 1506 y Fk(n)3104 1536 y Fp(and)k Fn(k)e
Fi(2)d(f)p Fm(1)p Fn(;)14 b(:)g(:)g(:)f(;)h(n)k Fi(\000)g
Fm(1)p Fi(g)p Fp(.)2238 2593 y @beginspecial 0 @llx 0
@lly 142 @urx 85 @ury 1872 @rwi @setspecial
%%BeginDocument: KWTA.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Visio-Drawing8.vsd)
%%Version: 1 4
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 11:27:43 12/21/06
%%For: (ssgu)
%%DocumentData: Clean7Bit
%%BoundingBox: 0 0 142 85
%%HiResBoundingBox: 0.0 0.0 141.732285 85.039368
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0


%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource TimesNewRomanPSMT
[/N19/TimesNewRomanPSMT 1 TZ
%%IncludeResource TimesNewRomanPS-ItalicMT
[/N20/TimesNewRomanPS-ItalicMT 1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1391 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-14, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:548da04a-4209-4369-962b-57ff7f0c521e' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0.1 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:548da04a-4209-4369-962b-57ff7f0c521e' xmlns:pdfx='http://ns.adobe.com/pdfx/1.3/' pdfx:Company='CUHK'/>
<rdf:Description rdf:about='uuid:548da04a-4209-4369-962b-57ff7f0c521e' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreatorTool='Acrobat PDFMaker for Microsoft Visio' xap:ModifyDate='2006-12-21T11:27:16+08:00' xap:CreateDate='2006-12-21T11:26:58+08:00' xap:MetadataDate='2006-12-21T11:27:16+08:00'></rdf:Description>
<rdf:Description rdf:about='uuid:548da04a-4209-4369-962b-57ff7f0c521e' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:4cc014e7-458b-4052-b11d-2e46368fd16c'/>
<rdf:Description rdf:about='uuid:548da04a-4209-4369-962b-57ff7f0c521e' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Visio-Drawing8.vsd</rdf:li></rdf:Alt></dc:title><dc:creator><rdf:Seq><rdf:li>ssgu</rdf:li></rdf:Seq></dc:creator></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 142 85 rectclip
/N13 [/DeviceRGB] /ColorSpace defineRes pop

%ADOBeginSubsetFont: EGPNEM+SymbolMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (EGPNEM+SymbolMT)
%%Title: (EGPNEM+SymbolMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /EGPNEM+SymbolMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {0 -220 1113 1005} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 192 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7C3C9ED920C533BFCEF627DC3963E487931C80D1235BDD70
699E096A6312D> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /EGPNEM+SymbolMT-Identity-H /Identity-H 0 [/EGPNEM+SymbolMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N22 (EGPNEM+SymbolMT-Identity-H)
/N22 (EGPNEM+SymbolMT-Identity-H) /Identity-H [ (EGPNEM+SymbolMT) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
0.0 0.0 141.732285 85.039368 re
W
n
0.24631 0.0 0.0 0.24631 -4.43353 -105.591957 cm
n
421.619995 639.959961 3.240021 3.240112 re
0.0 0.0 0.0 setrgbcolor
f
n
421.619995 601.019958 3.240021 3.23999 re
f
n
421.619995 562.019958 3.240021 3.23999 re
f
n
193.019989 639.959961 3.300003 3.240112 re
f
n
193.019989 601.019958 3.300003 3.23999 re
f
n
193.019989 562.019958 3.300003 3.23999 re
f
n
233.819977 461.399963 154.860016 279.899963 re
1.0 1.0 1.0  setrgbcolor
f
0.974 w
1 j
1 J
n
233.819977 461.399963 m
233.819977 461.399963 154.860016 279.899963 re
0.0 0.0 0.0  setrgbcolor
S
n
277.859985 608.640015 m
277.859985 626.100037 l
280.200012 626.100037 l
280.200012 617.459961 l
288.839996 626.100037 l
291.959991 626.100037 l
284.639984 619.019958 l
292.320007 608.640015 l
289.259979 608.640015 l
283.019989 617.459961 l
280.200012 614.700012 l
280.200012 608.640015 l
h
297.300018 608.640015 m
292.619995 626.100037 l
295.019989 626.100037 l
297.660004 614.640015 l
297.959991 613.440002 298.200012 612.299988 298.380005 611.100037 c
298.859985 612.959961 299.100006 614.039978 299.160004 614.339966 c
302.519989 626.100037 l
305.279999 626.100037 l
307.800018 617.279968 l
308.399994 615.059998 308.880005 613.019958 309.119995 611.100037 c
309.359985 612.179993 309.660004 613.440002 310.019989 614.880005 c
312.720001 626.100037 l
315.059998 626.100037 l
310.259979 608.640015 l
308.039978 608.640015 l
304.380005 621.959961 l
304.079987 623.039978 303.899994 623.700012 303.839996 624.0 c
303.660004 623.159973 303.47998 622.5 303.300018 621.959961 c
299.639984 608.640015 l
h
321.660004 608.640015 m
321.660004 624.059998 l
315.899994 624.059998 l
315.899994 626.100037 l
329.759979 626.100037 l
329.759979 624.059998 l
323.940002 624.059998 l
323.940002 608.640015 l
h
330.179993 608.640015 m
336.899994 626.100037 l
339.359985 626.100037 l
346.5 608.640015 l
343.859985 608.640015 l
341.820007 613.919983 l
334.559998 613.919983 l
332.639984 608.640015 l
h
335.220001 615.839966 m
341.100006 615.839966 l
339.300018 620.640015 l
338.759979 622.079956 338.339996 623.339966 338.100006 624.23999 c
337.859985 623.159973 337.559998 622.019958 337.139984 620.940002 c
f
n
268.5 579.419983 m
268.5 596.880005 l
270.839996 596.880005 l
280.019989 583.140015 l
280.019989 596.880005 l
282.179993 596.880005 l
282.179993 579.419983 l
279.839996 579.419983 l
270.660004 593.100037 l
270.660004 579.419983 l
h
294.47998 583.5 m
296.700012 583.200012 l
296.339996 581.940002 295.679993 580.919983 294.720001 580.200012 c
293.820007 579.47998 292.559998 579.119995 291.119995 579.119995 c
289.259979 579.119995 287.820007 579.719971 286.73999 580.859985 c
285.660004 582.0 285.119995 583.559998 285.119995 585.600037 c
285.119995 587.76001 285.660004 589.380005 286.73999 590.580017 c
287.820007 591.719971 289.259979 592.320007 291.0 592.320007 c
292.679993 592.320007 294.059998 591.779968 295.139984 590.640015 c
296.220001 589.440002 296.759979 587.820007 296.759979 585.779968 c
296.759979 585.659973 296.759979 585.419983 296.759979 585.179993 c
287.339996 585.179993 l
287.399994 583.799988 287.759979 582.719971 288.47998 582.0 c
289.200012 581.279968 290.100006 580.919983 291.119995 580.919983 c
291.899994 580.919983 292.559998 581.100037 293.160004 581.519958 c
293.700012 581.940002 294.119995 582.600037 294.47998 583.5 c
h
287.459991 586.919983 m
294.47998 586.919983 l
294.359985 588.0 294.119995 588.779968 293.700012 589.320007 c
292.97998 590.159973 292.079987 590.580017 291.0 590.580017 c
290.040009 590.580017 289.200012 590.219971 288.540009 589.559998 c
287.880005 588.959961 287.519989 588.059998 287.459991 586.919983 c
h
304.019989 581.339966 m
304.320007 579.419983 l
303.720001 579.299988 303.179993 579.23999 302.700012 579.23999 c
301.919983 579.23999 301.320007 579.359985 300.899994 579.600037 c
300.47998 579.839966 300.179993 580.200012 300.0 580.619995 c
299.820007 580.97998 299.759979 581.820007 299.759979 583.140015 c
299.759979 590.400024 l
298.200012 590.400024 l
298.200012 592.080017 l
299.759979 592.080017 l
299.759979 595.200012 l
301.859985 596.459961 l
301.859985 592.080017 l
304.019989 592.080017 l
304.019989 590.400024 l
301.859985 590.400024 l
301.859985 583.019958 l
301.859985 582.359985 301.919983 582.0 301.97998 581.820007 c
302.100006 581.640015 302.220001 581.519958 302.339996 581.400024 c
302.519989 581.279968 302.759979 581.279968 303.119995 581.279968 c
303.359985 581.279968 303.660004 581.279968 304.019989 581.339966 c
h
308.459991 579.419983 m
304.619995 592.080017 l
306.779999 592.080017 l
308.820007 584.76001 l
309.539978 582.059998 l
309.600006 582.179993 309.839996 583.080017 310.200012 584.640015 c
312.23999 592.080017 l
314.399994 592.080017 l
316.320007 584.700012 l
316.97998 582.299988 l
317.700012 584.76001 l
319.859985 592.080017 l
321.899994 592.080017 l
318.0 579.419983 l
315.779999 579.419983 l
313.73999 586.97998 l
313.259979 589.140015 l
310.679993 579.419983 l
h
322.919983 585.719971 m
322.919983 588.059998 323.579987 589.799988 324.899994 590.940002 c
325.97998 591.839966 327.300018 592.320007 328.859985 592.320007 c
330.600006 592.320007 331.97998 591.779968 333.119995 590.640015 c
334.200012 589.5 334.73999 587.940002 334.73999 585.900024 c
334.73999 584.279968 334.5 583.019958 334.019989 582.059998 c
333.539978 581.159973 332.820007 580.440002 331.919983 579.900024 c
330.959991 579.419983 329.940002 579.119995 328.859985 579.119995 c
327.059998 579.119995 325.619995 579.719971 324.539978 580.859985 c
323.459991 581.940002 322.919983 583.619995 322.919983 585.719971 c
h
325.139984 585.719971 m
325.139984 584.100037 325.5 582.900024 326.160004 582.119995 c
326.880005 581.279968 327.779999 580.919983 328.859985 580.919983 c
329.880005 580.919983 330.779999 581.279968 331.5 582.119995 c
332.220001 582.900024 332.579987 584.159973 332.579987 585.779968 c
332.579987 587.339966 332.220001 588.539978 331.5 589.380005 c
330.779999 590.159973 329.880005 590.580017 328.859985 590.580017 c
327.779999 590.580017 326.880005 590.159973 326.160004 589.380005 c
325.5 588.539978 325.139984 587.339966 325.139984 585.719971 c
h
337.259979 579.419983 m
337.259979 592.080017 l
339.179993 592.080017 l
339.179993 590.159973 l
339.660004 591.059998 340.139984 591.600037 340.559998 591.900024 c
340.919983 592.200012 341.399994 592.320007 341.880005 592.320007 c
342.600006 592.320007 343.380005 592.080017 344.100006 591.659973 c
343.380005 589.679993 l
342.839996 589.97998 342.300018 590.100037 341.820007 590.100037 c
341.339996 590.100037 340.919983 589.97998 340.559998 589.679993 c
340.139984 589.440002 339.899994 589.019958 339.720001 588.539978 c
339.47998 587.76001 339.359985 586.919983 339.359985 586.019958 c
339.359985 579.419983 l
h
345.419983 579.419983 m
345.419983 596.880005 l
347.519989 596.880005 l
347.519989 586.919983 l
352.619995 592.080017 l
355.380005 592.080017 l
350.519989 587.339966 l
355.859985 579.419983 l
353.220001 579.419983 l
349.019989 585.900024 l
347.519989 584.400024 l
347.519989 579.419983 l
f
n
133.919998 701.279968 m
221.87999 701.279968 l
S
n
220.199997 708.119995 m
233.819977 701.279968 l
220.199997 694.5 l
220.199997 708.119995 l
eofill
n
133.919998 661.320007 m
221.87999 661.320007 l
S
n
220.199997 668.159973 m
233.819977 661.320007 l
220.199997 654.47998 l
220.199997 668.159973 l
eofill
n
133.919998 501.419952 m
221.87999 501.419952 l
S
n
220.199997 508.200012 m
233.819977 501.419952 l
220.199997 494.579987 l
220.199997 508.200012 l
eofill
n
133.919998 541.380005 m
221.87999 541.380005 l
S
n
220.199997 548.219971 m
233.819977 541.380005 l
220.199997 534.539978 l
220.199997 548.219971 l
eofill
n
388.679993 698.219971 m
476.639954 698.219971 l
S
n
474.959991 705.0 m
488.579987 698.219971 l
474.959991 691.380005 l
474.959991 705.0 l
eofill
n
388.679993 658.26001 m
476.639954 658.26001 l
S
n
474.959991 665.039978 m
488.579987 658.26001 l
474.959991 651.419983 l
474.959991 665.039978 l
eofill
n
388.679993 498.300018 m
476.639954 498.300018 l
S
n
474.959991 505.139954 m
488.579987 498.300018 l
474.959991 491.519989 l
474.959991 505.139954 l
eofill
n
388.679993 538.320007 m
476.639954 538.320007 l
S
n
474.959991 545.100037 m
488.579987 538.320007 l
474.959991 531.47998 l
474.959991 545.100037 l
eofill
4.05997 0.0 0.0 4.05997 18.0 428.699982 cm
0.0 sg
19.537094 52.80336 m
/N19 [4.846558 0.0 0.0 4.849564 0.0 0.0] Tf
(2) show
15.886826 54.872345 m
/N20 [8.308411 0.0 0.0 8.313553 0.0 0.0] Tf
(v) show
24.990341 23.58638 m
/N19 [4.862045 0.0 0.0 4.859787 0.0 0.0] Tf
(1) show
22.58165 23.58638 m
%ADOBeginSubsetFont: EGPNEM+SymbolMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/EGPNEM+SymbolMT 1 GetGlyphDirectory
16 <001C60D8A8C9B796769E4EE708DB1CE07AC2C248C3CCF0> |
!
end
end end
%ADOEndSubsetFont
/N22 [4.862045 0.0 0.0 4.859787 0.0 0.0] Tf
(\000\020) show
19.877365 23.58638 m
/N20 [4.862045 0.0 0.0 4.859787 0.0 0.0] Tf
(n) show
16.123276 25.670135 m
/N20 [8.334991 0.0 0.0 8.3311 0.0 0.0] Tf
(v) show
19.965668 13.758713 m
/N20 [4.852341 0.0 0.0 4.855988 0.0 0.0] Tf
(n) show
16.300613 15.842484 m
/N20 [8.318283 0.0 0.0 8.324524 0.0 0.0] Tf
(v) show
19.211975 62.645798 m
/N19 [4.847488 0.0 0.0 4.849564 0.0 0.0] Tf
(1) show
16.123276 64.714783 m
/N20 [8.309982 0.0 0.0 8.313553 0.0 0.0] Tf
(v) show
121.626541 53.010254 m
/N19 [4.854538 0.0 0.0 4.855652 0.0 0.0] Tf
(2) show
117.961517 55.094025 m
/N20 [8.322052 0.0 0.0 8.323944 0.0 0.0] Tf
(x) show
126.414749 22.832687 m
/N19 [4.86348 0.0 0.0 4.864929 0.0 0.0] Tf
(1) show
124.005875 22.832687 m
/N22 [4.86348 0.0 0.0 4.864929 0.0 0.0] Tf
(\000\020) show
121.301254 22.832687 m
/N20 [4.86348 0.0 0.0 4.864929 0.0 0.0] Tf
(n) show
117.547699 24.916443 m
/N20 [8.337448 0.0 0.0 8.33989 0.0 0.0] Tf
(x) show
121.626541 12.990234 m
/N20 [4.860306 0.0 0.0 4.855988 0.0 0.0] Tf
(n) show
117.976273 15.074005 m
/N20 [8.331985 0.0 0.0 8.324524 0.0 0.0] Tf
(x) show
121.360565 62.867477 m
/N19 [4.842468 0.0 0.0 4.849564 0.0 0.0] Tf
(1) show
118.316193 64.936462 m
/N20 [8.301392 0.0 0.0 8.313553 0.0 0.0] Tf
(x) show
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font TimesNewRomanPS-ItalicMT
%%+ font TimesNewRomanPSMT
%%EOF

%%EndDocument
 @endspecial 2437 2742 a Fq(Fig.)24 b(1.)69 b(The)24
b(diagram)h(of)e(KWT)-6 b(A)22 b(operation)2079 2938
y Fp(The)31 b(function)e(\(1\))i(can)g(be)g(further)e(e)o(xpress)i(by)f
(the)i(follo)n(wing)1996 3038 y(inte)o(ger)27 b(program:)2331
3269 y(minimize)180 b Fi(\000)p Fn(v)2934 3238 y Fk(T)2986
3269 y Fn(x;)2331 3368 y Fp(subject)28 b(to)166 b Fn(e)2865
3338 y Fk(T)2917 3368 y Fn(x)23 b Fm(=)g Fn(k)s(;)2826
3468 y(x)2873 3480 y Fk(i)2924 3468 y Fi(2)g(f)p Fm(0)p
Fn(;)14 b Fm(1)p Fi(g)p Fn(;)41 b(i)23 b Fm(=)f(1)p Fn(;)14
b Fm(2)p Fn(;)g(:)g(:)g(:)f(;)h(n)p Fm(;)3943 3369 y
Fp(\(2\))1996 3628 y(where)42 b Fn(v)51 b Fm(=)d([)p
Fn(v)2509 3640 y Fh(1)2547 3628 y Fn(;)14 b(:)g(:)g(:)g(;)g(v)2772
3640 y Fk(n)2817 3628 y Fm(])2840 3598 y Fk(T)2892 3628
y Fn(;)57 b(e)48 b Fm(=)g([1)p Fn(;)14 b(:)g(:)g(:)f(;)h
Fm(1])3486 3598 y Fk(T)3587 3628 y Fi(2)48 b Fn(R)3754
3598 y Fk(n)3799 3628 y Fn(;)57 b(x)49 b Fm(=)1996 3728
y([)p Fn(x)2066 3740 y Fh(1)2104 3728 y Fn(;)14 b(:)g(:)g(:)f(;)h(x)
2335 3740 y Fk(n)2381 3728 y Fm(])2404 3698 y Fk(T)2479
3728 y Fi(2)24 b Fn(R)2622 3698 y Fk(n)2694 3728 y Fp(and)i
Fn(k)k Fp(is)d(a)g(nonne)o(gati)n(v)o(e)c(inte)o(ger)j(less)h(than)1996
3827 y Fn(n)p Fp(.)2079 3928 y(Fig.)43 b(1)g(sho)n(ws)g(the)g(KWT)-8
b(A)43 b(operation)e(graphically)-5 b(.)41 b(In)h(this)1996
4028 y(section,)31 b(we)h(will)g(formulate)d(the)j(KWT)-8
b(A)32 b(operation)d(as)k(a)e(linear)1996 4127 y(programming)25
b(problem,)h(which)i(is)h(suitable)f(for)g(neural)f(netw)o(ork)1996
4227 y(design.)22 b(T)-7 b(o)n(w)o(ard)22 b(this)i(objecti)n(v)o(e,)d
(we)j(should)d(pro)o(v)o(e)h(the)h(follo)n(wing)1996
4327 y(theorem.)2079 4427 y Fg(Theor)m(em)d(1:)f Fp(The)h(solution)f
(of)h(\(2\))f(is)i(equi)n(v)n(alent)e(to)h(the)g(solution)1996
4527 y Fn(x)2043 4497 y Ff(\003)2111 4527 y Fp(of)28
b(the)g(follo)n(wing)f(linear)h(programming)d(problem)i(\(3\))h(.)2349
4758 y(minimize)180 b Fi(\000)p Fn(v)2952 4728 y Fk(T)3004
4758 y Fn(x;)2349 4858 y Fp(subject)28 b(to)166 b Fn(e)2883
4827 y Fk(T)2935 4858 y Fn(x)24 b Fm(=)e Fn(k)s(;)2844
4957 y(x)2891 4969 y Fk(i)2942 4957 y Fi(2)i Fm([0)p
Fn(;)14 b Fm(1])p Fn(;)42 b(i)22 b Fm(=)h(1)p Fn(;)14
b Fm(2)p Fn(;)g(:)g(:)g(:)e(;)i(n:)3943 4858 y Fp(\(3\))2079
5105 y Fg(Pr)l(oof:)37 b Fp(Since)h Fn(e)f Fp(is)i(an)e
Fn(n)p Fp(-dimensional)e(column)i(v)o(ector)f(with)1996
5205 y(all)28 b(its)h(elements)f(are)f Fm(1)p Fp(s.)h(Therefore,)d(in)j
(this)h(special)e(case,)h(e)n(v)o(ery)1996 5305 y(square)e(submatrix)g
(of)h Fn(e)g Fp(has)g(determinant)e(equals)i(to)g Fm(1)p
Fp(.)g(As)g(such,)1996 5404 y(v)o(ector)34 b Fn(e)h Fp(is)h(said)g(to)f
(be)g(totally)g(unimodular)-5 b(.)32 b(In)j(addition,)f
Fn(k)k Fp(is)1996 5504 y(an)24 b(inte)o(ger)-5 b(.)23
b(As)i(a)g(result)f(of)g(the)g(totally)g(unimodular)d(property)-5
b(,)22 b(we)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop -165 -42 a Fp(can)25 b(get)g(the)g(conclusion)e
(that)i(the)g(optimum)f(solution)g(to)h(problem)-165
58 y(\(3\))g(is)h(equi)n(v)n(alent)e(to)i(the)g(solution)e(of)i
(problem)e(\(2\).)g(The)i(proof)e(is)-165 157 y(complete.)-82
257 y(From)42 b(the)h(abo)o(v)o(e)e(proof,)g(it)j(can)e(be)h(easily)g
(found)e(that)i(we)-165 357 y(can)k(design)f(a)h(KWT)-8
b(A)48 b(neural)e(netw)o(ork)g(by)h(solving)f(the)h(LP)-165
457 y(problem)34 b(\(3\).)h(As)h(a)h(basic)f(optimization)e(problem,)g
(there)h(are)h(a)-165 556 y(lot)25 b(of)g(algorithms)f(for)h(solving)f
(the)i(LP)f(problem.)f(But)i(traditional)-165 656 y(algorithms)36
b(typically)i(in)m(v)n(olv)o(e)e(an)i(iterati)n(v)o(e)f(process,)h(and)
f(long)-165 755 y(computational)d(time)i(limits)i(their)e(usage.)g(F)o
(or)g(this)h(reason,)f(the)-165 855 y(optimization)31
b(capability)h(of)h(the)h(recurrent)d(neural)h(netw)o(ork)g(has)-165
955 y(been)19 b(widely)h(in)m(v)o(estigated)e(and)i(ha)n(v)o(e)g(sho)n
(wn)f(promise)h(for)f(solving)-165 1054 y(optimization)38
b(problems)h(more)g(ef)n(fecti)n(v)o(ely)-5 b(.)38 b(After)i(the)g
(seminal)-165 1154 y(w)o(ork)25 b(of)g(T)-7 b(ank)26
b(and)f(Hop\002eld)g([15)o(][16)n(],)h(v)n(arious)f(neural)g(netw)o
(ork)-165 1254 y(models)35 b(for)f(optimization)g(ha)n(v)o(e)h(been)g
(proposed.)e(The)o(y)h(can)i(be)-165 1353 y(cate)o(gorized)18
b(as)k(the)e(penalty-parameter)d(neural)j(netw)o(ork)f([18)o(],)i(the)
-165 1453 y(Lagrange)36 b(neural)i(netw)o(ork)f([19)o(],)h(the)h
(deterministic)e(annealing)-165 1552 y(neural)21 b(netw)o(ork)g([20)o
(],)i(the)f(primal-dual)f(neural)g(netw)o(ork)g([21)o(][22)n(])-165
1652 y(and)28 b(the)g(dual)g(neural)g(netw)o(ork)f([17)o(][23)n(][24)n
(].)387 1812 y(I)t(I)t(I)t(.)45 b(M)t Fq(O)t(D)t(E)t(L)24
b Fp(D)t Fq(E)t(S)t(C)t(R)t(I)t(P)t(T)t(I)t(O)t(N)-82
1941 y Fp(In)35 b(recent)g(decades,)f(se)n(v)o(eral)h(ef)n(fecti)n(v)o
(e)f(recurrent)f(neural)i(net-)-165 2040 y(w)o(orks)e(for)g(solving)g
(linear)g(programming)d(problems)i(ha)n(v)o(e)h(been)-165
2140 y(proposed.)23 b(In)i([26)o(],)h(a)g(recurrent)e(neural)h(netw)o
(ork)f(for)h(solving)g(LP)-165 2240 y(problems)34 b(with)i(bounded)d(v)
n(ariables)i(is)h(presented.)e(F)o(or)i(KWT)-8 b(A)-165
2339 y(operation,)31 b(the)j(netw)o(ork)f(architecture)f(has)i
Fn(n)23 b Fm(+)f(1)34 b Fp(neurons)e(\(the)-165 2439
y(number)27 b(of)h(inte)o(grators\))f(and)h Fm(2)p Fn(n)18
b Fm(+)g(1)29 b Fp(connections)e(\(the)h(number)-165
2539 y(of)g(summers\))f(and)h(its)i(dynamic)d(equations)g(are)h(as)i
(follo)n(ws:)-159 2706 y Fj(\032)-45 2737 y Fk(dx)p -45
2751 73 4 v -39 2799 a(dt)60 2770 y Fm(=)22 b Fn(\025)p
Fi(f)p Fn(e)p Fm(\()p Fn(e)347 2740 y Fk(T)399 2770 y
Fn(x)d Fi(\000)f Fn(k)s Fm(\))h Fi(\000)f(k)p Fn(f)9
b Fm(\()p Fn(x)18 b Fm(+)g Fn(ey)j Fi(\000)d Fn(v)s Fm(\))h
Fi(\000)f Fn(x)p Fi(k)1450 2740 y Fh(2)1450 2791 y(2)1487
2770 y Fm(\()p Fn(ey)j Fi(\000)d Fn(v)s Fm(\))p Fi(g)-45
2840 y Fk(dy)p -45 2858 71 4 v -40 2906 a(dt)58 2877
y Fm(=)23 b Fi(\000)p Fn(\025)p Fi(k)p Fn(f)9 b Fm(\()p
Fn(x)18 b Fm(+)g Fn(ey)j Fi(\000)d Fn(v)s Fm(\))h Fi(\000)f
Fn(x)p Fi(k)981 2847 y Fh(2)981 2898 y(2)1018 2877 y
Fm([)p Fn(ef)9 b Fm(\()p Fn(x)18 b Fm(+)g Fn(ey)j Fi(\000)d
Fn(v)s Fm(\))h Fi(\000)f Fn(k)s Fm(])1781 2964 y Fp(\(4\))-165
3063 y(where)44 b Fn(\025)55 b(>)e Fm(0)46 b Fp(is)g(a)g(scaling)f
(constant,)f Fn(x)54 b Fi(2)h Fn(R)1475 3033 y Fk(n)1520
3063 y Fp(,)45 b Fn(y)57 b Fi(2)e Fn(R)q Fp(,)-165 3163
y Fi(k)29 b(\001)i(k)2 3133 y Fh(2)2 3184 y(2)83 3163
y Fp(is)46 b(the)e(Euclidean)f(norm)g(and)h Fn(f)61 b
Fm(:)53 b Fn(R)1334 3133 y Fk(n)1431 3163 y Fi(!)f Fm([0)p
Fn(;)14 b Fm(1])1733 3133 y Fk(n)1823 3163 y Fp(is)-165
3263 y(a)38 b(piece)n(wise)f(linear)h(acti)n(v)n(ation)e(function)g
(which)i(is)g(de\002ned)f(by)-165 3362 y Fn(f)9 b Fm(\()p
Fn(x)p Fm(\))23 b(=)g([)p Fn(f)9 b Fm(\()p Fn(x)259 3374
y Fh(1)297 3362 y Fm(\))p Fn(;)14 b(:)g(:)g(:)f(;)h(f)9
b Fm(\()p Fn(x)642 3374 y Fk(n)688 3362 y Fm(\)])743
3332 y Fk(T)825 3362 y Fp(and)331 3635 y Fn(f)g Fm(\()p
Fn(x)460 3647 y Fk(i)488 3635 y Fm(\))23 b(=)631 3465
y Fj(8)631 3539 y(<)631 3689 y(:)746 3534 y Fm(0)p Fn(;)116
b(x)974 3546 y Fk(i)1026 3534 y Fn(<)22 b Fm(0;)746 3634
y Fn(x)793 3646 y Fk(i)821 3634 y Fn(;)83 b Fm(0)23 b
Fi(\024)g Fn(x)1127 3646 y Fk(i)1178 3634 y Fi(\024)f
Fm(1;)746 3734 y(1)p Fn(;)116 b(x)974 3746 y Fk(i)1026
3734 y Fn(>)22 b Fm(1)p Fn(:)1781 3635 y Fp(\(5\))-82
3879 y(The)g(main)h(dra)o(wback)e(of)i(this)h(model)e(is)i(that)f(the)g
(model)g(should)-165 3979 y(calculate)31 b(a)i(higher)n(-order)c(term)j
(which)g(de)o(grades)e(its)j(speed)f(and)-165 4078 y(sensiti)n(vity)-5
b(.)-82 4178 y(In)24 b([27)o(],)g(another)g(recurrent)f(neural)g(netw)o
(ork)h(for)g(LP)h(problems)-165 4278 y(is)31 b(presented.)f(The)g
(architecture)g(of)g(this)h(model)f(for)h(KWT)-8 b(A)31
b(has)-165 4378 y Fm(2)p Fn(n)d Fm(+)g(1)43 b Fp(neurons)e(and)h
Fm(3)p Fn(n)28 b Fm(+)g(1)43 b Fp(connection)d(and)i(its)i(dynamic)-165
4477 y(equations)27 b(are)h(gi)n(v)o(en)g(as)h(follo)n(wing:)-91
4643 y Fj(8)-91 4717 y(<)-91 4867 y(:)35 4676 y Fk(dx)p
35 4690 73 4 v 41 4737 a(dt)140 4709 y Fm(=)22 b Fi(\000)p
Fn(\025)p Fi(f)p Fm(\()p Fn(v)457 4678 y Fk(T)510 4709
y Fn(x)d Fm(+)f Fn(k)s(z)t Fm(\))p Fn(v)j Fm(+)d Fn(e)p
Fm(\()p Fn(e)1034 4678 y Fk(T)1086 4709 y Fn(x)g Fi(\000)h
Fn(k)s Fm(\))f Fi(\000)g Fm(\()p Fi(\000)p Fm(2)p Fn(x)p
Fm(\))1632 4678 y Fh(+)1687 4709 y Fi(g)p Fn(;)35 4779
y Fk(dy)p 35 4797 71 4 v 40 4844 a(dt)138 4816 y Fm(=)k
Fi(\000)p Fn(\025)p Fi(f)p Fm(\()p Fn(y)f Fi(\000)d Fn(x)p
Fm(\))636 4786 y Fh(+)711 4816 y Fi(\000)g Fn(e)p Fi(g)p
Fn(;)35 4886 y Fk(dz)p 35 4900 69 4 v 40 4947 a(dt)136
4919 y Fm(=)23 b Fi(\000)p Fn(\025)p Fi(f)p Fm(\()p Fn(v)454
4889 y Fk(T)506 4919 y Fn(x)c Fm(+)f Fn(k)s(z)t Fm(\))p
Fn(k)j Fi(\000)d Fm(2)p Fn(e)1004 4889 y Fk(T)1055 4919
y Fm(\()p Fn(ez)k Fi(\000)c Fn(v)s Fm(\))1345 4889 y
Fh(+)1401 4919 y Fi(g)p Fn(;)1781 5005 y Fp(\(6\))-165
5105 y(where)48 b Fn(\025)60 b(>)g Fm(0)p Fn(;)49 b(x)61
b Fi(2)f Fn(R)721 5075 y Fk(n)766 5105 y Fp(,)49 b Fn(y)63
b Fi(2)d Fn(R)1119 5075 y Fk(n)1164 5105 y Fp(,)49 b
Fn(z)64 b Fi(2)c Fn(R)q Fp(,)49 b Fm(\()p Fn(x)p Fm(\))1697
5075 y Fh(+)1813 5105 y Fm(=)-165 5205 y([\()p Fn(x)-63
5217 y Fh(1)-25 5205 y Fm(\))7 5174 y Fh(+)62 5205 y
Fn(;)14 b(:)g(:)g(:)g(;)g Fm(\()p Fn(x)326 5217 y Fk(n)372
5205 y Fm(\))404 5174 y Fh(+)459 5205 y Fm(])482 5174
y Fk(T)534 5205 y Fp(,)58 b(and)f Fm(\()p Fn(x)870 5217
y Fk(i)899 5205 y Fm(\))931 5174 y Fh(+)1063 5205 y Fm(=)77
b(max)p Fi(f)p Fm(0)p Fn(;)14 b(x)1528 5217 y Fk(i)1555
5205 y Fi(g)p Fp(,)57 b Fm(\()p Fn(i)77 b Fm(=)-165 5304
y(1)p Fn(;)14 b(:)g(:)g(:)f(;)h(n)p Fm(\))p Fp(.)-82
5404 y(In)32 b([28)n(],)g(a)h(recurrent)d(neural)i(netw)o(ork)f(for)g
(solving)g(nonlinear)-165 5504 y(con)m(v)o(e)o(x)c(programs)i(subject)h
(to)g(linear)g(constraints)g(is)h(introduced.)1996 -42
y(This)e(model)e(can)i(be)f(con)m(v)o(erted)e(to)j(solv)o(e)f(the)g(LP)
h(problems.)e(F)o(or)1996 58 y(KWT)-8 b(A)24 b(operation,)e(since)h
(more)g Fn(n)g Fp(v)n(ariable)g(should)f(be)h(use)h(to)g(act)1996
157 y(as)g(slack)f(v)n(ariables,)f(the)h(netw)o(ork)f(architecture)g
(of)h(this)g(model)g(has)1996 257 y Fm(2)p Fn(n)c Fm(+)h(1)31
b Fp(neurons)e(and)h Fm(3)p Fn(n)20 b Fm(+)f(1)31 b Fp(connections)e
(with)i(the)g(follo)n(wing)1996 356 y(dynamic)c(equations:)2402
464 y Fj(8)2402 538 y(<)2402 688 y(:)2527 497 y Fk(dx)p
2527 511 73 4 v 2533 558 a(dt)2632 530 y Fm(=)c Fn(\025)p
Fi(f\000)p Fn(x)18 b Fm(+)g(\()p Fn(x)i Fm(+)e Fn(ez)j
Fm(+)d Fn(v)s Fm(\))3462 499 y Fh(+)3518 530 y Fi(g)p
Fn(;)2527 600 y Fk(dy)p 2527 618 71 4 v 2532 665 a(dt)2630
637 y Fm(=)23 b Fn(\025)p Fi(f)p Fm(\()p Fn(y)e Fi(\000)d
Fn(x)p Fm(\))3064 607 y Fh(+)3139 637 y Fi(\000)g Fn(e)p
Fi(g)p Fn(;)2527 707 y Fk(dz)p 2527 721 69 4 v 2532 768
a(dt)2629 740 y Fm(=)k Fn(\025)p Fi(f)p Fm(\()p Fn(e)2877
710 y Fk(T)2930 740 y Fn(x)c Fi(\000)g Fn(z)t Fm(\))3153
710 y Fh(+)3227 740 y Fi(\000)g Fn(k)s Fi(g)p Fn(;)3943
634 y Fp(\(7\))1996 884 y(where)28 b Fn(\025)23 b(>)g
Fm(0)p Fn(;)29 b(x)23 b Fi(2)h Fn(R)2694 854 y Fk(n)2738
884 y Fp(,)29 b Fn(y)d Fi(2)d Fn(R)2997 854 y Fk(n)3042
884 y Fp(,)29 b(and)f Fn(z)e Fi(2)e Fn(R)q Fp(.)2079
983 y(Ho)n(we)n(v)o(er)m(,)c(the)i(abo)o(v)o(e)f(tw)o(o)h(models)g
(emplo)o(y)f(more)g(neurons)f(and)1996 1083 y(connections)34
b(to)j(accomplish)e(the)h(KWT)-8 b(A)37 b(operation)d(compared)1996
1183 y(with)29 b(the)f(\002rst)h(model.)2079 1282 y(In)34
b([29)n(],)g(a)h(projection)d(neural)h(netw)o(ork)f(to)i(constrained)f
(opti-)1996 1382 y(mization)e(problems)f(is)i(in)m(v)o(ented.)d(This)j
(model)f(can)g(be)g(used)h(for)1996 1482 y(solving)24
b(KWT)-8 b(A)26 b(based)f(on)g(LP)g(formulation)e(with)i
Fn(n)12 b Fm(+)g(1)26 b Fp(neurons)1996 1581 y(and)39
b Fm(2)p Fn(n)25 b Fm(+)h(2)40 b Fp(connections.)d(The)i(procedure)d
(of)j(constructing)f(a)1996 1681 y(neural)e(netw)o(ork)g(model)g(for)g
(solving)g(problem)f(\(3\))h(is)i(gi)n(v)o(en)d(as)1996
1780 y(follo)n(ws:)2079 1880 y(De\002ne)28 b(a)h(Lagrange)e(function)g
(of)h(\(3\))g(belo)n(w)2486 2080 y Fn(L)p Fm(\()p Fn(x;)14
b(y)s Fm(\))23 b(=)g Fi(\000)p Fn(v)2954 2046 y Fk(T)3006
2080 y Fn(x)c Fi(\000)f Fn(y)s Fm(\()p Fn(e)3270 2046
y Fk(T)3322 2080 y Fn(x)h Fi(\000)f Fn(k)s Fm(\))394
b Fp(\(8\))1996 2236 y(where)43 b Fn(y)54 b Fi(2)e Fn(R)45
b Fp(is)g(referred)d(to)i(as)h(the)f(Lagrange)d(Multiplier)-5
b(.)1996 2336 y(According)26 b(to)i(the)h(Karush-K)o(uhn-T)l(uck)o(er)
23 b(\(KKT\))28 b(condition,)e Fn(x)4001 2305 y Ff(\003)1996
2435 y Fp(is)35 b(a)f(solution)f(to)h(\(3\))f(if)h(and)g(only)f(if)h
(there)f(e)o(xits)h Fn(y)3630 2405 y Ff(\003)3701 2435
y Fi(2)f Fn(R)i Fp(such)1996 2535 y(that)29 b Fm(\()p
Fn(x)2229 2505 y Ff(\003)2268 2535 y Fn(;)14 b(y)2349
2505 y Ff(\003)2386 2535 y Fm(\))30 b Fp(satis\002es)g(the)e(follo)n
(wing)f(condition:)2396 2638 y Fj(\032)2500 2705 y Fi(\000)p
Fn(v)21 b Fi(\000)d Fn(ey)25 b Fi(\025)e Fm(0)p Fn(;)42
b(x)p Fm(\()p Fi(\000)p Fn(v)22 b Fi(\000)c Fn(ey)s Fm(\))23
b(=)g(0)p Fn(;)2604 2804 y(e)2643 2774 y Fk(T)2695 2804
y Fn(x)c Fi(\000)f Fn(k)26 b Fm(=)d(0)p Fn(;)42 b Fm(0)23
b Fi(\024)g Fn(x)g Fi(\024)g Fm(1)p Fn(:)3943 2755 y
Fp(\(9\))2079 2947 y(Using)32 b(the)h(well-kno)n(wn)d(projection)h
(theorem,)g(we)h(can)h(easily)1996 3047 y(obtain)28 b(the)g(follo)n
(wing)f(Lemma.)2079 3147 y Fg(Lemma)d(1:)f Fn(x)2488
3117 y Ff(\003)2551 3147 y Fp(is)i(a)f(solution)f(to)h(\(3\))g(if)g
(and)f(only)g(if)h(there)f(e)o(xists)1996 3246 y Fn(y)2040
3216 y Ff(\003)2101 3246 y Fi(2)g Fn(R)2243 3216 y Fk(m)2335
3246 y Fp(such)28 b(that)h Fm(\()p Fn(x)2749 3216 y Ff(\003)2788
3246 y Fn(;)14 b(y)2869 3216 y Ff(\003)2907 3246 y Fm(\))29
b Fp(satis\002es)2480 3350 y Fj(\032)2583 3416 y Fn(f)9
b Fm(\()p Fn(x)19 b Fm(+)f Fn(\013ey)j Fm(+)d Fn(\013v)s
Fm(\))i Fi(\000)e Fn(x)23 b Fm(=)g(0)p Fn(;)2813 3516
y(e)2852 3486 y Fk(T)2904 3516 y Fn(x)c Fi(\000)f Fn(k)26
b Fm(=)d(0)p Fn(;)3901 3467 y Fp(\(10\))1996 3659 y(where)28
b Fn(\013)h Fp(is)h(an)o(y)e(positi)n(v)o(e)f(constant.)2079
3758 y Fg(Pr)l(oof:)h Fp(See)h([30)o(,)g(pp.)e(267,)h(Prop.)f(5.1].)
2079 3858 y(Based)45 b(on)f(the)h(equi)n(v)n(alent)e(formulation)f(in)j
(Lemma)f(1,)h(we)1996 3958 y(propose)19 b(a)h(recurrent)f(neural)g
(netw)o(ork)g(for)g(KWT)-8 b(A)21 b(operation)e(with)1996
4057 y(its)30 b(dynamical)c(equations)i(as)h(follo)n(ws:)2352
4166 y Fj(\032)2465 4198 y Fk(dx)p 2465 4212 73 4 v 2471
4259 a(dt)2571 4230 y Fm(=)22 b Fn(\025)14 b Fm(\()q
Fi(\000)p Fn(x)k Fm(+)g Fn(f)9 b Fm(\()p Fn(x)19 b Fm(+)f
Fn(\013ey)j Fm(+)d Fn(\013v)s Fm(\)\))d Fn(;)2465 4301
y Fk(dy)p 2465 4319 71 4 v 2470 4366 a(dt)2569 4338 y
Fm(=)22 b Fn(\025)p Fm(\()p Fn(e)2775 4308 y Fk(T)2828
4338 y Fn(x)d Fi(\000)f Fn(k)s Fm(\))p Fn(;)3901 4283
y Fp(\(11\))1996 4482 y(where)28 b Fn(\025)23 b(>)g Fm(0)p
Fp(,)28 b Fn(\013)c(>)f Fm(0)p Fp(,)28 b Fn(x)23 b Fi(2)h
Fn(R)2947 4452 y Fk(n)2992 4482 y Fp(,)k Fn(y)e Fi(2)e
Fn(R)q Fp(.)2079 4581 y(The)37 b(element-form)e(of)j(the)f(dynamic)f
(equation)g(\(11\))h(can)g(be)1996 4681 y(described)27
b(as)i(follo)n(ws:)2077 4847 y Fj(\032)2191 4878 y Fk(dx)2264
4886 y Fe(i)p 2191 4893 99 4 v 2210 4940 a Fk(dt)2323
4912 y Fm(=)22 b Fn(\025)14 b Fm(\()q Fi(\000)p Fn(x)2617
4924 y Fk(i)2663 4912 y Fm(+)k Fn(f)9 b Fm(\()p Fn(x)2875
4924 y Fk(i)2921 4912 y Fm(+)18 b Fn(\013y)k Fm(+)c Fn(\013v)3296
4924 y Fk(i)3324 4912 y Fm(\)\))d Fn(;)43 b(i)22 b Fm(=)h(1)p
Fn(;)14 b(:)g(:)g(:)f(;)h(n)p Fm(;)2191 4982 y Fk(dy)p
2191 5000 71 4 v 2196 5047 a(dt)2294 5019 y Fm(=)23 b
Fn(\025)p Fm(\()2462 4957 y Fj(P)2550 4977 y Fk(n)2550
5044 y(i)p Fh(=1)2676 5019 y Fn(x)2723 5031 y Fk(i)2769
5019 y Fi(\000)18 b Fn(k)s Fm(\))p Fn(:)3901 5105 y Fp(\(12\))2079
5205 y(In)45 b([29)n(],)g(it)h(is)g(pro)o(v)o(ed)c(that)j(this)h(netw)o
(ork)d(is)j(globally)e(e)o(x-)1996 5305 y(ponentially)34
b(stable.)i(The)g(dynamics)f(can)h(be)g(easily)g(realized)g(in)1996
5404 y(a)g(recurrent)f(neural)g(netw)o(ork)f(with)i(a)h(single-layer)d
(structure)h(as)1996 5504 y(sho)n(wn)k(in)h(Fig.)g(2,)g(where)f
Fn(\025)45 b Fm(=)f(1)p Fp(,)c Fn(\013)k Fm(=)g(1)c Fp(and)g
Fn(f)9 b Fm(\()p Fi(\001)p Fm(\))40 b Fp(can)g(be)p eop
end
%%Page: 3 3
TeXDict begin 3 2 bop -165 -42 a Fp(implemented)22 b(by)i(using)g(a)h
(piece)n(wise)f(linear)g(acti)n(v)n(ation)f(function.)-165
58 y(As)42 b(sho)n(wn)e(in)i(Fig.)f(2,)g(a)h(circuit)f(implementing)e
(this)j(netw)o(ork)-165 157 y(consists)37 b(of)f Fm(2)p
Fn(n)24 b Fm(+)g(1)37 b Fp(summers,)f Fn(n)24 b Fm(+)g(1)37
b Fp(inte)o(grators)e(and)h Fn(n)24 b Fm(+)g(1)-165 257
y Fp(operational)i(ampli\002ers.)-44 2039 y @beginspecial
0 @llx 0 @lly 213 @urx 198 @ury 2160 @rwi @setspecial
%%BeginDocument: Archi.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Visio-Drawing16.vsd)
%%Version: 1 4
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 16:46:58 12/21/06
%%For: (ssgu)
%%DocumentData: Clean7Bit
%%BoundingBox: 0 0 213 198
%%HiResBoundingBox: 0.0 0.0 212.598419 198.425201
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0


%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource TimesNewRomanPSMT
[/N20/TimesNewRomanPSMT 1 TZ
%%IncludeResource TimesNewRomanPS-ItalicMT
[/N21/TimesNewRomanPS-ItalicMT 1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1392 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-14, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:d8f41c0e-9809-4222-9000-9605d498a88b' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0.1 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:d8f41c0e-9809-4222-9000-9605d498a88b' xmlns:pdfx='http://ns.adobe.com/pdfx/1.3/' pdfx:Company='CUHK'/>
<rdf:Description rdf:about='uuid:d8f41c0e-9809-4222-9000-9605d498a88b' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreatorTool='Acrobat PDFMaker for Microsoft Visio' xap:ModifyDate='2006-12-21T16:46:29+08:00' xap:CreateDate='2006-12-21T16:46:21+08:00' xap:MetadataDate='2006-12-21T16:46:29+08:00'></rdf:Description>
<rdf:Description rdf:about='uuid:d8f41c0e-9809-4222-9000-9605d498a88b' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:e03bc7e9-0251-4e48-b576-c61850031cac'/>
<rdf:Description rdf:about='uuid:d8f41c0e-9809-4222-9000-9605d498a88b' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Visio-Drawing16.vsd</rdf:li></rdf:Alt></dc:title><dc:creator><rdf:Seq><rdf:li>ssgu</rdf:li></rdf:Seq></dc:creator></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 213 198 rectclip
/N14 [/DeviceRGB] /ColorSpace defineRes pop

%ADOBeginSubsetFont: GLGEAE+SymbolMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (GLGEAE+SymbolMT)
%%Title: (GLGEAE+SymbolMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /GLGEAE+SymbolMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {0 -220 1113 1005} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 192 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7C3C9ED920C533BFCEF627DC3963E487931C80D1235BDD70
699E096A6312D> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /GLGEAE+SymbolMT-Identity-H /Identity-H 0 [/GLGEAE+SymbolMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N13 (GLGEAE+SymbolMT-Identity-H)
/N13 (GLGEAE+SymbolMT-Identity-H) /Identity-H [ (GLGEAE+SymbolMT) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
0.0 0.0 212.598419 198.425201 re
W
n
0.36946 0.0 0.0 0.36946 -6.6503 -87.517929 cm
n
404.459991 357.23999 m
363.300018 336.660004 l
404.459991 316.079987 l
404.459991 357.23999 l
1.0 1.0 1.0 setrgbcolor
eofill
0.64999 w
1 j
1 J
n
404.459991 357.23999 m
363.300018 336.660004 l
404.459991 316.079987 l
404.459991 357.23999 l
h
0.0 0.0 0.0  setrgbcolor
S
n
60.180008 692.339966 m
60.180008 702.900024 68.76001 711.47998 79.379997 711.47998 c
89.939995 711.47998 98.579994 702.900024 98.579994 692.339966 c
98.579994 681.719971 89.939995 673.140015 79.379997 673.140015 c
68.76001 673.140015 60.180008 681.719971 60.180008 692.339966 c
1.0 1.0 1.0  setrgbcolor
eofill
n
60.180008 692.339966 m
60.180008 702.900024 68.76001 711.47998 79.379997 711.47998 c
89.939995 711.47998 98.579994 702.900024 98.579994 692.339966 c
98.579994 681.719971 89.939995 673.140015 79.379997 673.140015 c
68.76001 673.140015 60.180008 681.719971 60.180008 692.339966 c
h
0.0 0.0 0.0  setrgbcolor
S
n
156.119995 672.779968 57.539993 39.119995 re
1.0 1.0 1.0  setrgbcolor
f
n
156.119995 672.779968 m
156.119995 672.779968 57.539993 39.119995 re
0.0 0.0 0.0  setrgbcolor
S
n
271.200012 692.339966 m
271.200012 702.900024 279.779999 711.47998 290.339996 711.47998 c
300.959991 711.47998 309.539978 702.900024 309.539978 692.339966 c
309.539978 681.719971 300.959991 673.140015 290.339996 673.140015 c
279.779999 673.140015 271.200012 681.719971 271.200012 692.339966 c
1.0 1.0 1.0  setrgbcolor
eofill
n
271.200012 692.339966 m
271.200012 702.900024 279.779999 711.47998 290.339996 711.47998 c
300.959991 711.47998 309.539978 702.900024 309.539978 692.339966 c
309.539978 681.719971 300.959991 673.140015 290.339996 673.140015 c
279.779999 673.140015 271.200012 681.719971 271.200012 692.339966 c
h
0.0 0.0 0.0  setrgbcolor
S
n
367.919983 672.779968 38.339996 39.119995 re
1.0 1.0 1.0  setrgbcolor
f
n
367.919983 672.779968 m
367.919983 672.779968 38.339996 39.119995 re
0.0 0.0 0.0  setrgbcolor
S
n
404.339996 671.76001 m
445.5 692.339966 l
404.339996 712.919983 l
404.339996 671.76001 l
1.0 1.0 1.0  setrgbcolor
eofill
n
404.339996 671.76001 m
445.5 692.339966 l
404.339996 712.919983 l
404.339996 671.76001 l
h
0.0 0.0 0.0  setrgbcolor
S
2.70665 0.0 0.0 2.70665 18.0 236.879959 cm
0.0 sg
148.102142 165.30426 m
%ADOBeginSubsetFont: GLGEAE+SymbolMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/GLGEAE+SymbolMT 1 GetGlyphDirectory
179 <001C60D8A8C9B8581A5CA5E70AA09271030A0AF59D80BEF5CBAD32967DC
D8A0D41425881B3519EEA88EC45192DCFB9B5429933FE68A1BC657103A2FF837
E1DE1BC7FC1589085D16573FC9A919F4A859C8C2D7F90DF915E1129FF4341E60
7C70CB2FB542A660D4C4B25BE3E391BF6E6120D8A266CAA40D2072B478996D45
10BB6FFA1D0A7158195D3359E645A44A97808AAF629F3CF4B0A92F0479FE1667
46203F8EA9425E601F4387D83BB4BADA7C95C010ED0D382BDC16B02202D92E5E
C6A287150557F72656017DAE0CF> |
!
end
end end
%ADOEndSubsetFont
/N13 [6.063995 0.0 0.0 6.057312 0.0 0.0] Tf
(\000\263) show
0.36946 0.0 0.0 0.36946 -6.6503 -87.517929 cm
n
98.579994 692.339966 m
148.139999 692.339966 l
0.0 0.0 0.0 setrgbcolor
S
n
147.0 696.839966 m
156.119995 692.339966 l
147.0 687.779968 l
147.0 696.839966 l
eofill
n
213.659988 692.339966 m
263.220001 692.339966 l
S
n
262.079987 696.839966 m
271.200012 692.339966 l
262.079987 687.779968 l
262.079987 696.839966 l
eofill
n
309.539978 692.339966 m
359.940002 692.339966 l
S
n
358.800018 696.839966 m
367.919983 692.339966 l
358.800018 687.779968 l
358.800018 696.839966 l
eofill
n
445.5 692.339966 m
550.919983 692.339966 l
S
n
549.779968 696.839966 m
558.900024 692.339966 l
549.779968 687.779968 l
549.779968 696.839966 l
eofill
2.70665 0.0 0.0 2.70665 18.0 236.879959 cm
0.0 sg
98.114075 165.30426 m
%ADOBeginSubsetFont: GLGEAE+SymbolMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/GLGEAE+SymbolMT 1 GetGlyphDirectory
166 <001C60D8A8C9B63C43A72825C293CFF1AD93A411A7E96499013937EA56E
1FF1FD88069A338B6A2767902D460C469D11D4CE8A417804B89EB96EF2B2611A
8BBC81B786036516D7CE409A876B4D989F8F02D0429F9DE3F370286651A68D14
8B1> |
!
end
end end
%ADOEndSubsetFont
/N13 [9.293198 0.0 0.0 9.294632 0.0 0.0] Tf
(\000\246) show
19.308029 165.30426 m
(\000\246) show
0.36946 0.0 0.0 0.36946 -6.6503 -87.517929 cm
n
463.019989 692.339966 m
463.019989 735.059998 l
79.379997 735.059998 l
79.379997 719.459961 l
0.0 0.0 0.0 setrgbcolor
S
n
83.939995 720.600037 m
79.379997 711.47998 l
74.820007 720.600037 l
83.939995 720.600037 l
eofill
n
290.339996 735.059998 m
290.339996 719.459961 l
S
n
294.899994 720.600037 m
290.339996 711.47998 l
285.839996 720.600037 l
294.899994 720.600037 l
eofill
n
79.379997 653.940002 m
79.379997 665.159973 l
S
n
74.820007 664.019958 m
79.379997 673.140015 l
83.939995 664.019958 l
74.820007 664.019958 l
eofill
2.70665 0.0 0.0 2.70665 18.0 236.879959 cm
0.0 sg
132.473953 164.284546 m
%ADOBeginSubsetFont: GLGEAE+SymbolMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/GLGEAE+SymbolMT 1 GetGlyphDirectory
79 <001C60D8A8C9B79676F4C1C3FC3440F4C1A813186FAE6B9AB0A3855AFC46
871321EBCC3C25C6FC9CF27D1D13D502E9B170E3C2B790FAE12A6C7A99081B04
8ACB12A0605B34C4294A3FAFB659C0F8B65F56C8AD3B838A59F3231E62E5F73F
E25A3F428FA0C60CB1DEABC02F5EAFF401D3BF0CBD289873D19DBD4871BB5975
FB1909D12F7DFEE0308EEF399B88F6C045A467B129F53DC14D897A731DF16D9C> |
!
end
end end
%ADOEndSubsetFont
/N13 [11.974442 0.0 4.095474 11.969574 0.0 0.0] Tf
(\000O) show
0.36946 0.0 0.0 0.36946 -6.6503 -87.517929 cm
n
100.919998 713.459961 m
100.919998 717.719971 l
96.720001 717.719971 l
96.720001 719.519958 l
100.919998 719.519958 l
100.919998 723.719971 l
102.720001 723.719971 l
102.720001 719.519958 l
106.979996 719.519958 l
106.979996 717.719971 l
102.720001 717.719971 l
102.720001 713.459961 l
0.0 0.0 0.0 setrgbcolor
f
n
100.919998 668.519958 m
100.919998 672.779968 l
96.720001 672.779968 l
96.720001 674.579956 l
100.919998 674.579956 l
100.919998 678.779968 l
102.720001 678.779968 l
102.720001 674.579956 l
106.979996 674.579956 l
106.979996 672.779968 l
102.720001 672.779968 l
102.720001 668.519958 l
f
n
60.419998 712.380005 m
60.419998 716.639954 l
56.16 716.639954 l
56.16 718.380005 l
60.419998 718.380005 l
60.419998 722.639954 l
62.16 722.639954 l
62.16 718.380005 l
66.419998 718.380005 l
66.419998 716.639954 l
62.16 716.639954 l
62.16 712.380005 l
f
n
262.079987 708.0 m
262.079987 712.26001 l
257.820007 712.26001 l
257.820007 714.0 l
262.079987 714.0 l
262.079987 718.26001 l
263.880005 718.26001 l
263.880005 714.0 l
268.079987 714.0 l
268.079987 712.26001 l
263.880005 712.26001 l
263.880005 708.0 l
f
n
308.279999 723.149963 m
314.100006 723.149963 l
1.860001 w
0 J
S
0.64999 w
1 J
n
56.34 578.039978 m
56.34 588.659973 64.919998 597.23999 75.540009 597.23999 c
86.159996 597.23999 94.740005 588.659973 94.740005 578.039978 c
94.740005 567.47998 86.159996 558.900024 75.540009 558.900024 c
64.919998 558.900024 56.34 567.47998 56.34 578.039978 c
1.0 1.0 1.0  setrgbcolor
eofill
n
56.34 578.039978 m
56.34 588.659973 64.919998 597.23999 75.540009 597.23999 c
86.159996 597.23999 94.740005 588.659973 94.740005 578.039978 c
94.740005 567.47998 86.159996 558.900024 75.540009 558.900024 c
64.919998 558.900024 56.34 567.47998 56.34 578.039978 c
h
0.0 0.0 0.0  setrgbcolor
S
n
152.279999 558.47998 57.539993 39.119995 re
1.0 1.0 1.0  setrgbcolor
f
n
152.279999 558.47998 m
152.279999 558.47998 57.539993 39.119995 re
0.0 0.0 0.0  setrgbcolor
S
n
267.359985 578.039978 m
267.359985 588.659973 275.940002 597.23999 286.5 597.23999 c
297.119995 597.23999 305.700012 588.659973 305.700012 578.039978 c
305.700012 567.47998 297.119995 558.900024 286.5 558.900024 c
275.940002 558.900024 267.359985 567.47998 267.359985 578.039978 c
1.0 1.0 1.0  setrgbcolor
eofill
n
267.359985 578.039978 m
267.359985 588.659973 275.940002 597.23999 286.5 597.23999 c
297.119995 597.23999 305.700012 588.659973 305.700012 578.039978 c
305.700012 567.47998 297.119995 558.900024 286.5 558.900024 c
275.940002 558.900024 267.359985 567.47998 267.359985 578.039978 c
h
0.0 0.0 0.0  setrgbcolor
S
n
364.079987 558.47998 38.339996 39.119995 re
1.0 1.0 1.0  setrgbcolor
f
n
364.079987 558.47998 m
364.079987 558.47998 38.339996 39.119995 re
0.0 0.0 0.0  setrgbcolor
S
n
400.5 557.459961 m
441.660004 578.039978 l
400.5 598.619995 l
400.5 557.459961 l
1.0 1.0 1.0  setrgbcolor
eofill
n
400.5 557.459961 m
441.660004 578.039978 l
400.5 598.619995 l
400.5 557.459961 l
h
0.0 0.0 0.0  setrgbcolor
S
2.70665 0.0 0.0 2.70665 18.0 236.879959 cm
0.0 sg
146.683411 123.097061 m
/N13 [6.063995 0.0 0.0 6.057312 0.0 0.0] Tf
(\000\263) show
0.36946 0.0 0.0 0.36946 -6.6503 -87.517929 cm
n
94.740005 578.039978 m
144.300003 578.039978 l
0.0 0.0 0.0 setrgbcolor
S
n
143.160004 582.600037 m
152.279999 578.039978 l
143.160004 573.47998 l
143.160004 582.600037 l
eofill
n
209.819992 578.039978 m
259.380005 578.039978 l
S
n
258.23999 582.600037 m
267.359985 578.039978 l
258.23999 573.47998 l
258.23999 582.600037 l
eofill
n
305.700012 578.039978 m
356.100006 578.039978 l
S
n
354.959991 582.600037 m
364.079987 578.039978 l
354.959991 573.47998 l
354.959991 582.600037 l
eofill
n
441.660004 578.039978 m
547.080017 578.039978 l
S
n
545.940002 582.600037 m
555.059998 578.039978 l
545.940002 573.47998 l
545.940002 582.600037 l
eofill
2.70665 0.0 0.0 2.70665 18.0 236.879959 cm
0.0 sg
96.695343 123.097061 m
/N13 [9.293198 0.0 0.0 9.294632 0.0 0.0] Tf
(\000\246) show
17.889297 123.097061 m
(\000\246) show
0.36946 0.0 0.0 0.36946 -6.6503 -87.517929 cm
n
459.179993 578.039978 m
459.179993 620.820007 l
75.540009 620.820007 l
75.540009 605.159973 l
0.0 0.0 0.0 setrgbcolor
S
n
80.100006 606.299988 m
75.540009 597.23999 l
70.979996 606.299988 l
80.100006 606.299988 l
eofill
n
286.5 620.820007 m
286.5 605.159973 l
S
n
291.059998 606.299988 m
286.5 597.23999 l
282.0 606.299988 l
291.059998 606.299988 l
eofill
n
75.540009 539.700012 m
75.540009 550.919983 l
S
n
70.979996 549.779968 m
75.540009 558.900024 l
80.100006 549.779968 l
70.979996 549.779968 l
eofill
2.70665 0.0 0.0 2.70665 18.0 236.879959 cm
0.0 sg
131.077393 122.077316 m
/N13 [11.950287 0.0 4.087158 11.950623 0.0 0.0] Tf
(\000O) show
0.36946 0.0 0.0 0.36946 -6.6503 -87.517929 cm
n
97.079994 599.219971 m
97.079994 603.47998 l
92.879997 603.47998 l
92.879997 605.219971 l
97.079994 605.219971 l
97.079994 609.419983 l
98.879997 609.419983 l
98.879997 605.219971 l
103.139999 605.219971 l
103.139999 603.47998 l
98.879997 603.47998 l
98.879997 599.219971 l
0.0 0.0 0.0 setrgbcolor
f
n
97.079994 554.279968 m
97.079994 558.539978 l
92.879997 558.539978 l
92.879997 560.279968 l
97.079994 560.279968 l
97.079994 564.539978 l
98.879997 564.539978 l
98.879997 560.279968 l
103.139999 560.279968 l
103.139999 558.539978 l
98.879997 558.539978 l
98.879997 554.279968 l
f
n
56.579998 598.080017 m
56.579998 602.339966 l
52.320007 602.339966 l
52.320007 604.140015 l
56.579998 604.140015 l
56.579998 608.339966 l
58.379997 608.339966 l
58.379997 604.140015 l
62.579998 604.140015 l
62.579998 602.339966 l
58.379997 602.339966 l
58.379997 598.080017 l
f
n
258.23999 593.700012 m
258.23999 597.959961 l
254.039978 597.959961 l
254.039978 599.76001 l
258.23999 599.76001 l
258.23999 603.959961 l
260.040009 603.959961 l
260.040009 599.76001 l
264.23999 599.76001 l
264.23999 597.959961 l
260.040009 597.959961 l
260.040009 593.700012 l
f
n
304.440002 608.880005 m
310.26001 608.880005 l
1.919998 w
0 J
S
0.64999 w
1 J
n
56.400009 461.339996 m
56.400009 471.899963 64.979996 480.47998 75.600006 480.47998 c
86.159996 480.47998 94.740005 471.899963 94.740005 461.339996 c
94.740005 450.720001 86.159996 442.139954 75.600006 442.139954 c
64.979996 442.139954 56.400009 450.720001 56.400009 461.339996 c
1.0 1.0 1.0  setrgbcolor
eofill
n
56.400009 461.339996 m
56.400009 471.899963 64.979996 480.47998 75.600006 480.47998 c
86.159996 480.47998 94.740005 471.899963 94.740005 461.339996 c
94.740005 450.720001 86.159996 442.139954 75.600006 442.139954 c
64.979996 442.139954 56.400009 450.720001 56.400009 461.339996 c
h
0.0 0.0 0.0  setrgbcolor
S
n
152.279999 441.779999 57.539993 39.119995 re
1.0 1.0 1.0  setrgbcolor
f
n
152.279999 441.779999 m
152.279999 441.779999 57.539993 39.119995 re
0.0 0.0 0.0  setrgbcolor
S
n
267.359985 461.339996 m
267.359985 471.899963 275.940002 480.47998 286.559998 480.47998 c
297.179993 480.47998 305.759979 471.899963 305.759979 461.339996 c
305.759979 450.720001 297.179993 442.139954 286.559998 442.139954 c
275.940002 442.139954 267.359985 450.720001 267.359985 461.339996 c
1.0 1.0 1.0  setrgbcolor
eofill
n
267.359985 461.339996 m
267.359985 471.899963 275.940002 480.47998 286.559998 480.47998 c
297.179993 480.47998 305.759979 471.899963 305.759979 461.339996 c
305.759979 450.720001 297.179993 442.139954 286.559998 442.139954 c
275.940002 442.139954 267.359985 450.720001 267.359985 461.339996 c
h
0.0 0.0 0.0  setrgbcolor
S
n
364.079987 441.779999 38.399994 39.119995 re
1.0 1.0 1.0  setrgbcolor
f
n
364.079987 441.779999 m
364.079987 441.779999 38.399994 39.119995 re
0.0 0.0 0.0  setrgbcolor
S
n
400.559998 440.759979 m
441.720001 461.339996 l
400.559998 481.919983 l
400.559998 440.759979 l
1.0 1.0 1.0  setrgbcolor
eofill
n
400.559998 440.759979 m
441.720001 461.339996 l
400.559998 481.919983 l
400.559998 440.759979 l
h
0.0 0.0 0.0  setrgbcolor
S
2.70665 0.0 0.0 2.70665 18.0 236.879959 cm
0.0 sg
146.705582 79.958771 m
/N13 [6.063995 0.0 0.0 6.075485 0.0 0.0] Tf
(\000\263) show
0.36946 0.0 0.0 0.36946 -6.6503 -87.517929 cm
n
94.740005 461.339996 m
144.360001 461.339996 l
0.0 0.0 0.0 setrgbcolor
S
n
143.220001 465.899963 m
152.279999 461.339996 l
143.220001 456.779999 l
143.220001 465.899963 l
eofill
n
209.819992 461.339996 m
259.440002 461.339996 l
S
n
258.300018 465.899963 m
267.359985 461.339996 l
258.300018 456.779999 l
258.300018 465.899963 l
eofill
n
305.759979 461.339996 m
356.160004 461.339996 l
S
n
355.019989 465.899963 m
364.079987 461.339996 l
355.019989 456.779999 l
355.019989 465.899963 l
eofill
n
441.720001 461.339996 m
547.140015 461.339996 l
S
n
546.0 465.899963 m
555.119995 461.339996 l
546.0 456.779999 l
546.0 465.899963 l
eofill
2.70665 0.0 0.0 2.70665 18.0 236.879959 cm
0.0 sg
96.717514 79.958771 m
/N13 [9.293198 0.0 0.0 9.294632 0.0 0.0] Tf
(\000\246) show
17.911469 79.958771 m
/N13 [9.275787 0.0 0.0 9.294632 0.0 0.0] Tf
(\000\246) show
0.36946 0.0 0.0 0.36946 -6.6503 -87.517929 cm
n
459.179993 461.339996 m
459.179993 504.059998 l
75.600006 504.059998 l
75.600006 488.459991 l
0.0 0.0 0.0 setrgbcolor
S
n
80.100006 489.600006 m
75.600006 480.47998 l
71.040009 489.600006 l
80.100006 489.600006 l
eofill
n
286.559998 504.059998 m
286.559998 488.459991 l
S
n
291.119995 489.600006 m
286.559998 480.47998 l
282.0 489.600006 l
291.119995 489.600006 l
eofill
n
75.600006 422.940002 m
75.600006 434.160004 l
S
n
71.040009 433.019989 m
75.600006 442.139954 l
80.100006 433.019989 l
71.040009 433.019989 l
eofill
2.70665 0.0 0.0 2.70665 18.0 236.879959 cm
0.0 sg
131.077393 78.961212 m
/N13 [11.950287 0.0 4.087158 11.950623 0.0 0.0] Tf
(\000O) show
0.36946 0.0 0.0 0.36946 -6.6503 -87.517929 cm
n
97.139999 482.459991 m
97.139999 486.720001 l
92.939995 486.720001 l
92.939995 488.519989 l
97.139999 488.519989 l
97.139999 492.720001 l
98.939995 492.720001 l
98.939995 488.519989 l
103.139999 488.519989 l
103.139999 486.720001 l
98.939995 486.720001 l
98.939995 482.459991 l
0.0 0.0 0.0 setrgbcolor
f
n
97.139999 437.519989 m
97.139999 441.779999 l
92.939995 441.779999 l
92.939995 443.579987 l
97.139999 443.579987 l
97.139999 447.779999 l
98.939995 447.779999 l
98.939995 443.579987 l
103.139999 443.579987 l
103.139999 441.779999 l
98.939995 441.779999 l
98.939995 437.519989 l
f
n
56.579998 481.379944 m
56.579998 485.639954 l
52.379997 485.639954 l
52.379997 487.379944 l
56.579998 487.379944 l
56.579998 491.639954 l
58.379997 491.639954 l
58.379997 487.379944 l
62.579998 487.379944 l
62.579998 485.639954 l
58.379997 485.639954 l
58.379997 481.379944 l
f
n
258.23999 477.0 m
258.23999 481.259979 l
254.039978 481.259979 l
254.039978 483.0 l
258.23999 483.0 l
258.23999 487.259979 l
260.040009 487.259979 l
260.040009 483.0 l
264.300018 483.0 l
264.300018 481.259979 l
260.040009 481.259979 l
260.040009 477.0 l
f
n
304.440002 492.179993 m
310.320007 492.179993 l
1.919998 w
0 J
S
0.64999 w
1 J
n
489.899963 336.660004 m
489.899963 347.220001 498.47998 355.859985 509.039978 355.859985 c
519.659973 355.859985 528.23999 347.220001 528.23999 336.660004 c
528.23999 326.039978 519.659973 317.459991 509.039978 317.459991 c
498.47998 317.459991 489.899963 326.039978 489.899963 336.660004 c
1.0 1.0 1.0  setrgbcolor
eofill
n
489.899963 336.660004 m
489.899963 347.220001 498.47998 355.859985 509.039978 355.859985 c
519.659973 355.859985 528.23999 347.220001 528.23999 336.660004 c
528.23999 326.039978 519.659973 317.459991 509.039978 317.459991 c
498.47998 317.459991 489.899963 326.039978 489.899963 336.660004 c
h
0.0 0.0 0.0  setrgbcolor
S
2.70665 0.0 0.0 2.70665 18.0 236.879959 cm
0.0 sg
178.915161 33.916519 m
/N13 [9.293198 0.0 0.0 9.274765 0.0 0.0] Tf
(\000\246) show
0.36946 0.0 0.0 0.36946 -6.6503 -87.517929 cm
n
509.039978 576.539978 m
509.039978 522.179993 509.039978 407.639984 509.039978 367.619995 c
0.0 0.0 0.0 setrgbcolor
S
n
509.039978 570.959961 m
512.159973 570.959961 514.679993 573.47998 514.679993 576.539978 c
514.679993 579.659973 512.159973 582.179993 509.039978 582.179993 c
505.97998 582.179993 503.459991 579.659973 503.459991 576.539978 c
503.459991 573.47998 505.97998 570.959961 509.039978 570.959961 c
eofill
n
513.600037 368.759979 m
509.039978 359.639984 l
504.47998 368.759979 l
513.600037 368.759979 l
eofill
n
532.080017 691.619995 m
532.080017 618.119995 532.080017 479.579987 532.080017 371.160004 c
S
n
532.080017 686.039978 m
535.140015 686.039978 537.659973 688.559998 537.659973 691.619995 c
537.659973 694.73999 535.140015 697.26001 532.080017 697.26001 c
528.959961 697.26001 526.5 694.73999 526.5 691.619995 c
526.5 688.559998 528.959961 686.039978 532.080017 686.039978 c
eofill
n
532.080017 371.160004 m
525.539978 357.899994 l
S
n
530.100037 356.940002 m
522.0 350.759979 l
521.940002 360.959991 l
530.100037 356.940002 l
eofill
n
486.059998 461.459991 m
486.059998 371.160004 l
S
n
486.059998 455.880005 m
489.119995 455.880005 491.639954 458.399963 491.639954 461.459991 c
491.639954 464.579987 489.119995 467.100006 486.059998 467.100006 c
482.940002 467.100006 480.419983 464.579987 480.419983 461.459991 c
480.419983 458.399963 482.940002 455.880005 486.059998 455.880005 c
eofill
n
486.059998 371.160004 m
492.839996 358.200012 l
S
n
496.319977 361.319977 m
496.5 351.119995 l
488.279999 357.119995 l
496.319977 361.319977 l
eofill
n
489.899963 336.660004 m
404.459991 336.660004 l
S
n
363.300018 336.660004 m
37.200001 336.660004 l
37.200001 692.339966 l
52.259987 692.339966 l
S
n
51.119999 696.839966 m
60.180008 692.339966 l
51.119999 687.779968 l
51.119999 696.839966 l
eofill
n
37.200001 577.559998 m
48.419998 577.859985 l
S
n
47.16 582.359985 m
56.34 578.039978 l
47.400009 573.299988 l
47.16 582.359985 l
eofill
n
37.200001 462.47998 m
37.200001 461.339996 l
48.419998 461.339996 l
S
n
47.279999 465.899963 m
56.400009 461.339996 l
47.279999 456.779999 l
47.279999 465.899963 l
eofill
2.70665 0.0 0.0 2.70665 18.0 236.879959 cm
0.0 sg
102.126419 41.87471 m
/N21 [11.956161 0.0 0.0 11.949142 0.0 0.0] Tf
(y) show
207.267609 162.222946 m
/N20 [6.979324 0.0 0.0 6.973129 0.0 0.0] Tf
(1) show
202.789719 165.215591 m
/N21 [11.964615 0.0 0.0 11.953979 0.0 0.0] Tf
(x) show
207.555786 119.572357 m
/N20 [6.983322 0.0 0.0 6.982285 0.0 0.0] Tf
(2) show
202.302048 122.565002 m
/N21 [11.971497 0.0 0.0 11.969574 0.0 0.0] Tf
(x) show
207.577988 76.943954 m
/N21 [6.97966 0.0 0.0 6.99086 0.0 0.0] Tf
(n) show
202.324249 79.936584 m
/N21 [11.96524 0.0 0.0 11.98439 0.0 0.0] Tf
(x) show
0.36946 0.0 0.0 0.36946 -6.6503 -87.517929 cm
n
470.339996 356.519989 m
476.160004 356.519989 l
1.919998 w
0 J
0.0 0.0 0.0 setrgbcolor
S
0.64999 w
1 J
n
520.200012 378.23999 m
526.080017 378.23999 l
1.919998 w
0 J
S
0.64999 w
1 J
n
544.5 357.779968 m
550.320007 357.779968 l
1.919998 w
0 J
S
0.64999 w
1 J
2.70665 0.0 0.0 2.70665 18.0 236.879959 cm
0.0 sg
23.409042 144.666168 m
/N20 [6.975266 0.0 0.0 6.982285 0.0 0.0] Tf
(1) show
18.97551 147.658798 m
/N21 [11.957703 0.0 0.0 11.969574 0.0 0.0] Tf
(v) show
24.207077 101.527893 m
/N20 [6.971359 0.0 0.0 6.982285 0.0 0.0] Tf
(2) show
18.643005 104.520523 m
/N21 [11.951065 0.0 0.0 11.969574 0.0 0.0] Tf
(v) show
22.987854 57.813263 m
/N21 [6.97966 0.0 0.0 6.99086 0.0 0.0] Tf
(n) show
17.8228 60.805893 m
/N21 [11.96524 0.0 0.0 11.98439 0.0 0.0] Tf
(v) show
0.36946 0.0 0.0 0.36946 -6.6503 -87.517929 cm
n
509.039978 282.959991 m
509.039978 309.539978 l
0.0 0.0 0.0 setrgbcolor
S
n
504.47998 308.399994 m
509.039978 317.459991 l
513.600037 308.399994 l
504.47998 308.399994 l
eofill
2.70665 0.0 0.0 2.70665 18.0 236.879959 cm
0.0 sg
178.915161 6.960648 m
/N21 [11.947998 0.0 0.0 11.950623 0.0 0.0] Tf
(k) show
144.998672 32.896805 m
/N13 [11.950287 0.0 4.087158 11.950623 0.0 0.0] Tf
(\000O) show
0.36946 0.0 0.0 0.36946 -6.6503 -87.517929 cm
n
403.019989 317.100006 38.399994 39.119995 re
1.0 1.0 1.0 setrgbcolor
f
n
403.019989 317.100006 m
403.019989 317.100006 38.399994 39.119995 re
0.0 0.0 0.0  setrgbcolor
S
2.70665 0.0 0.0 2.70665 18.0 236.879959 cm
0.0 sg
145.464203 32.896805 m
(\000O) show
135.62175 34.404205 m
/N13 [6.063995 0.0 0.0 6.075485 0.0 0.0] Tf
(\000\263) show
58.965973 123.385193 m
%ADOBeginSubsetFont: GLGEAE+SymbolMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/GLGEAE+SymbolMT 2 GetGlyphDirectory
11 <001C60D8A8C9B81F2C3AD88BE944FF80318D8AF8350026B5EFE87FE68764
0AF4A47547388792B22F6DB8B11FE56DE72D1A141C3CCB5CDB12F640DEFF9A6D
3F1A686471C682D0F16FF3566BA8C987CE4F15A3A503FF4814FD7B> |
12 <001C60D8A8C9B81F2C3AA92CC6997C003EEB299D29C718A8A6BCF0E8A765
C1B5FF867F31B4D88A3D7B6BCFF578B7D351C94320922B2E7FDB620754441B20
B2299DD3C52447CAF34E7470ADA555A3FE58BD72E3FC77877CB8C5B6> |
!
end
end end
%ADOEndSubsetFont
/N13 [8.355911 0.0 0.0 11.199173 0.0 0.0] Tf
(\000\013\000\f)
[6.495033 6.495033 ] pdfxs
61.360092 123.340866 m
%ADOBeginSubsetFont: GLGEAE+SymbolMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/GLGEAE+SymbolMT 1 GetGlyphDirectory
120 <001C60D8A8C9B74F36621EB2C84B0A5DEC93E191626C4A46083AC3925EB
D160A2AFE845B57B6A10D3B2D4CAE951193F75E5CAF2AC8DA0C287A6F4752D89
5ADD601035147029BC83C> |
!
end
end end
%ADOEndSubsetFont
/N13 [8.487442 0.0 0.0 8.482162 0.0 0.0] Tf
(\000x) show
54.621109 123.340866 m
/N21 [8.487442 0.0 0.0 8.482162 0.0 0.0] Tf
(f) show
60.384705 165.902786 m
/N13 [8.355911 0.0 0.0 11.199173 0.0 0.0] Tf
(\000\013\000\f)
[6.495033 6.495033 ] pdfxs
62.778809 165.858429 m
/N13 [8.487442 0.0 0.0 8.482162 0.0 0.0] Tf
(\000x) show
56.039734 165.858429 m
/N21 [8.487442 0.0 0.0 8.482162 0.0 0.0] Tf
(f) show
58.965973 80.490784 m
/N13 [8.355911 0.0 0.0 11.199173 0.0 0.0] Tf
(\000\013\000\f)
[6.495033 6.495033 ] pdfxs
61.360092 80.446442 m
/N13 [8.487442 0.0 0.0 8.482162 0.0 0.0] Tf
(\000x) show
54.621109 80.446442 m
/N21 [8.487442 0.0 0.0 8.482162 0.0 0.0] Tf
(f) show
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font TimesNewRomanPSMT
%%+ font TimesNewRomanPS-ItalicMT
%%EOF

%%EndDocument
 @endspecial 247 2188 a Fq(Fig.)d(2.)70 b(Architecture)27
b(of)c(the)i(KWT)-6 b(A)22 b(netw)o(ork)-82 2375 y Fp(The)30
b(number)f(of)h(neurons)f(and)h(connections)f(of)h(these)h(models)-165
2474 y(are)21 b(listed)h(in)g(T)-7 b(able)22 b(I.)f(From)g(this)h
(table,)g(it)g(is)h(clear)e(that)h(the)f(model)-165 2574
y(proposed)c(in)i([29)o(])h(has)f(a)h(lo)n(w)f(model)g(comple)o(xity)-5
b(.)17 b(F)o(or)i(this)h(reason,)-165 2673 y(we)29 b(adopt)e(this)i
(model)f(for)g(KWT)-8 b(A)29 b(operation.)730 2826 y
Fq(T)-6 b(ABLE)22 b(I)-118 2926 y(M)t Fd(O)t(D)t(E)t(L)d(C)t(O)t(M)t(P)
t(L)t(E)t(X)t(I)t(T)t(Y)d(O)t(F)j(F)t(O)t(U)t(R)f(R)t(E)t(C)t(U)t(R)t
(R)t(E)t(N)t(T)g(N)t(E)t(U)t(R)t(A)t(L)h(N)t(E)t(T)t(W)s(O)t(R)t(K)t(S)
e(F)t(O)t(R)-132 3026 y Fq(K)t(W)t(T)n(A)g Fd(O)t(P)t(E)t(R)t(A)n(T)t
(I)t(O)t(N)f(B)r(A)t(S)t(E)t(D)j(O)t(N)g Fq(L)t Fd(I)t(N)t(E)t(A)t(R)f
(P)t(R)r(O)t(G)t(R)t(A)t(M)t(M)t(I)t(N)t(G)d(F)t(O)t(R)t(M)t(U)t(L)t(A)
n(T)t(I)t(O)t(N)p 225 3129 1240 4 v 223 3204 4 75 v 275
3182 a Fq(Model)p 496 3204 V 496 3204 V 103 w(Eqn)p 706
3204 V 706 3204 V 101 w(Neurons)p 1031 3204 V 1031 3204
V 101 w(Connections)p 1463 3204 V 225 3207 1240 4 v 223
3282 4 75 v 306 3260 a([26)q(])p 496 3282 V 147 w(\(4\))p
706 3282 V 147 w Fc(n)h Fb(+)f(1)p 1031 3282 V 197 w(2)p
Fc(n)h Fb(+)f(1)p 1463 3282 V 225 3286 1240 4 v 223 3360
4 75 v 306 3338 a Fq([27)q(])p 496 3360 V 147 w(\(6\))p
706 3360 V 130 w Fb(2)p Fc(n)g Fb(+)h(1)p 1031 3360 V
179 w(3)p Fc(n)g Fb(+)f(1)p 1463 3360 V 225 3364 1240
4 v 223 3438 4 75 v 306 3416 a Fq([28)q(])p 496 3438
V 147 w(\(7\))p 706 3438 V 130 w Fb(2)p Fc(n)g Fb(+)h(1)p
1031 3438 V 179 w(3)p Fc(n)g Fb(+)f(1)p 1463 3438 V 225
3442 1240 4 v 223 3516 4 75 v 306 3494 a Fq([29)q(])p
496 3516 V 131 w(\(11\))p 706 3516 V 130 w Fc(n)h Fb(+)f(1)p
1031 3516 V 197 w(2)p Fc(n)h Fb(+)f(1)p 1463 3516 V 225
3520 1240 4 v 383 3789 a Fp(I)t(V)-7 b(.)46 b(S)t Fq(I)t(M)t(U)t(L)t(A)
m(T)t(I)t(O)t(N)25 b Fp(R)t Fq(E)t(S)t(U)t(L)n(T)t(S)-82
3913 y Fp(T)-7 b(o)31 b(sho)n(w)g(the)g(ef)n(fecti)n(v)o(eness)e(and)i
(ef)n(\002cienc)o(y)f(of)g(the)i(proposed)-165 4013 y(KWT)-8
b(A)37 b(neural)e(netw)o(ork,)g(the)h(follo)n(wing)f(four)g
(simulations)h(are)-165 4113 y(performed.)-82 4210 y(In)24
b(the)g(\002rst)h(simulation,)e(the)h(inputs)f(are)i(set)f(to)h(be)f
Fn(v)1517 4222 y Fk(i)1568 4210 y Fm(=)e Fn(i)p Fp(,)i
Fm(\()p Fn(i)f Fm(=)-165 4310 y(1)p Fn(;)14 b Fm(2)p
Fn(;)g Fm(3)p Fn(;)g Fm(4\))27 b Fp(and)i Fn(k)e Fm(=)c(2)p
Fp(;)29 b(that)g(is,)h(select)g(tw)o(o)f(lar)o(gest)f(signals)i(from)
-165 4410 y(the)c(inputs.)f(The)g(transient)h(beha)n(viors)e(of)i
Fn(x)h Fp(are)f(sho)n(wn)f(in)h(Fig.)g(3.)-165 4509 y(It)33
b(can)f(be)h(seen)g(that)g(the)g(steady)g(outputs)f(are)g
Fm([0)h(0)g(1)g(1])1624 4479 y Fk(T)1676 4509 y Fp(.)g(This)-165
4609 y(means)28 b(tw)o(o)h(lar)o(gest)g(elements;)f(i.e.,)h
Fn(v)1018 4621 y Fh(3)1085 4609 y Fp(and)f Fn(v)1274
4621 y Fh(4)1341 4609 y Fp(are)h(successfully)-165 4709
y(selected.)j(From)g(the)g(\002gure,)f(it)i(is)h(also)e(ob)o(vious)f
(that)h(the)g(neural)-165 4808 y(netw)o(ork)26 b(can)i(quickly)f(con)m
(v)o(er)o(ge)e(to)j(the)g(desired)f(equilibria)g(once)-165
4908 y(the)h(inputs)g(are)h(imposed.)-82 5006 y(In)f(the)h(second)e
(simulation,)h(consider)f(4)i(sinusoidal)f(input)f(sig-)-165
5105 y(nals)d(ranged)e(from)g Fi(\000)p Fm(1)i Fp(to)g
Fm(1)f Fp(with)h(constant)f(phase)g(dif)n(ference)f(and)-165
5205 y Fn(k)k Fm(=)c(2)p Fp(.)27 b(Fig.)g(4)h(illustrates)f(the)g(4)h
(input)e(signals)h(and)g(the)g(transient)-165 5305 y(outputs)f(of)i
(the)f(KWT)-8 b(A)29 b(netw)o(ork.)d(The)h(simulation)g(results)h(sho)n
(w)-165 5404 y(that)35 b(the)f(KWT)-8 b(A)36 b(netw)o(ork)e(can)g(ef)n
(fecti)n(v)o(ely)f(determine)g(the)i(tw)o(o)-165 5504
y(lar)o(gest)28 b(signals)g(from)g(the)g(time-v)n(arying)e(signals)j
(in)f(real)h(time.)1848 1799 y @beginspecial 87 @llx
262 @lly 507 @urx 578 @ury 2808 @rwi @setspecial
%%BeginDocument: dynamic.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: D:\ssgu\ijcnn\untitled2.eps
%%CreationDate: 12/12/2006  12:41:33
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    87   262   507   578
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    87   262   507   578
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1044 6936 csm

    0     0  5045  3782 rc
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5046 3783 rf
6 w
0 3082 3910 0 0 -3082 656 3366 4 MP
PP
-3910 0 0 3082 3910 0 0 -3082 656 3366 5 MP stroke
4 w
DO
SO
6 w
0 sg
 656  284 mt 4566  284 L
 656 3366 mt 4566 3366 L
4566 3366 mt 4566  284 L
 656 3366 mt  656  284 L
 656 3366 mt 4566 3366 L
 656 3366 mt  656  284 L
 656 3366 mt  656 3326 L
 656  284 mt  656  323 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 623 3511 mt 
(0) s
1307 3366 mt 1307 3326 L
1307  284 mt 1307  323 L
1224 3511 mt 
(0.5) s
1959 3366 mt 1959 3326 L
1959  284 mt 1959  323 L
1926 3511 mt 
(1) s
2611 3366 mt 2611 3326 L
2611  284 mt 2611  323 L
2528 3511 mt 
(1.5) s
3262 3366 mt 3262 3326 L
3262  284 mt 3262  323 L
3229 3511 mt 
(2) s
3914 3366 mt 3914 3326 L
3914  284 mt 3914  323 L
3831 3511 mt 
(2.5) s
4566 3366 mt 4566 3326 L
4566  284 mt 4566  323 L
4533 3511 mt 
(3) s
 656 3366 mt  695 3366 L
4566 3366 mt 4526 3366 L
 385 3410 mt 
(-0.2) s
 656 2925 mt  695 2925 L
4566 2925 mt 4526 2925 L
 555 2969 mt 
(0) s
 656 2485 mt  695 2485 L
4566 2485 mt 4526 2485 L
 455 2529 mt 
(0.2) s
 656 2045 mt  695 2045 L
4566 2045 mt 4526 2045 L
 455 2089 mt 
(0.4) s
 656 1604 mt  695 1604 L
4566 1604 mt 4526 1604 L
 455 1648 mt 
(0.6) s
 656 1164 mt  695 1164 L
4566 1164 mt 4526 1164 L
 455 1208 mt 
(0.8) s
 656  724 mt  695  724 L
4566  724 mt 4526  724 L
 555  768 mt 
(1) s
 656  284 mt  695  284 L
4566  284 mt 4526  284 L
 455  328 mt 
(1.2) s
 656  284 mt 4566  284 L
 656 3366 mt 4566 3366 L
4566 3366 mt 4566  284 L
 656 3366 mt  656  284 L
gs 656 284 3911 3083 rc
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 4267 2925 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3968 2925 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3669 2925 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3370 2925 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3071 2925 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 2772 2925 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 2473 2925 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 2174 2925 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 1 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1875 2924 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 1 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 1 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 1 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 1 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 1 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 1 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 1 1 0 
1 0 1 0 1 0 1576 2913 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 1 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 1 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 1 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 1 1 0 1 0 1 0 1 0 1 0 
1 0 1 1 1 0 1 0 1 0 1 0 1 0 1 0 
1 1 1 0 1 0 1 0 1 0 1 0 1 0 1 1 
1 0 1 0 1 0 1 0 1 0 1 0 1 1 1 0 
1 0 1 0 1 0 1 0 1 1 1 0 1 0 1 0 
1 0 1 0 1 1 1 0 1 0 1 0 1 0 1 1 
1 0 1 0 1 0 1 0 1 0 1 1 1 0 1 0 
1 0 1 0 1 1 1 0 1 0 1 0 1 0 1 1 
1 0 1 0 1 0 1 0 1 1 1 0 1 0 1 0 
1 1 1 0 1 0 1 0 1 0 1 1 1 0 1 0 
1 0 1 1 1 0 1 0 1 0 1 1 1 0 1 0 
1 0 1 1 1 0 1 0 1 0 1 1 1 0 1 0 
1 0 1 1 1 0 1 0 1 0 1 1 1 0 1 0 
1 1 1 0 1 0 1 0 1 1 1 0 1 0 1 1 
1 0 1 0 1 1 1 0 1 0 1 0 1 1 1 0 
1 0 1 1 1 0 1 0 1 1 1 0 1 0 1 1 
1 0 1 0 1 1 1 0 1 0 1 1 1 0 1 0 
1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 0 
1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 1 
1 0 1 0 1 1 1 0 1 1 1 0 1 0 1 1 
1 0 1 1 1 0 1 1 1 0 1 0 1 1 1 0 
1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 
1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 
1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 
1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 
1 1 1 0 1 1 1 0 1 1 1 1 1 0 1 1 
1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 
1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 
1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 
1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 
1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 
1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1277 2805 300 MP stroke
1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 0 1 2 2 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 0 1 2 2 1 1 1 1 
1 1 0 1 2 2 1 1 1 1 1 1 0 1 2 2 
1 1 1 1 0 1 2 2 1 1 0 1 2 2 1 1 
0 1 2 2 1 1 0 1 2 2 0 1 2 2 1 1 
0 1 2 2 0 1 2 2 0 1 2 2 0 1 2 2 
0 1 2 2 0 1 2 2 0 1 2 2 1 1 0 2 
2 2 0 1 2 2 1 1 0 2 2 2 0 1 2 2 
0 2 2 2 0 1 2 2 0 2 2 2 0 1 2 2 
0 2 2 2 0 2 2 2 0 1 2 2 0 2 2 2 
0 2 2 2 0 2 2 2 0 2 2 2 0 2 2 2 
0 2 2 2 0 2 2 2 0 2 2 2 0 2 1 1 
0 2 2 2 0 2 2 2 0 3 2 2 0 2 2 2 
0 2 1 1 0 2 2 2 0 3 2 2 0 2 1 1 
0 2 2 2 0 3 2 2 0 3 2 2 0 3 2 2 
0 3 2 2 0 2 1 1 0 3 2 2 0 2 1 1 
0 3 2 2 0 2 1 1 0 2 1 1 0 3 2 2 
0 2 1 1 0 2 1 1 0 2 1 1 0 2 1 1 
0 2 1 1 0 2 1 1 0 1 1 1 0 2 1 1 
0 2 1 1 0 2 1 1 0 2 1 1 0 3 1 1 
0 2 1 1 0 2 1 1 0 2 1 1 0 2 1 1 
0 2 1 1 0 2 1 1 0 3 1 1 0 2 1 1 
0 2 1 1 0 2 1 1 0 3 1 1 0 2 1 1 
0 3 1 1 0 2 1 1 0 2 1 1 0 3 1 1 
0 2 1 1 0 3 1 1 0 2 1 1 0 3 1 1 
0 2 1 1 0 3 1 1 0 3 1 1 0 2 1 1 
0 3 1 1 0 3 1 1 0 3 1 1 0 2 1 1 
0 3 1 1 0 3 1 1 0 3 1 1 0 3 1 1 
0 3 1 1 0 3 1 1 0 3 1 1 0 3 1 1 
0 3 1 1 0 3 1 1 0 3 1 1 0 3 1 1 
0 3 1 1 0 3 1 1 0 4 1 1 0 3 1 1 
0 3 1 1 0 4 1 1 0 3 1 1 0 4 1 1 
0 3 1 1 0 3 1 1 0 4 1 1 0 4 1 1 
0 3 1 1 0 4 1 1 0 3 1 1 0 4 1 1 
0 4 1 1 0 4 1 1 0 3 1 1 0 4 1 1 
0 4 1 1 0 4 1059 2283 300 MP stroke
1 1 0 4 1 1 0 4 1 1 0 4 1 1 0 4 
1 1 0 4 1 1 0 4 1 1 0 5 1 1 0 4 
1 1 0 4 1 1 0 4 1 1 0 5 1 1 0 4 
1 1 0 4 1 1 0 5 1 1 0 4 1 1 0 5 
1 1 0 5 1 1 0 4 1 1 0 5 1 1 0 5 
1 1 0 5 1 1 0 4 1 1 0 5 1 1 0 5 
1 1 0 5 1 1 0 5 1 1 0 5 1 1 0 5 
1 1 0 5 1 1 0 6 1 1 0 5 1 1 0 5 
1 1 0 5 1 1 0 6 1 1 0 5 1 1 0 6 
1 1 0 5 1 1 0 6 1 1 0 5 1 1 0 6 
1 1 0 6 1 1 0 6 1 1 0 5 1 1 0 6 
1 1 0 6 1 1 0 6 1 1 0 6 1 1 0 6 
1 1 0 7 1 1 0 6 1 1 0 6 1 1 0 7 
1 1 0 6 1 1 0 6 1 1 0 6 1 1 0 7 
1 1 0 6 1 1 0 7 1 1 0 7 1 1 0 6 
1 1 0 7 1 1 0 7 1 1 0 7 1 1 0 7 
1 1 0 7 1 1 0 7 1 1 0 7 1 1 0 7 
1 1 0 7 1 1 0 8 1 1 0 8 1 1 0 7 
1 1 0 8 1 1 0 8 1 1 0 8 1 1 0 7 
1 1 0 8 1 1 0 9 1 1 0 8 1 1 0 8 
1 1 0 8 1 1 0 9 1 1 0 9 1 1 0 8 
1 1 0 9 1 1 0 9 1 1 0 9 1 1 0 9 
1 1 0 9 1 1 0 9 1 1 0 9 1 1 0 10 
1 1 0 9 1 1 0 10 1 1 0 9 1 1 0 10 
1 1 0 9 1 1 0 10 1 1 0 10 1 1 0 10 
1 1 0 10 1 1 0 9 1 1 0 10 1 1 0 11 
1 1 0 9 1 1 0 10 1 1 0 10 1 1 0 10 
1 1 0 10 1 1 0 10 1 1 0 10 1 1 0 10 
1 1 0 10 1 1 0 10 1 1 0 10 1 1 0 10 
1 1 0 10 1 1 0 9 1 1 0 10 1 1 0 10 
1 1 0 9 1 1 0 9 1 1 0 10 1 1 0 9 
1 1 0 9 1 1 0 9 1 1 0 9 1 1 0 8 
1 1 0 8 1 1 0 8 1 1 0 8 1 1 0 8 
1 1 0 8 1 1 0 7 1 1 0 7 1 1 0 7 
1 1 0 6 1 1 0 7 1 1 0 6 1 1 0 6 
1 1 0 6 1 1 0 6 1 1 0 5 1 1 0 5 
1 1 0 5 1 1 0 5 1 1 0 4 1 1 0 5 
1 1 0 4 1 1 909 1083 300 MP stroke
0 4 1 1 0 4 1 1 0 3 1 1 0 4 1 1 
0 3 1 1 0 3 1 1 0 3 1 1 0 2 1 1 
0 3 1 1 0 2 1 1 0 3 2 2 0 3 2 2 
0 2 1 1 0 2 2 2 0 1 2 2 1 1 1 1 
1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 
1 0 1 0 1 -1 1 -1 1 0 1 -1 0 -1 2 -2 
1 -1 0 -1 2 -2 0 -1 2 -2 0 -2 2 -2 0 -2 
2 -2 0 -2 2 -2 0 -2 1 -1 0 -2 2 -2 0 -3 
2 -2 0 -2 1 -1 0 -2 1 -1 0 -1 1 -1 0 -3 
2 -2 0 -2 1 -1 0 -3 2 -2 0 -2 1 -1 0 -3 
2 -2 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -1 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -3 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -2 1 -1 0 -3 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -3 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -2 
1 -1 0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 1 -1 0 -2 
1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -4 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -4 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -4 1 -1 0 -3 1 -1 0 -3 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 1 -1 0 -3 
1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 
1 -1 0 -5 1 -1 0 -3 1 -1 0 -4 1 -1 0 -4 
1 -1 0 -5 1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -5 1 -1 0 -4 1 -1 0 -4 
1 -1 0 -5 1 -1 0 -4 1 -1 0 -5 1 -1 0 -4 
1 -1 0 -5 1 -1 0 -5 1 -1 0 -4 1 -1 0 -5 
1 -1 0 -5 1 -1 0 -5 1 -1 0 -4 1 -1 0 -5 
1 -1 0 -5 1 -1 0 -5 1 -1 0 -5 1 -1 0 -5 
1 -1 0 -6 1 -1 0 -5 1 -1 0 -5 1 -1 0 -5 
1 -1 0 -6 1 -1 736 1552 300 MP stroke
0 -5 1 -1 0 -5 1 -1 0 -6 1 -1 0 -5 1 -1 
0 -6 1 -1 0 -6 1 -1 0 -5 1 -1 0 -6 1 -1 
0 -6 1 -1 0 -6 1 -1 0 -5 1 -1 0 -7 1 -1 
0 -5 1 -1 0 -7 1 -1 0 -6 1 -1 0 -6 1 -1 
0 -6 1 -1 0 -6 1 -1 0 -7 1 -1 0 -6 1 -1 
0 -6 1 -1 0 -7 1 -1 0 -6 1 -1 0 -7 1 -1 
0 -7 1 -1 0 -6 1 -1 0 -7 1 -1 0 -7 1 -1 
0 -7 1 -1 0 -7 1 -1 0 -7 1 -1 0 -7 1 -1 
0 -7 1 -1 0 -7 1 -1 0 -8 1 -1 0 -7 1 -1 
0 -7 1 -1 0 -8 1 -1 0 -7 1 -1 0 -8 1 -1 
0 -8 1 -1 0 -7 1 -1 0 -8 1 -1 0 -8 1 -1 
0 -8 1 -1 0 -8 1 -1 0 -8 1 -1 0 -8 1 -1 
0 -8 1 -1 0 -9 1 -1 0 -8 1 -1 0 -9 1 -1 
0 -8 1 -1 0 -9 1 -1 0 -8 1 -1 0 -9 1 -1 
0 -9 1 -1 0 -9 1 -1 0 -9 1 -1 0 -8 1 -1 
0 -10 1 -1 0 -9 1 -1 0 -9 1 -1 0 -10 1 -1 
0 -9 1 -1 0 -10 1 -1 0 -9 1 -1 0 -10 1 -1 
0 -10 1 -1 0 -9 1 -1 0 -10 1 -1 0 -10 1 -1 
0 -10 1 -1 0 -10 1 -1 0 -11 1 -1 0 -10 1 -1 
0 -10 1 -1 0 -11 1 -1 0 -10 1 -1 0 -11 1 -1 
0 -12 656 2265 162 MP stroke
DA
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 4267 2925 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3968 2925 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3669 2925 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3370 2925 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3071 2925 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 2772 2925 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 2473 2925 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 2174 2925 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 1 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 1 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 1 1875 2922 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 1 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 1 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 1 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 1 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 1 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 1 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 1 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 1 1 0 1 0 1 0 
1 0 1 0 1 0 1 1 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 1 1 0 1 0 1 0 1 0 
1 0 1 1 1 0 1 0 1 0 1 0 1 0 1 0 
1 1 1 0 1 0 1 0 1 0 1 0 1 1 1 0 
1 0 1 0 1 0 1 0 1 1 1 0 1 0 1 0 
1 0 1 0 1 1 1 0 1 0 1 0 1 0 1 1 
1 0 1 0 1 0 1 0 1 1 1 0 1 0 1 0 
1 0 1 1 1 0 1576 2898 300 MP stroke
1 0 1 0 1 0 1 1 1 0 1 0 1 0 1 1 
1 0 1 0 1 0 1 0 1 1 1 0 1 0 1 0 
1 1 1 0 1 0 1 0 1 1 1 0 1 0 1 0 
1 1 1 0 1 0 1 0 1 1 1 0 1 0 1 0 
1 1 1 0 1 0 1 0 1 1 1 0 1 0 1 1 
1 0 1 0 1 0 1 1 1 0 1 0 1 1 1 0 
1 0 1 0 1 1 1 0 1 0 1 1 1 0 1 0 
1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 0 
1 0 1 1 1 0 1 0 1 1 1 0 1 0 1 1 
1 0 1 0 1 1 1 0 1 1 1 0 1 0 1 1 
1 0 1 0 1 1 1 0 1 1 1 0 1 0 1 1 
1 0 1 1 1 0 1 0 1 1 1 0 1 1 1 0 
1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 1 
1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 
1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 
1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 
1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 0 
1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 0 
1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 
1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 
1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 
1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 
1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 
1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 
2 2 1 1 1 1 1 1 1 1 1 1 1 1 0 1 
2 2 1 1 1 1 1 1 1 1 0 1 2 2 1 1 
1 1 0 1 2 2 1 1 0 1 2 2 1 1 1 1 
0 1 2 2 1 1 0 1 2 2 1 1 0 1 2 2 
0 1 2 2 0 1 2 2 1 1 0 1 2 2 0 1 
2 2 0 1 2 2 0 1 2 2 0 1 2 2 1 1 
0 2 2 2 0 1 2 2 1 1 0 2 2 2 1 1 
0 2 2 2 0 1 2 2 0 2 2 2 1 1 0 2 
2 2 0 2 2 2 1 1 0 2 2 2 0 2 2 2 
0 2 2 2 0 1 2 2 0 2 2 2 0 2 2 2 
0 2 2 2 0 2 1278 2658 300 MP stroke
2 2 0 2 1 1 0 2 2 2 0 2 2 2 0 2 
2 2 0 2 1 1 0 2 2 2 0 2 2 2 0 2 
1 1 0 2 2 2 0 2 1 1 0 2 2 2 0 3 
2 2 0 3 2 2 0 3 2 2 0 3 2 2 0 3 
2 2 0 3 2 2 0 2 1 1 0 3 2 2 0 2 
1 1 0 3 2 2 0 2 1 1 0 2 1 1 0 3 
2 2 0 2 1 1 0 2 1 1 0 2 1 1 0 2 
1 1 0 2 1 1 0 2 1 1 0 2 1 1 0 2 
1 1 0 2 1 1 0 2 1 1 0 2 1 1 0 2 
1 1 0 2 1 1 0 2 1 1 0 2 1 1 0 2 
1 1 0 3 1 1 0 2 1 1 0 2 1 1 0 2 
1 1 0 3 1 1 0 2 1 1 0 2 1 1 0 3 
1 1 0 2 1 1 0 2 1 1 0 3 1 1 0 2 
1 1 0 3 1 1 0 2 1 1 0 3 1 1 0 3 
1 1 0 2 1 1 0 3 1 1 0 2 1 1 0 3 
1 1 0 3 1 1 0 3 1 1 0 2 1 1 0 3 
1 1 0 3 1 1 0 3 1 1 0 3 1 1 0 3 
1 1 0 3 1 1 0 3 1 1 0 3 1 1 0 3 
1 1 0 3 1 1 0 3 1 1 0 3 1 1 0 3 
1 1 0 3 1 1 0 4 1 1 0 3 1 1 0 3 
1 1 0 4 1 1 0 3 1 1 0 3 1 1 0 4 
1 1 0 3 1 1 0 4 1 1 0 3 1 1 0 4 
1 1 0 4 1 1 0 3 1 1 0 4 1 1 0 4 
1 1 0 3 1 1 0 4 1 1 0 4 1 1 0 4 
1 1 0 4 1 1 0 4 1 1 0 4 1 1 0 4 
1 1 0 4 1 1 0 4 1 1 0 4 1 1 0 4 
1 1 0 4 1 1 0 5 1 1 0 4 1 1 0 4 
1 1 0 5 1 1 0 4 1 1 0 5 1 1 0 4 
1 1 0 5 1 1 0 4 1 1 0 5 1 1 0 5 
1 1 0 4 1 1 0 5 1 1 0 5 1 1 0 5 
1 1 0 5 1 1 0 5 1 1 0 4 1 1 0 6 
1 1 0 5 1 1 0 5 1 1 0 5 1 1 0 5 
1 1 0 6 1 1 0 5 1 1 0 5 1 1 0 5 
1 1 0 6 1 1 0 6 1 1 0 5 1 1 0 6 
1 1 0 5 1 1 0 6 1 1 0 6 1 1 0 6 
1 1 0 6 1 1 0 5 1 1 0 7 1 1 0 5 
1 1 0 7 1 1 0 6 1 1 0 6 1 1 0 6 
1 1 0 6 1 1 1111 1969 300 MP stroke
0 7 1 1 0 6 1 1 0 7 1 1 0 6 1 1 
0 7 1 1 0 7 1 1 0 6 1 1 0 7 1 1 
0 7 1 1 0 7 1 1 0 7 1 1 0 7 1 1 
0 7 1 1 0 7 1 1 0 7 1 1 0 7 1 1 
0 8 1 1 0 7 1 1 0 8 1 1 0 7 1 1 
0 8 1 1 0 8 1 1 0 7 1 1 0 8 1 1 
0 8 1 1 0 8 1 1 0 8 1 1 0 8 1 1 
0 8 1 1 0 8 1 1 0 8 1 1 0 9 1 1 
0 8 1 1 0 9 1 1 0 8 1 1 0 9 1 1 
0 8 1 1 0 9 1 1 0 9 1 1 0 9 1 1 
0 10 1 1 0 9 1 1 0 9 1 1 0 10 1 1 
0 9 1 1 0 10 1 1 0 10 1 1 0 10 1 1 
0 10 1 1 0 10 1 1 0 10 1 1 0 10 1 1 
0 10 1 1 0 10 1 1 0 11 1 1 0 9 1 1 
0 11 1 1 0 10 1 1 0 10 1 1 0 11 1 1 
0 10 1 1 0 10 1 1 0 10 1 1 0 10 1 1 
0 10 1 1 0 10 1 1 0 10 1 1 0 10 1 1 
0 10 1 1 0 9 1 1 0 10 1 1 0 9 1 1 
0 10 1 1 0 9 1 1 0 9 1 1 0 10 1 1 
0 9 1 1 0 8 1 1 0 9 1 1 0 9 1 1 
0 9 1 1 0 8 1 1 0 8 1 1 0 9 1 1 
0 8 1 1 0 8 1 1 0 7 1 1 0 8 1 1 
0 7 1 1 0 8 1 1 0 7 1 1 0 7 1 1 
0 7 1 1 0 7 1 1 0 6 1 1 0 7 1 1 
0 6 1 1 0 7 1 1 0 5 1 1 0 6 1 1 
0 6 1 1 0 6 1 1 0 5 1 1 0 5 1 1 
0 5 1 1 0 5 1 1 0 5 1 1 0 5 1 1 
0 4 1 1 0 4 1 1 0 5 1 1 0 4 1 1 
0 3 1 1 0 4 1 1 0 4 1 1 0 3 1 1 
0 3 1 1 0 3 1 1 0 3 1 1 0 3 1 1 
0 2 1 1 0 2 1 1 0 3 1 1 0 2 1 1 
0 1 1 1 0 3 2 2 0 2 1 1 0 2 2 2 
0 2 2 2 1 1 0 1 2 2 1 1 1 1 1 1 
1 0 1 1 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 -1 1 0 1 -1 1 -1 1 -1 1 -1 1 -1 
1 -1 0 -1 2 -2 0 -1 2 -2 1 -1 0 -2 2 -2 
0 -1 2 -2 0 -2 2 -2 1 -1 0 -2 2 -2 0 -2 
2 -2 0 -2 2 -2 938 924 300 MP stroke
1 -1 0 -2 2 -2 0 -2 2 -2 0 -1 2 -2 1 -1 
0 -2 2 -2 1 -1 0 -2 2 -2 0 -1 2 -2 0 -2 
2 -2 1 -1 0 -2 2 -2 0 -2 2 -2 0 -1 2 -2 
0 -2 2 -2 0 -2 2 -2 0 -2 2 -2 0 -2 2 -2 
0 -1 1 -1 1 -1 0 -2 2 -2 0 -2 1 -1 0 -2 
2 -2 0 -2 2 -2 0 -2 2 -2 0 -2 2 -2 0 -2 
1 -1 0 -2 2 -2 0 -2 2 -2 0 -2 1 -1 0 -2 
2 -2 0 -2 1 -1 0 -2 2 -2 0 -3 2 -2 0 -3 
2 -2 0 -2 1 -1 0 -2 2 -2 0 -3 2 -2 0 -2 
1 -1 0 -2 1 -1 0 -1 1 -1 0 -3 2 -2 0 -2 
1 -1 0 -3 2 -2 0 -2 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -1 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -2 1 -1 0 -1 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -2 1 -1 0 -3 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -3 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -3 1 -1 0 -2 1 -1 0 -2 1 -1 0 -3 
1 -1 0 -2 1 -1 0 -3 1 -1 0 -2 1 -1 0 -3 
1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 1 -1 0 -2 
1 -1 0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -3 1 -1 0 -4 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -3 1 -1 0 -4 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 
1 -1 0 -3 1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 1 -1 0 -3 
1 -1 0 -4 1 -1 0 -4 1 -1 0 -5 1 -1 0 -3 
1 -1 0 -5 1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -5 1 -1 0 -4 1 -1 0 -5 
1 -1 0 -4 1 -1 0 -5 1 -1 0 -4 1 -1 0 -5 
1 -1 0 -4 1 -1 0 -5 1 -1 0 -5 1 -1 0 -4 
1 -1 0 -5 1 -1 0 -5 1 -1 0 -5 1 -1 0 -5 
1 -1 0 -5 1 -1 0 -5 1 -1 0 -5 1 -1 0 -5 
1 -1 0 -5 1 -1 757 1529 300 MP stroke
0 -5 1 -1 0 -6 1 -1 0 -5 1 -1 0 -5 1 -1 
0 -6 1 -1 0 -5 1 -1 0 -6 1 -1 0 -5 1 -1 
0 -6 1 -1 0 -5 1 -1 0 -6 1 -1 0 -6 1 -1 
0 -6 1 -1 0 -5 1 -1 0 -6 1 -1 0 -6 1 -1 
0 -6 1 -1 0 -6 1 -1 0 -7 1 -1 0 -6 1 -1 
0 -6 1 -1 0 -6 1 -1 0 -7 1 -1 0 -6 1 -1 
0 -6 1 -1 0 -7 1 -1 0 -6 1 -1 0 -7 1 -1 
0 -7 1 -1 0 -7 1 -1 0 -6 1 -1 0 -7 1 -1 
0 -7 1 -1 0 -7 1 -1 0 -7 1 -1 0 -7 1 -1 
0 -7 1 -1 0 -8 1 -1 0 -7 1 -1 0 -7 1 -1 
0 -8 1 -1 0 -7 1 -1 0 -8 1 -1 0 -7 1 -1 
0 -8 1 -1 0 -8 1 -1 0 -8 1 -1 0 -8 1 -1 
0 -8 1 -1 0 -8 1 -1 0 -8 1 -1 0 -8 1 -1 
0 -8 1 -1 0 -9 1 -1 0 -8 1 -1 0 -8 1 -1 
0 -9 1 -1 0 -8 1 -1 0 -9 1 -1 0 -9 1 -1 
0 -9 1 -1 0 -8 1 -1 0 -10 1 -1 0 -9 1 -1 
0 -9 1 -1 0 -9 1 -1 0 -9 1 -1 0 -10 1 -1 
0 -9 1 -1 0 -10 1 -1 0 -9 1 -1 0 -10 1 -1 
0 -10 1 -1 0 -9 1 -1 0 -11 1 -1 0 -10 1 -1 
0 -10 1 -1 0 -10 1 -1 0 -10 1 -1 0 -11 1 -1 
0 -10 1 -1 0 -11 1 -1 0 -10 1 -1 0 -11 1 -1 
0 -11 1 -1 0 -11 1 -1 0 -11 1 -1 0 -11 1 -1 
0 -11 1 -1 0 -11 1 -1 0 -12 1 -1 0 -11 1 -1 
0 -12 1 -1 0 -11 1 -1 0 -12 1 -1 0 -12 1 -1 
0 -12 1 -1 0 -12 1 -1 0 -12 1 -1 0 -12 1 -1 
0 -13 1 -1 0 -13 656 2485 204 MP stroke
DO
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 4267 724 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3968 724 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3669 724 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3370 724 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3071 724 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 2772 724 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 2473 724 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 -1 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 2174 728 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 -1 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 -1 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 -1 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 -1 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 0 1 0 1 -1 1 0 
1 0 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 -1 1 0 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 -1 1 0 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 -1 1 0 1 0 1 -1 1 0 1 0 1 0 1 -1 
1 0 1 0 1 -1 1 0 1 0 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 0 1 -1 1 0 1 0 1 0 
1 -1 1 0 1 0 1875 766 300 MP stroke
1 -1 1 0 1 0 1 -1 1 0 1 0 1 -1 1 0 
1 -1 1 0 1 0 1 -1 1 0 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 -1 1 0 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 
1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 
1 -1 1 0 1 -1 1 0 1 -1 1 0 1 -1 1 -1 
1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 1 -1 
1 0 1 -1 1 -1 1 0 1 -1 1 0 1 -1 1 -1 
1 0 1 -1 1 0 1 -1 1 -1 1 0 1 -1 1 -1 
1 0 1 -1 1 -1 1 0 1 -1 1 -1 1 0 1 -1 
1 -1 1 0 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 
1 0 1 -1 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 
1 0 1 -1 1 -1 1 -1 1 -1 1 0 1 -1 1 -1 
1 -1 1 -1 1 0 1 -1 1 -1 1 -1 1 -1 1 -1 
1 -1 1 -1 1 0 1 -1 1 -1 1 -1 1 -1 1 -1 
1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 
1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 
1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 0 -1 
2 -2 1 -1 1 -1 1 -1 1 -1 1 -1 0 -1 2 -2 
1 -1 1 -1 1 -1 0 -1 2 -2 1 -1 1 -1 0 -1 
2 -2 1 -1 1 -1 0 -1 2 -2 1 -1 0 -1 2 -2 
0 -1 2 -2 1 -1 0 -1 2 -2 1 -1 0 -1 2 -2 
0 -1 2 -2 0 -1 2 -2 0 -1 2 -2 0 -1 2 -2 
0 -1 2 -2 0 -1 2 -2 1 -1 0 -2 2 -2 1 -1 
0 -2 2 -2 0 -1 2 -2 0 -1 2 -2 0 -2 2 -2 
0 -1 2 -2 0 -2 2 -2 1 -1 0 -2 2 -2 0 -2 
2 -2 1 -1 0 -2 2 -2 0 -2 2 -2 0 -2 2 -2 
0 -2 2 -2 0 -2 2 -2 0 -2 2 -2 0 -2 2 -2 
0 -2 2 -2 0 -2 2 -2 0 -2 2 -2 0 -2 1 -1 
0 -2 2 -2 0 -2 2 -2 0 -2 1 -1 0 -2 2 -2 
0 -2 1 -1 0 -2 2 -2 0 -2 1 -1 0 -2 2 -2 
0 -3 2 -2 0 -3 2 -2 0 -2 1 -1 0 -1 1 -1 
0 -3 2 -2 0 -3 2 -2 0 -2 1 -1 0 -2 1 -1 
0 -1 1 -1 0 -2 1 -1 0 -2 1 -1 0 -1 1 -1 
0 -2 1 -1 0 -3 2 -2 0 -2 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -2 1593 1097 300 MP stroke
1 -1 0 -2 1 -1 0 -2 1 -1 0 -1 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -3 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -3 
1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -3 
1 -1 0 -2 1 -1 0 -3 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -2 1 -1 0 -3 1 -1 0 -2 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 0 -4 
1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -4 1 -1 0 -3 1 -1 0 -3 1 -1 0 -4 
1 -1 0 -3 1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 1 -1 0 -5 
1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 1 -1 0 -5 
1 -1 0 -4 1 -1 0 -4 1 -1 0 -5 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -5 1 -1 0 -4 1 -1 0 -4 
1 -1 0 -5 1 -1 0 -4 1 -1 0 -4 1 -1 0 -5 
1 -1 0 -4 1 -1 0 -4 1 -1 0 -5 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -5 1 -1 0 -4 1 -1 0 -4 
1 -1 0 -5 1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 
1 -1 0 -5 1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 1 -1 0 -3 
1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -4 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 1 -1 0 -2 
1 -1 0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -3 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -2 1 -1 1443 1734 300 MP stroke
0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -2 1 -1 0 -1 1 -1 0 -3 2 -2 
0 -2 1 -1 0 -2 1 -1 0 -2 2 -2 0 -3 2 -2 
0 -2 2 -2 0 -2 1 -1 0 -2 2 -2 0 -2 2 -2 
0 -1 2 -2 0 -2 2 -2 0 -1 2 -2 0 -1 2 -2 
0 -1 2 -2 1 -1 1 -1 1 -1 0 -1 2 -2 1 -1 
1 -1 1 0 1 -1 1 -1 1 -1 1 -1 1 0 1 -1 
1 0 1 -1 1 0 1 0 1 -1 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 
1 0 1 0 1 1 1 0 1 1 1 1 1 0 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
0 1 2 2 1 1 0 1 2 2 0 1 2 2 1 1 
0 2 2 2 0 1 2 2 0 2 2 2 0 2 2 2 
0 2 2 2 0 2 2 2 0 2 1 1 0 2 2 2 
0 3 2 2 0 2 1 1 0 1 1 1 0 2 1 1 
0 1 1 1 0 2 1 1 0 2 1 1 0 1 1 1 
0 2 1 1 0 2 1 1 0 2 1 1 0 2 1 1 
0 2 1 1 0 2 1 1 0 2 1 1 0 2 1 1 
0 2 1 1 0 2 1 1 0 3 1 1 0 2 1 1 
0 2 1 1 0 3 1 1 0 2 1 1 0 2 1 1 
0 3 1 1 0 2 1 1 0 3 1 1 0 3 1 1 
0 2 1 1 0 3 1 1 0 3 1 1 0 2 1 1 
0 3 1 1 0 3 1 1 0 3 1 1 0 3 1 1 
0 3 1 1 0 3 1 1 0 3 1 1 0 3 1 1 
0 3 1 1 0 3 1 1 0 3 1 1 0 3 1 1 
0 4 1 1 0 3 1 1 0 3 1 1 0 4 1 1 
0 3 1 1 0 3 1 1 0 4 1 1 0 3 1 1 
0 4 1 1 0 3 1 1 0 4 1 1 0 3 1 1 
0 4 1 1 0 3 1 1 0 4 1 1 0 4 1 1 
0 4 1 1 0 3 1 1 0 4 1 1 0 4 1 1 
0 4 1 1 0 4 1 1 0 3 1 1 0 4 1 1 
0 4 1 1 0 4 1 1 0 4 1 1 0 4 1 1 
0 4 1 1 0 4 1 1 0 4 1 1 0 4 1 1 
0 4 1 1 0 4 1 1 0 4 1 1 0 5 1 1 
0 4 1 1 0 4 1 1 0 4 1 1 0 4 1 1 
0 5 1 1 0 4 1 1 0 4 1 1 0 4 1 1 
0 4 1 1 0 5 1 1 0 4 1 1 0 4 1 1 
0 5 1 1 0 4 1248 1373 300 MP stroke
1 1 0 4 1 1 0 5 1 1 0 4 1 1 0 4 
1 1 0 5 1 1 0 4 1 1 0 5 1 1 0 4 
1 1 0 4 1 1 0 5 1 1 0 4 1 1 0 5 
1 1 0 4 1 1 0 4 1 1 0 5 1 1 0 4 
1 1 0 5 1 1 0 4 1 1 0 5 1 1 0 4 
1 1 0 5 1 1 0 4 1 1 0 4 1 1 0 5 
1 1 0 4 1 1 0 5 1 1 0 4 1 1 0 4 
1 1 0 5 1 1 0 4 1 1 0 5 1 1 0 4 
1 1 0 4 1 1 0 5 1 1 0 4 1 1 0 5 
1 1 0 4 1 1 0 4 1 1 0 4 1 1 0 5 
1 1 0 4 1 1 0 4 1 1 0 5 1 1 0 4 
1 1 0 4 1 1 0 4 1 1 0 5 1 1 0 4 
1 1 0 4 1 1 0 4 1 1 0 4 1 1 0 4 
1 1 0 4 1 1 0 5 1 1 0 4 1 1 0 4 
1 1 0 4 1 1 0 4 1 1 0 4 1 1 0 3 
1 1 0 4 1 1 0 4 1 1 0 4 1 1 0 4 
1 1 0 4 1 1 0 4 1 1 0 4 1 1 0 3 
1 1 0 4 1 1 0 3 1 1 0 4 1 1 0 4 
1 1 0 3 1 1 0 4 1 1 0 3 1 1 0 4 
1 1 0 3 1 1 0 4 1 1 0 3 1 1 0 3 
1 1 0 4 1 1 0 3 1 1 0 3 1 1 0 3 
1 1 0 3 1 1 0 3 1 1 0 4 1 1 0 3 
1 1 0 2 1 1 0 3 1 1 0 3 1 1 0 3 
1 1 0 3 1 1 0 3 1 1 0 2 1 1 0 3 
1 1 0 3 1 1 0 2 1 1 0 3 1 1 0 2 
1 1 0 2 1 1 0 3 1 1 0 2 1 1 0 2 
1 1 0 3 1 1 0 2 1 1 0 2 1 1 0 2 
1 1 0 2 1 1 0 2 1 1 0 2 1 1 0 2 
1 1 0 3 2 2 0 2 1 1 0 3 2 2 0 2 
1 1 0 2 2 2 0 2 1 1 0 2 2 2 0 2 
2 2 0 2 2 2 0 1 2 2 0 1 2 2 1 1 
0 1 2 2 1 1 1 1 1 1 1 1 1 0 1 1 
1 1 1 0 1 1 1 0 1 1 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 -1 1 0 1 -1 1 -1 1 0 
1 -1 1 -1 1 0 1 -1 1 -1 1 0 1 -1 1 -1 
1 0 1 -1 1 -1 1 0 1 -1 1 0 1 -1 1 -1 
1 0 1 -1 1 -1 1064 810 300 MP stroke
1 0 1 -1 1 -1 1 0 1 -1 1 -1 1 0 1 -1 
1 -1 1 -1 1 0 1 -1 1 -1 1 0 1 -1 1 -1 
1 -1 1 0 1 -1 1 -1 1 -1 1 -1 1 0 1 -1 
1 -1 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 1 -1 
1 0 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 
1 0 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 
1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 
1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 
1 -1 1 -1 0 -1 2 -2 1 -1 1 -1 1 -1 1 -1 
1 -1 0 -1 2 -2 1 -1 1 -1 1 -1 0 -1 2 -2 
1 -1 1 -1 0 -1 2 -2 1 -1 1 -1 0 -1 2 -2 
1 -1 0 -1 2 -2 1 -1 0 -1 2 -2 1 -1 0 -1 
2 -2 1 -1 0 -1 2 -2 0 -1 2 -2 0 -1 2 -2 
0 -1 2 -2 0 -1 2 -2 0 -1 2 -2 0 -1 2 -2 
0 -1 2 -2 1 -1 0 -2 2 -2 1 -1 0 -2 2 -2 
1 -1 0 -2 2 -2 1 -1 0 -2 2 -2 1 -1 0 -2 
2 -2 0 -2 2 -2 1 -1 0 -2 2 -2 0 -2 2 -2 
0 -2 2 -2 1 -1 0 -2 2 -2 0 -2 2 -2 0 -2 
2 -2 0 -2 2 -2 0 -2 2 -2 0 -2 2 -2 0 -3 
2 -2 0 -2 2 -2 0 -2 2 -2 0 -3 2 -2 0 -2 
2 -2 0 -2 1 -1 0 -2 2 -2 0 -2 1 -1 0 -2 
2 -2 0 -2 1 -1 0 -2 2 -2 0 -3 2 -2 0 -3 
2 -2 0 -3 2 -2 0 -2 1 -1 0 -2 1 -1 0 -1 
1 -1 0 -3 2 -2 0 -2 1 -1 0 -3 2 -2 0 -2 
1 -1 0 -2 1 -1 0 -2 1 -1 0 -1 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -1 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -3 
1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -2 1 -1 0 -3 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -3 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -3 1 -1 0 -2 1 -1 0 -2 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -2 
1 -1 0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -3 1 -1 826 1257 300 MP stroke
0 -4 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 
0 -3 1 -1 0 -4 1 -1 0 -3 1 -1 0 -3 1 -1 
0 -3 1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 1 -1 
0 -3 1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 1 -1 
0 -4 1 -1 0 -3 1 -1 0 -4 1 -1 0 -4 1 -1 
0 -4 1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 1 -1 
0 -4 1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 1 -1 
0 -4 1 -1 0 -4 1 -1 0 -5 1 -1 0 -4 1 -1 
0 -4 1 -1 0 -4 1 -1 0 -5 1 -1 0 -4 1 -1 
0 -4 1 -1 0 -5 1 -1 0 -5 1 -1 0 -4 1 -1 
0 -5 1 -1 0 -4 1 -1 0 -5 1 -1 0 -5 1 -1 
0 -4 1 -1 0 -5 1 -1 0 -5 1 -1 0 -5 1 -1 
0 -5 1 -1 0 -5 1 -1 0 -5 1 -1 0 -5 1 -1 
0 -5 1 -1 0 -5 1 -1 0 -6 1 -1 0 -5 1 -1 
0 -5 1 -1 0 -6 1 -1 0 -5 1 -1 0 -5 1 -1 
0 -6 1 -1 0 -5 1 -1 0 -6 1 -1 0 -6 1 -1 
0 -6 1 -1 0 -5 1 -1 0 -6 1 -1 0 -6 1 -1 
0 -6 1 -1 0 -6 1 -1 0 -6 1 -1 0 -6 1 -1 
0 -6 1 -1 0 -6 1 -1 0 -6 1 -1 0 -7 1 -1 
0 -6 1 -1 0 -7 1 -1 0 -6 1 -1 0 -7 1 -1 
0 -6 1 -1 0 -7 1 -1 0 -7 1 -1 0 -6 1 -1 
0 -7 1 -1 0 -7 1 -1 0 -7 1 -1 0 -7 1 -1 
0 -7 1 -1 0 -7 1 -1 0 -7 1 -1 0 -8 1 -1 
0 -7 1 -1 0 -7 1 -1 0 -8 1 -1 0 -7 1 -1 
0 -8 1 -1 0 -8 1 -1 0 -7 1 -1 0 -8 1 -1 
0 -8 1 -1 0 -8 1 -1 0 -8 1 -1 0 -8 1 -1 
0 -8 1 -1 0 -8 1 -1 0 -9 1 -1 0 -8 1 -1 
0 -8 1 -1 0 -9 1 -1 0 -8 1 -1 0 -9 1 -1 
0 -9 1 -1 0 -8 1 -1 0 -9 1 -1 0 -9 1 -1 
0 -9 1 -1 0 -9 1 -1 0 -10 1 -1 0 -9 1 -1 
0 -9 1 -1 0 -9 1 -1 0 -10 1 -1 0 -9 1 -1 
0 -10 1 -1 0 -10 1 -1 0 -10 1 -1 0 -10 1 -1 
0 -9 1 -1 0 -11 1 -1 0 -9 1 -1 0 -11 1 -1 
0 -10 1 -1 0 -11 1 -1 0 -10 1 -1 0 -11 1 -1 
0 -10 1 -1 0 -11 1 -1 0 -11 1 -1 0 -11 1 -1 
0 -11 1 -1 0 -11 1 -1 0 -11 1 -1 0 -12 1 -1 
0 -11 1 -1 0 -11 1 -1 0 -12 1 -1 0 -12 1 -1 
0 -12 1 -1 0 -11 677 2409 300 MP stroke
1 -1 0 -12 1 -1 0 -13 1 -1 0 -12 1 -1 0 -12 
1 -1 0 -12 1 -1 0 -13 1 -1 0 -12 1 -1 0 -13 
1 -1 0 -13 1 -1 0 -13 1 -1 0 -13 1 -1 0 -13 
1 -1 0 -13 1 -1 0 -13 1 -1 0 -14 1 -1 0 -14 
1 -1 0 -13 1 -1 0 -14 1 -1 0 -14 1 -1 0 -14 
1 -1 0 -15 656 2705 43 MP stroke
DD
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 4267 724 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3968 724 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3669 724 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3370 724 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3071 724 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 2772 724 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 2473 724 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 2174 724 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1875 724 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1576 725 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 -1 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 -1 1 0 1 0 
1 0 1 0 1 0 1277 735 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 -1 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 0 
1 0 1 -1 1 0 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 -1 1 0 
1 0 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 0 1 -1 1 0 1 0 1 0 1 0 1 -1 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 -1 1 0 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 0 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 0 1 -1 1 0 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 0 1 -1 1 0 1 0 1 -1 
1 0 1 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 
1 0 1 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 
1 0 1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 
1 -1 1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 
1 -1 1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 
1 -1 1 0 1 -1 1 0 1 -1 1 -1 1 0 1 -1 
1 0 1 -1 1 0 1 -1 1 -1 1 0 1 -1 1 0 
1 -1 1 -1 1 0 1 -1 1 -1 1 0 1 -1 1 -1 
1 0 1 -1 1 0 1 -1 1 -1 1 -1 1 0 1 -1 
1 -1 1 0 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 
1 0 1 -1 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 
1 0 1 -1 1 -1 1 -1 1 -1 1 0 1 -1 1 -1 
1 -1 1 -1 1 -1 978 835 300 MP stroke
1 0 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 
1 -1 1 0 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 
1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 
1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 0 -1 
2 -2 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 0 -1 
2 -2 1 -1 1 -1 1 -1 0 -1 2 -2 1 -1 1 -1 
1 -1 0 -1 2 -2 1 -1 0 -1 2 -2 1 -1 1 -1 
0 -1 2 -2 1 -1 0 -1 2 -2 1 -1 0 -1 2 -2 
0 -1 2 -2 0 -1 2 -2 1 -1 0 -1 2 -2 0 -1 
2 -2 0 -1 2 -2 0 -1 2 -2 1 -1 0 -2 2 -2 
0 -1 2 -2 1 -1 0 -2 2 -2 0 -1 2 -2 0 -1 
2 -2 0 -2 2 -2 1 -1 0 -2 2 -2 1 -1 0 -2 
2 -2 0 -2 2 -2 0 -1 2 -2 0 -2 2 -2 0 -2 
2 -2 0 -2 2 -2 0 -2 2 -2 0 -1 1 -1 0 -1 
1 -1 1 -1 0 -2 1 -1 0 -1 1 -1 0 -2 2 -2 
0 -2 2 -2 0 -2 2 -2 0 -2 2 -2 0 -2 1 -1 
0 -2 2 -2 0 -2 2 -2 0 -2 1 -1 0 -2 2 -2 
0 -2 1 -1 0 -2 2 -2 0 -2 1 -1 0 -2 2 -2 
0 -3 2 -2 0 -3 2 -2 0 -3 2 -2 0 -3 2 -2 
0 -2 1 -1 0 -2 1 -1 0 -1 1 -1 0 -3 2 -2 
0 -2 1 -1 0 -3 2 -2 0 -2 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -2 1 -1 0 -1 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -3 1 -1 0 -2 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -2 1 -1 0 -3 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 
0 -2 1 -1 0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 
0 -2 1 -1 0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 
0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 1 -1 
0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 1 -1 
0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 
0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 
0 -3 1 -1 0 -3 1 -1 0 -4 1 -1 0 -3 1 -1 
0 -3 1 -1 0 -4 1 -1 0 -3 1 -1 0 -3 1 -1 
0 -4 1 -1 0 -3 1 -1 0 -4 1 -1 0 -3 1 -1 
0 -4 1 -1 0 -3 759 1322 300 MP stroke
1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 
1 -1 0 -5 1 -1 0 -4 1 -1 0 -4 1 -1 0 -5 
1 -1 0 -4 1 -1 0 -4 1 -1 0 -5 1 -1 0 -4 
1 -1 0 -5 1 -1 0 -4 1 -1 0 -5 1 -1 0 -5 
1 -1 0 -5 1 -1 0 -4 1 -1 0 -5 1 -1 0 -5 
1 -1 0 -5 1 -1 0 -5 1 -1 0 -5 1 -1 0 -5 
1 -1 0 -5 1 -1 0 -5 1 -1 0 -5 1 -1 0 -5 
1 -1 0 -6 1 -1 0 -5 1 -1 0 -5 1 -1 0 -6 
1 -1 0 -5 1 -1 0 -6 1 -1 0 -5 1 -1 0 -6 
1 -1 0 -6 1 -1 0 -5 1 -1 0 -6 1 -1 0 -6 
1 -1 0 -6 1 -1 0 -6 1 -1 0 -6 1 -1 0 -6 
1 -1 0 -6 1 -1 0 -6 1 -1 0 -6 1 -1 0 -7 
1 -1 0 -6 1 -1 0 -6 1 -1 0 -7 1 -1 0 -6 
1 -1 0 -7 1 -1 0 -6 1 -1 0 -7 1 -1 0 -7 
1 -1 0 -7 1 -1 0 -6 1 -1 0 -7 1 -1 0 -7 
1 -1 0 -7 1 -1 0 -7 1 -1 0 -7 1 -1 0 -8 
1 -1 0 -7 1 -1 0 -7 1 -1 0 -8 1 -1 0 -7 
1 -1 0 -8 1 -1 0 -7 1 -1 0 -8 1 -1 0 -8 
1 -1 0 -7 1 -1 0 -8 1 -1 0 -8 1 -1 0 -8 
1 -1 0 -8 1 -1 0 -8 1 -1 0 -9 1 -1 0 -8 
1 -1 0 -8 1 -1 0 -9 1 -1 0 -8 1 -1 0 -9 
1 -1 0 -8 1 -1 0 -9 1 -1 0 -9 1 -1 0 -9 
1 -1 0 -9 1 -1 0 -9 1 -1 0 -10 656 2045 207 MP stroke
gr

DD
2349 3654 mt 
(time \(sec\)) s
 303 1912 mt  -90 rotate
(x\(t\)) s
90 rotate
%%IncludeResource: font Symbol
/Symbol /WindowsLatin1Encoding 120 FMSR

4418 3725 mt 
(\264) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

4483 3725 mt 
( 10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 96 FMSR

4649 3665 mt 
(-4) s
SO
1 sg
0 715 648 0 0 -715 3425 2135 4 MP
PP
-648 0 0 715 648 0 0 -715 3425 2135 5 MP stroke
4 w
DO
SO
6 w
0 sg
3425 1420 mt 4073 1420 L
3425 2135 mt 4073 2135 L
4073 2135 mt 4073 1420 L
3425 2135 mt 3425 1420 L
3425 2135 mt 4073 2135 L
3425 2135 mt 3425 1420 L
3425 1420 mt 4073 1420 L
3425 2135 mt 4073 2135 L
4073 2135 mt 4073 1420 L
3425 2135 mt 3425 1420 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

3894 1567 mt 
(x1) s
gs 3425 1420 649 716 rc
360 0 3497 1525 2 MP stroke
gr

3894 1736 mt 
(x2) s
gs 3425 1420 649 716 rc
DA
360 0 3497 1693 2 MP stroke
SO
gr

3894 1904 mt 
(x3) s
gs 3425 1420 649 716 rc
DO
360 0 3497 1861 2 MP stroke
SO
gr

3894 2073 mt 
(x4) s
gs 3425 1420 649 716 rc
DD
360 0 3497 2029 2 MP stroke
SO
gr


end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 2572 1948 a Fq(Fig.)23 b(3.)70 b(T)n(ransient)24
b(beha)o(vior)i(of)d Fc(x)1908 3476 y @beginspecial -86
@llx 234 @lly 682 @urx 607 @ury 2664 @rwi @setspecial
%%BeginDocument: sinu.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: D:\ssgu\ijcnn\Sample_IJCNN\sinu.eps
%%CreationDate: 12/21/2006  13:21:10
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   -86   234   682   607
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   -86   234   682   607
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -1032 7284 csm

    0     0  9223  4466 rc
87 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 9224 4467 rf
6 w
0 573 7148 0 0 -573 1199 914 4 MP
PP
-7148 0 0 573 7148 0 0 -573 1199 914 5 MP stroke
4 w
DO
SO
6 w
0 sg
1199  341 mt 8347  341 L
1199  914 mt 8347  914 L
8347  914 mt 8347  341 L
1199  914 mt 1199  341 L
1199  914 mt 8347  914 L
1199  914 mt 1199  341 L
1199  914 mt 1199  842 L
1199  341 mt 1199  412 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1166 1059 mt 
(0) s
2336  914 mt 2336  842 L
2336  341 mt 2336  412 L
2303 1059 mt 
(1) s
3474  914 mt 3474  842 L
3474  341 mt 3474  412 L
3441 1059 mt 
(2) s
4611  914 mt 4611  842 L
4611  341 mt 4611  412 L
4578 1059 mt 
(3) s
5749  914 mt 5749  842 L
5749  341 mt 5749  412 L
5716 1059 mt 
(4) s
6887  914 mt 6887  842 L
6887  341 mt 6887  412 L
6854 1059 mt 
(5) s
8024  914 mt 8024  842 L
8024  341 mt 8024  412 L
7991 1059 mt 
(6) s
1199  866 mt 1270  866 L
8347  866 mt 8275  866 L
1028  910 mt 
(-1) s
1199  627 mt 1270  627 L
8347  627 mt 8275  627 L
1098  671 mt 
(0) s
1199  388 mt 1270  388 L
8347  388 mt 8275  388 L
1098  432 mt 
(1) s
1199  341 mt 8347  341 L
1199  914 mt 8347  914 L
8347  914 mt 8347  341 L
1199  914 mt 1199  341 L
gs 1199 341 7149 574 rc
DD
24 -5 24 -5 24 -5 24 -5 24 -5 23 -5 24 -5 24 -5 
24 -5 24 -5 24 -5 23 -4 24 -5 24 -5 24 -5 24 -5 
24 -4 23 -5 24 -5 24 -4 24 -5 24 -4 24 -5 23 -4 
24 -4 24 -5 24 -4 24 -4 23 -4 24 -4 24 -4 24 -4 
24 -4 24 -4 23 -4 24 -3 24 -4 24 -4 24 -3 24 -3 
23 -4 24 -3 24 -3 24 -3 24 -3 24 -3 23 -3 24 -3 
24 -2 24 -3 24 -2 23 -3 24 -2 24 -2 24 -2 24 -2 
24 -2 23 -2 24 -1 24 -2 24 -2 24 -1 24 -1 23 -1 
24 -2 24 -1 24 0 24 -1 24 -1 23 0 24 -1 24 0 
24 -1 24 0 23 0 24 0 24 0 24 1 24 0 24 1 
23 0 24 1 24 1 24 0 24 1 24 2 23 1 24 1 
24 1 24 2 24 2 24 1 23 2 24 2 24 2 24 2 
24 2 24 2 23 3 24 2 24 3 24 2 24 3 23 3 
24 3 24 3 24 3 24 3 24 3 23 4 24 3 24 3 
24 4 24 4 24 3 23 4 24 4 24 4 24 4 24 4 
24 4 23 4 24 4 24 4 24 5 24 4 23 4 24 5 
24 4 24 5 24 4 24 5 23 5 24 4 24 5 24 5 
24 5 24 5 23 4 24 5 24 5 24 5 24 5 24 5 
23 5 24 5 24 5 24 5 24 5 23 5 24 5 24 5 
24 5 24 5 24 5 23 5 24 5 24 5 24 5 24 5 
24 5 23 4 24 5 24 5 24 5 24 5 24 4 23 5 
24 5 24 4 24 5 24 4 24 5 23 4 24 4 24 5 
24 4 24 4 23 4 24 4 24 4 24 4 24 4 24 4 
23 4 24 3 24 4 24 4 24 3 24 3 23 4 24 3 
24 3 24 3 24 3 24 3 23 3 24 3 24 2 24 3 
24 2 23 3 24 2 24 2 24 2 24 2 24 2 23 2 
24 1 24 2 24 2 24 1 24 1 23 1 24 2 24 1 
24 0 24 1 24 1 23 0 24 1 24 0 24 1 24 0 
23 0 24 0 24 0 24 -1 24 0 24 -1 23 0 24 -1 
24 -1 24 0 24 -1 24 -2 23 -1 24 -1 24 -1 24 -2 
24 -2 24 -1 23 -2 24 -2 24 -2 24 -2 24 -2 24 -2 
23 -3 24 -2 24 -3 24 -2 24 -3 23 -3 24 -3 24 -3 
24 -3 24 -3 24 -3 23 -4 24 -3 24 -3 24 -4 24 -4 
24 -3 23 -4 24 -4 24 -4 24 -4 24 -4 24 -4 23 -4 
24 -4 24 -4 24 -5 24 -4 23 -4 24 -5 24 -4 24 -5 
24 -4 24 -5 23 -5 24 -4 24 -5 24 -5 24 -5 24 -5 
23 -4 24 -5 24 -5 24 -5 24 -5 24 -5 23 -5 24 -5 
24 -5 24 -5 24 -5 1222 622 300 MP stroke
23 -5 1199 627 2 MP stroke
DO
24 -3 24 -3 24 -3 24 -3 24 -3 23 -3 24 -3 24 -3 
24 -4 24 -3 24 -4 23 -3 24 -4 24 -4 24 -4 24 -4 
24 -4 23 -4 24 -4 24 -4 24 -4 24 -4 24 -5 23 -4 
24 -5 24 -4 24 -4 24 -5 23 -5 24 -4 24 -5 24 -5 
24 -4 24 -5 23 -5 24 -5 24 -5 24 -5 24 -5 24 -4 
23 -5 24 -5 24 -5 24 -5 24 -5 24 -5 23 -5 24 -5 
24 -5 24 -5 24 -5 23 -5 24 -5 24 -5 24 -5 24 -5 
24 -5 23 -5 24 -5 24 -5 24 -4 24 -5 24 -5 23 -5 
24 -4 24 -5 24 -5 24 -4 24 -5 23 -4 24 -5 24 -4 
24 -4 24 -5 23 -4 24 -4 24 -4 24 -4 24 -4 24 -4 
23 -4 24 -4 24 -4 24 -3 24 -4 24 -3 23 -4 24 -3 
24 -4 24 -3 24 -3 24 -3 23 -3 24 -3 24 -3 24 -2 
24 -3 24 -2 23 -3 24 -2 24 -2 24 -3 24 -2 23 -2 
24 -1 24 -2 24 -2 24 -1 24 -2 23 -1 24 -2 24 -1 
24 -1 24 -1 24 -1 23 0 24 -1 24 -1 24 0 24 0 
24 -1 23 0 24 0 24 0 24 1 24 0 23 0 24 1 
24 0 24 1 24 1 24 1 23 1 24 1 24 1 24 1 
24 2 24 1 23 2 24 2 24 1 24 2 24 2 24 3 
23 2 24 2 24 2 24 3 24 2 23 3 24 3 24 3 
24 3 24 3 24 3 23 3 24 3 24 3 24 4 24 3 
24 4 23 3 24 4 24 4 24 4 24 4 24 4 23 4 
24 4 24 4 24 4 24 4 24 5 23 4 24 5 24 4 
24 4 24 5 23 5 24 4 24 5 24 5 24 4 24 5 
23 5 24 5 24 5 24 5 24 5 24 4 23 5 24 5 
24 5 24 5 24 5 24 5 23 5 24 5 24 5 24 5 
24 5 23 5 24 5 24 5 24 5 24 5 24 5 23 5 
24 5 24 5 24 4 24 5 24 5 23 5 24 4 24 5 
24 5 24 4 24 5 23 4 24 5 24 4 24 4 24 5 
23 4 24 4 24 4 24 4 24 4 24 4 23 4 24 4 
24 4 24 3 24 4 24 3 23 4 24 3 24 4 24 3 
24 3 24 3 23 3 24 3 24 3 24 2 24 3 24 2 
23 3 24 2 24 2 24 3 24 2 23 2 24 1 24 2 
24 2 24 1 24 2 23 1 24 2 24 1 24 1 24 1 
24 1 23 0 24 1 24 1 24 0 24 0 24 1 23 0 
24 0 24 0 24 -1 24 0 23 0 24 -1 24 0 24 -1 
24 -1 24 -1 23 -1 24 -1 24 -1 24 -1 24 -2 24 -1 
23 -2 24 -2 24 -1 24 -2 24 -2 24 -3 23 -2 24 -2 
24 -2 24 -3 24 -2 1222 423 300 MP stroke
23 -3 1199 426 2 MP stroke
DA
24 2 24 2 24 2 24 2 24 1 23 2 24 1 24 2 
24 1 24 1 24 1 23 1 24 1 24 1 24 0 24 1 
24 0 23 0 24 1 24 0 24 0 24 0 24 -1 23 0 
24 0 24 -1 24 0 24 -1 23 -1 24 -1 24 -1 24 -1 
24 -1 24 -2 23 -1 24 -2 24 -1 24 -2 24 -2 24 -2 
23 -2 24 -2 24 -2 24 -3 24 -2 24 -3 23 -2 24 -3 
24 -3 24 -2 24 -3 23 -3 24 -3 24 -4 24 -3 24 -3 
24 -4 23 -3 24 -4 24 -3 24 -4 24 -4 24 -4 23 -4 
24 -4 24 -4 24 -4 24 -4 24 -4 23 -4 24 -5 24 -4 
24 -5 24 -4 23 -5 24 -4 24 -5 24 -4 24 -5 24 -5 
23 -5 24 -4 24 -5 24 -5 24 -5 24 -5 23 -5 24 -5 
24 -5 24 -5 24 -5 24 -5 23 -5 24 -5 24 -5 24 -5 
24 -5 24 -5 23 -5 24 -5 24 -4 24 -5 24 -5 23 -5 
24 -5 24 -5 24 -5 24 -5 24 -5 23 -4 24 -5 24 -5 
24 -5 24 -4 24 -5 23 -4 24 -5 24 -4 24 -5 24 -4 
24 -5 23 -4 24 -4 24 -4 24 -4 24 -4 23 -4 24 -4 
24 -4 24 -4 24 -4 24 -3 23 -4 24 -3 24 -4 24 -3 
24 -3 24 -4 23 -3 24 -3 24 -3 24 -2 24 -3 24 -3 
23 -3 24 -2 24 -2 24 -3 24 -2 23 -2 24 -2 24 -2 
24 -2 24 -2 24 -1 23 -2 24 -1 24 -2 24 -1 24 -1 
24 -1 23 -1 24 -1 24 -1 24 0 24 -1 24 0 23 0 
24 -1 24 0 24 0 24 0 24 1 23 0 24 0 24 1 
24 0 24 1 23 1 24 1 24 1 24 1 24 1 24 2 
23 1 24 2 24 1 24 2 24 2 24 2 23 2 24 2 
24 2 24 3 24 2 24 3 23 2 24 3 24 3 24 2 
24 3 23 3 24 3 24 4 24 3 24 3 24 4 23 3 
24 4 24 3 24 4 24 4 24 4 23 4 24 4 24 4 
24 4 24 4 24 4 23 4 24 5 24 4 24 5 24 4 
23 5 24 4 24 5 24 4 24 5 24 5 23 5 24 4 
24 5 24 5 24 5 24 5 23 5 24 5 24 5 24 5 
24 5 24 5 23 5 24 5 24 5 24 5 24 5 24 5 
23 5 24 5 24 4 24 5 24 5 23 5 24 5 24 5 
24 5 24 5 24 5 23 4 24 5 24 5 24 5 24 4 
24 5 23 4 24 5 24 4 24 5 24 4 24 5 23 4 
24 4 24 4 24 4 24 4 23 4 24 4 24 4 24 4 
24 4 24 3 23 4 24 3 24 4 24 3 24 3 24 4 
23 3 24 3 24 3 24 2 24 3 24 3 23 3 24 2 
24 2 24 3 24 2 1222 412 300 MP stroke
23 2 1199 410 2 MP stroke
SO
24 5 24 5 24 4 24 5 24 5 23 5 24 5 24 5 
24 4 24 5 24 5 23 4 24 5 24 5 24 4 24 5 
24 4 23 4 24 5 24 4 24 4 24 4 24 4 23 4 
24 4 24 4 24 4 24 4 23 4 24 3 24 4 24 3 
24 4 24 3 23 3 24 3 24 3 24 3 24 3 24 3 
23 3 24 3 24 2 24 3 24 2 24 2 23 3 24 2 
24 2 24 2 24 1 23 2 24 2 24 1 24 2 24 1 
24 1 23 1 24 1 24 1 24 1 24 1 24 0 23 1 
24 0 24 0 24 1 24 0 24 0 23 0 24 -1 24 0 
24 0 24 -1 23 -1 24 0 24 -1 24 -1 24 -1 24 -1 
23 -2 24 -1 24 -2 24 -1 24 -2 24 -2 23 -1 24 -2 
24 -2 24 -3 24 -2 24 -2 23 -3 24 -2 24 -3 24 -2 
24 -3 24 -3 23 -3 24 -3 24 -3 24 -3 24 -4 23 -3 
24 -4 24 -3 24 -4 24 -3 24 -4 23 -4 24 -4 24 -4 
24 -4 24 -4 24 -4 23 -4 24 -4 24 -5 24 -4 24 -4 
24 -5 23 -4 24 -5 24 -4 24 -5 24 -5 23 -4 24 -5 
24 -5 24 -5 24 -4 24 -5 23 -5 24 -5 24 -5 24 -5 
24 -5 24 -5 23 -5 24 -5 24 -5 24 -5 24 -5 24 -5 
23 -5 24 -5 24 -5 24 -5 24 -5 23 -5 24 -5 24 -5 
24 -4 24 -5 24 -5 23 -5 24 -5 24 -5 24 -4 24 -5 
24 -5 23 -4 24 -5 24 -5 24 -4 24 -5 24 -4 23 -4 
24 -5 24 -4 24 -4 24 -4 24 -4 23 -4 24 -4 24 -4 
24 -4 24 -4 23 -4 24 -3 24 -4 24 -3 24 -4 24 -3 
23 -3 24 -3 24 -3 24 -3 24 -3 24 -3 23 -3 24 -3 
24 -2 24 -3 24 -2 24 -2 23 -3 24 -2 24 -2 24 -2 
24 -1 23 -2 24 -2 24 -1 24 -2 24 -1 24 -1 23 -1 
24 -1 24 -1 24 -1 24 -1 24 0 23 -1 24 0 24 0 
24 -1 24 0 24 0 23 0 24 1 24 0 24 0 24 1 
23 1 24 0 24 1 24 1 24 1 24 1 23 2 24 1 
24 2 24 1 24 2 24 2 23 1 24 2 24 2 24 3 
24 2 24 2 23 3 24 2 24 3 24 2 24 3 24 3 
23 3 24 3 24 3 24 3 24 4 23 3 24 4 24 3 
24 4 24 3 24 4 23 4 24 4 24 4 24 4 24 4 
24 4 23 4 24 4 24 5 24 4 24 4 24 5 23 4 
24 5 24 4 24 5 24 5 23 4 24 5 24 5 24 5 
24 4 24 5 23 5 24 5 24 5 24 5 24 5 24 5 
23 5 24 5 24 5 24 5 24 5 24 5 23 5 24 5 
24 5 24 5 24 5 1222 598 300 MP stroke
23 5 1199 593 2 MP stroke
gr

%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

 941  664 mt  -90 rotate
(v) s
90 rotate
1 sg
0 579 7148 0 0 -579 1199 1679 4 MP
PP
-7148 0 0 579 7148 0 0 -579 1199 1679 5 MP stroke
4 w
DO
SO
6 w
0 sg
1199 1679 mt 8347 1679 L
1199 1679 mt 1199 1100 L
1199 1679 mt 1199 1607 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1166 1824 mt 
(0) s
2336 1679 mt 2336 1607 L
2303 1824 mt 
(1) s
3474 1679 mt 3474 1607 L
3441 1824 mt 
(2) s
4611 1679 mt 4611 1607 L
4578 1824 mt 
(3) s
5749 1679 mt 5749 1607 L
5716 1824 mt 
(4) s
6887 1679 mt 6887 1607 L
6854 1824 mt 
(5) s
8024 1679 mt 8024 1607 L
7991 1824 mt 
(6) s
1199 1596 mt 1270 1596 L
1098 1640 mt 
(0) s
1199 1389 mt 1270 1389 L
 998 1433 mt 
(0.5) s
1199 1182 mt 1270 1182 L
1098 1226 mt 
(1) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

 847 1456 mt  -90 rotate
(x) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 108 FMSR

 919 1384 mt  -90 rotate
(1) s
90 rotate
1 sg
0 579 7149 0 0 -579 1198 2444 4 MP
PP
-7149 0 0 579 7149 0 0 -579 1198 2444 5 MP stroke
4 w
DO
SO
6 w
0 sg
1198 2444 mt 8347 2444 L
1198 2444 mt 1198 1865 L
1208 2444 mt 1208 2372 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1175 2589 mt 
(0) s
2345 2444 mt 2345 2372 L
2312 2589 mt 
(1) s
3483 2444 mt 3483 2372 L
3450 2589 mt 
(2) s
4620 2444 mt 4620 2372 L
4587 2589 mt 
(3) s
5758 2444 mt 5758 2372 L
5725 2589 mt 
(4) s
6896 2444 mt 6896 2372 L
6863 2589 mt 
(5) s
8033 2444 mt 8033 2372 L
8000 2589 mt 
(6) s
1198 2361 mt 1270 2361 L
1098 2405 mt 
(0) s
1198 2154 mt 1270 2154 L
 998 2198 mt 
(0.5) s
1198 1947 mt 1270 1947 L
1098 1991 mt 
(1) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

 847 2221 mt  -90 rotate
(x) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 108 FMSR

 919 2149 mt  -90 rotate
(2) s
90 rotate
1 sg
0 580 7148 0 0 -580 1199 3210 4 MP
PP
-7148 0 0 580 7148 0 0 -580 1199 3210 5 MP stroke
4 w
DO
SO
6 w
0 sg
1199 3210 mt 8347 3210 L
1199 3210 mt 1199 2630 L
1199 3210 mt 1199 3138 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1166 3355 mt 
(0) s
2336 3210 mt 2336 3138 L
2303 3355 mt 
(1) s
3474 3210 mt 3474 3138 L
3441 3355 mt 
(2) s
4611 3210 mt 4611 3138 L
4578 3355 mt 
(3) s
5749 3210 mt 5749 3138 L
5716 3355 mt 
(4) s
6887 3210 mt 6887 3138 L
6854 3355 mt 
(5) s
8024 3210 mt 8024 3138 L
7991 3355 mt 
(6) s
1199 3127 mt 1270 3127 L
1098 3171 mt 
(0) s
1199 2920 mt 1270 2920 L
 998 2964 mt 
(0.5) s
1199 2712 mt 1270 2712 L
1098 2756 mt 
(1) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

 847 2987 mt  -90 rotate
(x) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 108 FMSR

 919 2915 mt  -90 rotate
(3) s
90 rotate
1 sg
0 579 7148 0 0 -579 1199 3975 4 MP
PP
-7148 0 0 579 7148 0 0 -579 1199 3975 5 MP stroke
4 w
DO
SO
6 w
0 sg
1199 3975 mt 8347 3975 L
1199 3975 mt 1199 3396 L
1199 3975 mt 1199 3903 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1166 4120 mt 
(0) s
2336 3975 mt 2336 3903 L
2303 4120 mt 
(1) s
3474 3975 mt 3474 3903 L
3441 4120 mt 
(2) s
4611 3975 mt 4611 3903 L
4578 4120 mt 
(3) s
5749 3975 mt 5749 3903 L
5716 4120 mt 
(4) s
6887 3975 mt 6887 3903 L
6854 4120 mt 
(5) s
8024 3975 mt 8024 3903 L
7991 4120 mt 
(6) s
1199 3892 mt 1270 3892 L
1098 3936 mt 
(0) s
1199 3685 mt 1270 3685 L
 998 3729 mt 
(0.5) s
1199 3478 mt 1270 3478 L
1098 3522 mt 
(1) s
4511 4263 mt 
(time \(sec\)) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

 847 3752 mt  -90 rotate
(x) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 108 FMSR

 919 3680 mt  -90 rotate
(4) s
90 rotate
3053 0 1210 1596 2 MP stroke
3575 0 4263 1181 2 MP stroke
554 0 7838 1596 2 MP stroke
3069 0 1210 1945 2 MP stroke
3559 0 4279 2360 2 MP stroke
522 0 7854 1945 2 MP stroke
648 0 1210 2716 2 MP stroke
3560 0 1858 3124 2 MP stroke
2942 0 5434 2716 2 MP stroke
632 0 1226 3895 2 MP stroke
3560 0 1858 3480 2 MP stroke
2958 0 5418 3895 2 MP stroke
0 415 4247 1181 2 MP stroke
0 415 7822 1181 2 MP stroke
0 415 4295 1945 2 MP stroke
0 415 7854 1945 2 MP stroke
0 408 1843 2716 2 MP stroke
0 408 5434 2716 2 MP stroke
0 415 1858 3480 2 MP stroke
0 415 5418 3480 2 MP stroke
7143 0 1197 1096 2 MP stroke
0 605 8349 1096 2 MP stroke
7142 0 1202 1861 2 MP stroke
7142 0 1202 2634 2 MP stroke
7142 0 1202 3401 2 MP stroke
-4 574 8362 1867 2 MP stroke
-4 573 8375 2623 2 MP stroke
-4 574 8366 3396 2 MP stroke

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 2042 3625 a Fq(Fig.)h(4.)69 b(Sinusoids)25
b(inputs)g(and)f(generated)i(outputs)f(of)f(the)g(KWT)-6
b(A)22 b(netw)o(ork)1908 5160 y @beginspecial -74 @llx
209 @lly 687 @urx 581 @ury 2664 @rwi @setspecial
%%BeginDocument: ramdon10.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: D:\ssgu\ijcnn\Sample_IJCNN\ramdon10.eps
%%CreationDate: 12/21/2006  13:23:45
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   -74   209   687   581
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   -74   209   687   581
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0888 6972 csm

    0     0  9142  4464 rc
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 9143 4465 rf
6 w
0 278 7086 0 0 -278 1188 613 4 MP
PP
-7086 0 0 278 7086 0 0 -278 1188 613 5 MP stroke
4 w
DO
SO
6 w
0 sg
1188  613 mt 8274  613 L
1188  613 mt 1188  335 L
1188  613 mt 1188  542 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1155  758 mt 
(0) s
1896  613 mt 1896  542 L
1863  758 mt 
(1) s
2605  613 mt 2605  542 L
2572  758 mt 
(2) s
3313  613 mt 3313  542 L
3280  758 mt 
(3) s
4022  613 mt 4022  542 L
3989  758 mt 
(4) s
4731  613 mt 4731  542 L
4698  758 mt 
(5) s
5439  613 mt 5439  542 L
5406  758 mt 
(6) s
6148  613 mt 6148  542 L
6115  758 mt 
(7) s
6856  613 mt 6856  542 L
6823  758 mt 
(8) s
7565  613 mt 7565  542 L
7532  758 mt 
(9) s
8274  613 mt 8274  542 L
8208  758 mt 
(10) s
1188  573 mt 1258  573 L
1017  617 mt 
(-1) s
1188  474 mt 1258  474 L
1087  518 mt 
(0) s
1188  374 mt 1258  374 L
1087  418 mt 
(1) s
gs 1188 335 7087 279 rc
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 -99 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 95 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 6153 410 300 MP stroke
7 -64 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 -24 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 -15 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 4032 513 300 MP stroke
7 0 7 1 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 104 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 2 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 1911 406 300 MP stroke
7 0 7 0 7 1 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 1188 405 103 MP stroke
gr

%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

 866  541 mt  -90 rotate
(v) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 108 FMSR

 938  469 mt  -90 rotate
(1) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 96 FMSR

1188  409 mt 
(0.6924) s
1896  411 mt 
(0.6762) s
2605  412 mt 
(0.6636) s
3313  517 mt 
(-0.3908) s
4022  517 mt 
(-0.3945) s
4731  502 mt 
(-0.2433) s
5439  478 mt 
(-0.0069) s
6148  415 mt 
(0.6359) s
6856  509 mt 
(-0.3176) s
7565  410 mt 
(0.6770) s
1 sg
0 278 7086 0 0 -278 1188 1084 4 MP
PP
-7086 0 0 278 7086 0 0 -278 1188 1084 5 MP stroke
4 w
DO
SO
6 w
0 sg
1188 1084 mt 8274 1084 L
1188 1084 mt 1188  806 L
1188 1084 mt 1188 1013 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1155 1229 mt 
(0) s
1896 1084 mt 1896 1013 L
1863 1229 mt 
(1) s
2605 1084 mt 2605 1013 L
2572 1229 mt 
(2) s
3313 1084 mt 3313 1013 L
3280 1229 mt 
(3) s
4022 1084 mt 4022 1013 L
3989 1229 mt 
(4) s
4731 1084 mt 4731 1013 L
4698 1229 mt 
(5) s
5439 1084 mt 5439 1013 L
5406 1229 mt 
(6) s
6148 1084 mt 6148 1013 L
6115 1229 mt 
(7) s
6856 1084 mt 6856 1013 L
6823 1229 mt 
(8) s
7565 1084 mt 7565 1013 L
7532 1229 mt 
(9) s
8274 1084 mt 8274 1013 L
8208 1229 mt 
(10) s
1188 1044 mt 1258 1044 L
1017 1088 mt 
(-1) s
1188  945 mt 1258  945 L
1087  989 mt 
(0) s
1188  845 mt 1258  845 L
1087  889 mt 
(1) s
gs 1188 806 7087 279 rc
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 -7 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 25 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 6153 913 300 MP stroke
7 48 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 -8 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 -63 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 4032 936 300 MP stroke
7 0 7 -70 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 62 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 -96 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 1911 1040 300 MP stroke
7 0 7 0 7 100 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 1188 940 103 MP stroke
gr

%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

 866 1012 mt  -90 rotate
(v) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 108 FMSR

 938  940 mt  -90 rotate
(2) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 96 FMSR

1188  944 mt 
(0.0503) s
1896 1044 mt 
(-0.9607) s
2605  948 mt 
(0.0056) s
3313 1010 mt 
(-0.6207) s
4022  940 mt 
(0.0833) s
4731  877 mt 
(0.7200) s
5439  869 mt 
(0.7995) s
6148  917 mt 
(0.3205) s
6856  942 mt 
(0.0682) s
7565  935 mt 
(0.1361) s
1 sg
0 278 7086 0 0 -278 1188 1555 4 MP
PP
-7086 0 0 278 7086 0 0 -278 1188 1555 5 MP stroke
4 w
DO
SO
6 w
0 sg
1188 1555 mt 8274 1555 L
1188 1555 mt 1188 1277 L
1188 1555 mt 1188 1484 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1155 1700 mt 
(0) s
1896 1555 mt 1896 1484 L
1863 1700 mt 
(1) s
2605 1555 mt 2605 1484 L
2572 1700 mt 
(2) s
3313 1555 mt 3313 1484 L
3280 1700 mt 
(3) s
4022 1555 mt 4022 1484 L
3989 1700 mt 
(4) s
4731 1555 mt 4731 1484 L
4698 1700 mt 
(5) s
5439 1555 mt 5439 1484 L
5406 1700 mt 
(6) s
6148 1555 mt 6148 1484 L
6115 1700 mt 
(7) s
6856 1555 mt 6856 1484 L
6823 1700 mt 
(8) s
7565 1555 mt 7565 1484 L
7532 1700 mt 
(9) s
8274 1555 mt 8274 1484 L
8208 1700 mt 
(10) s
1188 1515 mt 1258 1515 L
1017 1559 mt 
(-1) s
1188 1416 mt 1258 1416 L
1087 1460 mt 
(0) s
1188 1316 mt 1258 1316 L
1087 1360 mt 
(1) s
gs 1188 1277 7087 279 rc
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 71 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 -77 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 6153 1447 300 MP stroke
7 95 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 7 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 -140 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 4032 1485 300 MP stroke
7 0 7 9 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 102 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 -6 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 1911 1380 300 MP stroke
7 0 7 0 7 -95 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 1188 1475 103 MP stroke
gr

%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

 866 1483 mt  -90 rotate
(v) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 108 FMSR

 938 1411 mt  -90 rotate
(3) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 96 FMSR

1188 1479 mt 
(-0.5947) s
1896 1384 mt 
(0.3626) s
2605 1378 mt 
(0.4189) s
3313 1481 mt 
(-0.6131) s
4022 1489 mt 
(-0.6983) s
4731 1349 mt 
(0.7073) s
5439 1356 mt 
(0.6433) s
6148 1451 mt 
(-0.3161) s
6856 1375 mt 
(0.4542) s
7565 1445 mt 
(-0.2592) s
1 sg
0 278 7086 0 0 -278 1188 2027 4 MP
PP
-7086 0 0 278 7086 0 0 -278 1188 2027 5 MP stroke
4 w
DO
SO
6 w
0 sg
1188 2027 mt 8274 2027 L
1188 2027 mt 1188 1749 L
1188 2027 mt 1188 1956 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1155 2172 mt 
(0) s
1896 2027 mt 1896 1956 L
1863 2172 mt 
(1) s
2605 2027 mt 2605 1956 L
2572 2172 mt 
(2) s
3313 2027 mt 3313 1956 L
3280 2172 mt 
(3) s
4022 2027 mt 4022 1956 L
3989 2172 mt 
(4) s
4731 2027 mt 4731 1956 L
4698 2172 mt 
(5) s
5439 2027 mt 5439 1956 L
5406 2172 mt 
(6) s
6148 2027 mt 6148 1956 L
6115 2172 mt 
(7) s
6856 2027 mt 6856 1956 L
6823 2172 mt 
(8) s
7565 2027 mt 7565 1956 L
7532 2172 mt 
(9) s
8274 2027 mt 8274 1956 L
8208 2172 mt 
(10) s
1188 1987 mt 1258 1987 L
1017 2031 mt 
(-1) s
1188 1888 mt 1258 1888 L
1087 1932 mt 
(0) s
1188 1788 mt 1258 1788 L
1087 1832 mt 
(1) s
gs 1188 1749 7087 279 rc
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 -78 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 -4 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 6153 1929 300 MP stroke
7 70 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 -10 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 21 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 4032 1848 300 MP stroke
7 0 7 -3 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 -51 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 -9 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 1911 1911 300 MP stroke
7 0 7 0 7 58 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 1188 1853 103 MP stroke
gr

%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

 866 1955 mt  -90 rotate
(v) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 108 FMSR

 938 1883 mt  -90 rotate
(4) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 96 FMSR

1188 1858 mt 
(0.3443) s
1896 1916 mt 
(-0.2410) s
2605 1906 mt 
(-0.1422) s
3313 1856 mt 
(0.3644) s
4022 1852 mt 
(0.3958) s
4731 1873 mt 
(0.1871) s
5439 1863 mt 
(0.2898) s
6148 1933 mt 
(-0.4205) s
6856 1930 mt 
(-0.3814) s
7565 1851 mt 
(0.4055) s
1 sg
0 278 7086 0 0 -278 1188 2498 4 MP
PP
-7086 0 0 278 7086 0 0 -278 1188 2498 5 MP stroke
4 w
DO
SO
6 w
0 sg
1188 2498 mt 8274 2498 L
1188 2498 mt 1188 2220 L
1188 2498 mt 1188 2427 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1155 2643 mt 
(0) s
1896 2498 mt 1896 2427 L
1863 2643 mt 
(1) s
2605 2498 mt 2605 2427 L
2572 2643 mt 
(2) s
3313 2498 mt 3313 2427 L
3280 2643 mt 
(3) s
4022 2498 mt 4022 2427 L
3989 2643 mt 
(4) s
4731 2498 mt 4731 2427 L
4698 2643 mt 
(5) s
5439 2498 mt 5439 2427 L
5406 2643 mt 
(6) s
6148 2498 mt 6148 2427 L
6115 2643 mt 
(7) s
6856 2498 mt 6856 2427 L
6823 2643 mt 
(8) s
7565 2498 mt 7565 2427 L
7532 2643 mt 
(9) s
8274 2498 mt 8274 2427 L
8208 2643 mt 
(10) s
1188 2458 mt 1258 2458 L
1087 2502 mt 
(0) s
1188 2359 mt 1258 2359 L
 987 2403 mt 
(0.5) s
1188 2259 mt 1258 2259 L
1087 2303 mt 
(1) s
gs 1188 2220 7087 279 rc
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 -199 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 199 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 6153 2259 300 MP stroke
7 -199 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 4032 2458 300 MP stroke
7 0 7 199 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 1911 2259 300 MP stroke
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 1188 2259 103 MP stroke
gr

%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

 836 2426 mt  -90 rotate
(x) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 108 FMSR

 908 2354 mt  -90 rotate
(1) s
90 rotate
1 sg
0 278 7086 0 0 -278 1188 2969 4 MP
PP
-7086 0 0 278 7086 0 0 -278 1188 2969 5 MP stroke
4 w
DO
SO
6 w
0 sg
1188 2969 mt 8274 2969 L
1188 2969 mt 1188 2691 L
1188 2969 mt 1188 2898 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1155 3114 mt 
(0) s
1896 2969 mt 1896 2898 L
1863 3114 mt 
(1) s
2605 2969 mt 2605 2898 L
2572 3114 mt 
(2) s
3313 2969 mt 3313 2898 L
3280 3114 mt 
(3) s
4022 2969 mt 4022 2898 L
3989 3114 mt 
(4) s
4731 2969 mt 4731 2898 L
4698 3114 mt 
(5) s
5439 2969 mt 5439 2898 L
5406 3114 mt 
(6) s
6148 2969 mt 6148 2898 L
6115 3114 mt 
(7) s
6856 2969 mt 6856 2898 L
6823 3114 mt 
(8) s
7565 2969 mt 7565 2898 L
7532 3114 mt 
(9) s
8274 2969 mt 8274 2898 L
8208 3114 mt 
(10) s
1188 2929 mt 1258 2929 L
1087 2973 mt 
(0) s
1188 2830 mt 1258 2830 L
 987 2874 mt 
(0.5) s
1188 2730 mt 1258 2730 L
1087 2774 mt 
(1) s
gs 1188 2691 7087 279 rc
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 199 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 6153 2730 300 MP stroke
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 4032 2730 300 MP stroke
7 0 7 -199 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 1911 2929 300 MP stroke
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 1188 2929 103 MP stroke
gr

%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

 836 2897 mt  -90 rotate
(x) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 108 FMSR

 908 2825 mt  -90 rotate
(2) s
90 rotate
1 sg
0 279 7086 0 0 -279 1188 3441 4 MP
PP
-7086 0 0 279 7086 0 0 -279 1188 3441 5 MP stroke
4 w
DO
SO
6 w
0 sg
1188 3441 mt 8274 3441 L
1188 3441 mt 1188 3162 L
1188 3441 mt 1188 3370 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1155 3586 mt 
(0) s
1896 3441 mt 1896 3370 L
1863 3586 mt 
(1) s
2605 3441 mt 2605 3370 L
2572 3586 mt 
(2) s
3313 3441 mt 3313 3370 L
3280 3586 mt 
(3) s
4022 3441 mt 4022 3370 L
3989 3586 mt 
(4) s
4731 3441 mt 4731 3370 L
4698 3586 mt 
(5) s
5439 3441 mt 5439 3370 L
5406 3586 mt 
(6) s
6148 3441 mt 6148 3370 L
6115 3586 mt 
(7) s
6856 3441 mt 6856 3370 L
6823 3586 mt 
(8) s
7565 3441 mt 7565 3370 L
7532 3586 mt 
(9) s
8274 3441 mt 8274 3370 L
8208 3586 mt 
(10) s
1188 3401 mt 1258 3401 L
1087 3445 mt 
(0) s
1188 3301 mt 1258 3301 L
 987 3345 mt 
(0.5) s
1188 3201 mt 1258 3201 L
1087 3245 mt 
(1) s
gs 1188 3162 7087 280 rc
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 200 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 -200 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 6153 3401 300 MP stroke
7 200 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 -200 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 4032 3401 300 MP stroke
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 200 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 1911 3201 300 MP stroke
7 0 7 0 7 -200 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 1188 3401 103 MP stroke
gr

%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

 836 3368 mt  -90 rotate
(x) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 108 FMSR

 908 3296 mt  -90 rotate
(3) s
90 rotate
1 sg
0 309 7086 0 0 -309 1188 3943 4 MP
PP
-7086 0 0 309 7086 0 0 -309 1188 3943 5 MP stroke
4 w
DO
SO
6 w
0 sg
1188 3943 mt 8274 3943 L
1188 3943 mt 1188 3634 L
1188 3943 mt 1188 3872 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1155 4088 mt 
(0) s
1896 3943 mt 1896 3872 L
1863 4088 mt 
(1) s
2605 3943 mt 2605 3872 L
2572 4088 mt 
(2) s
3313 3943 mt 3313 3872 L
3280 4088 mt 
(3) s
4022 3943 mt 4022 3872 L
3989 4088 mt 
(4) s
4731 3943 mt 4731 3872 L
4698 4088 mt 
(5) s
5439 3943 mt 5439 3872 L
5406 4088 mt 
(6) s
6148 3943 mt 6148 3872 L
6115 4088 mt 
(7) s
6856 3943 mt 6856 3872 L
6823 4088 mt 
(8) s
7565 3943 mt 7565 3872 L
7532 4088 mt 
(9) s
8274 3943 mt 8274 3872 L
8208 4088 mt 
(10) s
1188 3898 mt 1258 3898 L
1087 3942 mt 
(0) s
1188 3788 mt 1258 3788 L
 987 3832 mt 
(0.5) s
1188 3678 mt 1258 3678 L
1087 3722 mt 
(1) s
gs 1188 3634 7087 310 rc
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 -220 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 6153 3898 300 MP stroke
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 220 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 4032 3678 300 MP stroke
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 -220 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 8 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 8 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 8 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 8 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 1911 3898 300 MP stroke
7 0 7 0 7 220 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 8 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 8 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
8 0 7 0 7 0 7 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 8 0 7 0 7 0 7 0 7 0 
7 0 7 0 7 0 7 0 7 0 7 0 1188 3678 103 MP stroke
gr

%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

 836 3855 mt  -90 rotate
(x) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 108 FMSR

 908 3783 mt  -90 rotate
(4) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

4469 4231 mt 
(time \(sec\)) s

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 2059 5309 a(Fig.)h(5.)70 b(Random)24 b(inputs)h(and)f
(generated)i(outputs)f(of)f(the)g(KWT)-6 b(A)23 b(netw)o(ork)p
eop end
%%Page: 4 4
TeXDict begin 4 3 bop -82 -42 a Fp(In)44 b(order)f(to)h(test)h(the)f
(response)f(of)h(the)h(model)e(to)h(random)-165 58 y(input)37
b(signals,)h(we)h(further)d(sho)n(w)i(the)g(follo)n(wing)f(e)o
(xperimental)-165 157 y(results.)19 b(In)f(this)i(test,)f(four)f
(random)f(signals)i(ranged)f(under)f(uniform)-165 257
y(distrib)n(ution)39 b(from)g Fi(\000)p Fm(1)h Fp(to)g
Fm(1)g Fp(are)h(generated)d(and)i(fed)g(into)g(the)-165
356 y(KWT)-8 b(A)33 b(neural)f(netw)o(ork.)g(The)g(neural)g(netw)o(ork)
g(is)h(re)o(gulated)e(to)-165 456 y(determine)e(the)h(tw)o(o)h(lar)o
(gest)f(signals)g(at)h(an)o(y)f(time.)g(Fig.)h(5)f(sho)n(ws)-165
556 y(that)25 b(the)h(KWT)-8 b(A)27 b(netw)o(ork)d(can)i(output)e(the)i
(correct)f(results)h(in)g(the)-165 655 y(whole)35 b(period.)f(It)i
(means)f(that)h(this)g(model)e(has)i(good)e(response)-165
755 y(property)26 b(to)j(random)d(inputs.)-82 857 y(Finally)-5
b(,)38 b(in)h(order)f(to)h(re)n(v)o(eal)f(that)h(the)h(KWT)-8
b(A)39 b(netw)o(ork)f(has)-165 956 y(good)32 b(performance)f(to)j(solv)
o(e)g(the)g(high-dimensional)c(problems,)-165 1056 y(Fig.)k(6)g(sho)n
(ws)g(the)h(simulation)e(results)i(of)e(the)i(KWT)-8
b(A)35 b(netw)o(ork)-165 1156 y(with)43 b(5,)f(10,)g(15)h(and)f(20)g
(inputs)g(where)g Fn(\013)50 b Fm(=)f(1)p Fn(;)57 b(\025)50
b Fm(=)f(10)1821 1126 y Fh(5)1857 1156 y Fp(.)-165 1255
y(It)34 b(is)i(demonstrated)c(that)i(the)h(con)m(v)o(er)o(gence)30
b(rate)k(of)g(the)h(KWT)-8 b(A)-165 1355 y(netw)o(ork)27
b(is)i(independent)d(of)i Fn(n)p Fp(.)-224 3103 y @beginspecial
96 @llx 238 @lly 515 @urx 553 @ury 2592 @rwi @setspecial
%%BeginDocument: micro.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: D:\KWTA\micro.eps
%%CreationDate: 12/18/2006  16:45:22
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    96   238   515   553
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    96   238   515   553
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1152 6636 csm

    0     0  5039  3780 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5040 3781 rf
6 w
0 1261 1667 0 0 -1261 662 1570 4 MP
PP
-1667 0 0 1261 1667 0 0 -1261 662 1570 5 MP stroke
4 w
DO
SO
6 w
0 sg
 662  309 mt 2329  309 L
 662 1570 mt 2329 1570 L
2329 1570 mt 2329  309 L
 662 1570 mt  662  309 L
 662 1570 mt 2329 1570 L
 662 1570 mt  662  309 L
 662 1570 mt  662 1553 L
 662  310 mt  662  326 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 629 1715 mt 
(0) s
1078 1570 mt 1078 1553 L
1078  310 mt 1078  326 L
1012 1715 mt 
(50) s
1495 1570 mt 1495 1553 L
1495  310 mt 1495  326 L
1395 1715 mt 
(100) s
1912 1570 mt 1912 1553 L
1912  310 mt 1912  326 L
1812 1715 mt 
(150) s
2329 1570 mt 2329 1553 L
2329  310 mt 2329  326 L
2229 1715 mt 
(200) s
 662 1570 mt  678 1570 L
2329 1570 mt 2312 1570 L
 561 1614 mt 
(0) s
 662 1340 mt  678 1340 L
2329 1340 mt 2312 1340 L
 461 1384 mt 
(0.2) s
 662 1111 mt  678 1111 L
2329 1111 mt 2312 1111 L
 461 1155 mt 
(0.4) s
 662  882 mt  678  882 L
2329  882 mt 2312  882 L
 461  926 mt 
(0.6) s
 662  653 mt  678  653 L
2329  653 mt 2312  653 L
 461  697 mt 
(0.8) s
 662  424 mt  678  424 L
2329  424 mt 2312  424 L
 561  468 mt 
(1) s
 662  309 mt 2329  309 L
 662 1570 mt 2329 1570 L
2329 1570 mt 2329  309 L
 662 1570 mt  662  309 L
gs 662 310 1668 1261 rc
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 2030 424 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1731 424 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1432 424 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 -1 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 -1 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1133 428 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 -1 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 -1 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 0 1 -1 1 0 1 0 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 0 
1 0 1 -1 1 0 1 0 1 0 1 0 1 -1 1 0 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 -1 1 0 1 0 1 -1 1 0 1 0 1 0 1 -1 
1 0 1 0 1 -1 1 0 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 0 1 -1 1 0 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 -1 1 0 1 0 1 -1 1 0 
1 -1 1 0 1 -1 1 0 1 -1 1 0 1 0 1 -1 
1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 1 -1 
1 0 1 -1 1 -1 1 0 1 -1 1 0 1 -1 1 0 
1 -1 1 -1 1 0 1 -1 1 0 1 -1 1 -1 1 0 
1 -1 1 -1 1 0 1 -1 1 -1 1 0 1 -1 1 -1 
1 0 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 1 0 
1 -1 1 -1 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 
1 -1 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 1 -1 
1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 
1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 0 -1 2 -2 
1 -1 1 -1 1 -1 1 -1 0 -1 2 -2 1 -1 1 -1 
0 -1 2 -2 1 -1 0 -1 2 -2 1 -1 0 -1 2 -2 
1 -1 0 -1 2 -2 0 -1 2 -2 0 -1 2 -2 0 -1 
2 -2 0 -1 2 -2 1 -1 0 -2 2 -2 1 -1 0 -2 
2 -2 1 -1 0 -2 835 568 300 MP stroke
2 -2 1 -1 0 -2 2 -2 0 -2 2 -2 0 -1 1 -1 
0 -1 2 -2 0 -2 2 -2 0 -2 2 -2 0 -2 2 -2 
0 -2 2 -2 0 -2 1 -1 0 -1 1 -1 0 -1 1 -1 
0 -2 2 -2 0 -2 1 -1 0 -2 2 -2 0 -2 1 -1 
0 -2 2 -2 0 -2 1 -1 0 -1 1 -1 0 -2 1 -1 
0 -1 1 -1 0 -2 1 -1 0 -1 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -1 1 -1 0 -2 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -1 1 -1 0 -2 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 
0 -3 1 -1 0 -2 1 -1 0 -2 1 -1 0 -3 1 -1 
0 -2 1 -1 0 -2 1 -1 0 -3 1 -1 0 -2 1 -1 
0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 1 -1 
0 -2 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 
0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 1 -1 
0 -4 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 
0 -3 1 -1 0 -4 1 -1 0 -3 1 -1 0 -3 1 -1 
0 -4 1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 1 -1 
0 -3 1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 1 -1 
0 -4 1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 1 -1 
0 -4 1 -1 0 -4 1 -1 0 -5 1 -1 0 -4 1 -1 
0 -5 1 -1 0 -4 1 -1 0 -5 1 -1 0 -4 1 -1 
0 -5 1 -1 0 -5 1 -1 0 -5 1 -1 0 -4 1 -1 
0 -5 1 -1 0 -6 1 -1 0 -5 1 -1 0 -5 1 -1 
0 -5 1 -1 0 -5 1 -1 0 -6 1 -1 0 -5 1 -1 
0 -6 1 -1 0 -6 1 -1 0 -5 1 -1 0 -6 1 -1 
0 -6 1 -1 0 -6 1 -1 0 -6 1 -1 0 -6 1 -1 
0 -6 1 -2 0 -6 1 -1 0 -6 1 -1 0 -7 1 -1 
0 -6 1 -2 0 -6 1 -1 0 -7 1 -1 0 -7 1 -1 
0 -7 1 -1 0 -7 1 -1 0 -7 1 -1 0 -7 1 -1 
0 -7 1 -2 0 -7 1 -1 0 -7 1 -2 0 -7 1 -1 
0 -8 1 -1 0 -8 1 -1 0 -8 1 -1 0 -8 1 -1 
0 -8 1 -1 0 -8 1 -2 0 -8 1 -1 0 -8 1 -2 
0 -8 1 -1 0 -9 1 -1 0 -8 1 -2 0 -8 1 -2 
0 -9 1 -1 0 -9 1 -2 0 -8 1 -2 0 -9 1 -1 
0 -9 1 -2 0 -9 1 -2 0 -9 1 -2 0 -9 1 -2 
0 -9 1 -2 0 -9 1 -2 0 -10 1 -2 0 -9 1 -2 
0 -10 1 -2 0 -10 674 1416 300 MP stroke
1 -2 0 -10 1 -2 0 -10 1 -2 0 -10 1 -2 0 -11 
1 -2 0 -10 1 -2 0 -11 1 -2 0 -11 1 -2 0 -11 
1 -2 0 -11 1 -2 0 -11 1 -3 0 -11 1 -2 0 -12 
662 1570 25 MP stroke
gr

1394  215 mt 
(n=5) s
1262 1858 mt 
(time \() s
%%IncludeResource: font Symbol
/Symbol /WindowsLatin1Encoding 120 FMSR

1562 1858 mt 
(m) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1631 1858 mt 
(s\)) s
 325 1053 mt  -90 rotate
(x) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 96 FMSR

 385  993 mt  -90 rotate
(1) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 325  940 mt  -90 rotate
(\(t\)) s
90 rotate
1 sg
0 1261 1667 0 0 -1261 2881 1570 4 MP
PP
-1667 0 0 1261 1667 0 0 -1261 2881 1570 5 MP stroke
4 w
DO
SO
6 w
0 sg
2881  309 mt 4548  309 L
2881 1570 mt 4548 1570 L
4548 1570 mt 4548  309 L
2881 1570 mt 2881  309 L
2881 1570 mt 4548 1570 L
2881 1570 mt 2881  309 L
2881 1570 mt 2881 1553 L
2881  310 mt 2881  326 L
2848 1715 mt 
(0) s
3297 1570 mt 3297 1553 L
3297  310 mt 3297  326 L
3231 1715 mt 
(50) s
3714 1570 mt 3714 1553 L
3714  310 mt 3714  326 L
3614 1715 mt 
(100) s
4131 1570 mt 4131 1553 L
4131  310 mt 4131  326 L
4031 1715 mt 
(150) s
4548 1570 mt 4548 1553 L
4548  310 mt 4548  326 L
4448 1715 mt 
(200) s
2881 1570 mt 2897 1570 L
4548 1570 mt 4531 1570 L
2780 1614 mt 
(0) s
2881 1340 mt 2897 1340 L
4548 1340 mt 4531 1340 L
2680 1384 mt 
(0.2) s
2881 1111 mt 2897 1111 L
4548 1111 mt 4531 1111 L
2680 1155 mt 
(0.4) s
2881  882 mt 2897  882 L
4548  882 mt 4531  882 L
2680  926 mt 
(0.6) s
2881  653 mt 2897  653 L
4548  653 mt 4531  653 L
2680  697 mt 
(0.8) s
2881  424 mt 2897  424 L
4548  424 mt 4531  424 L
2780  468 mt 
(1) s
2881  309 mt 4548  309 L
2881 1570 mt 4548 1570 L
4548 1570 mt 4548  309 L
2881 1570 mt 2881  309 L
gs 2881 310 1668 1261 rc
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 4249 424 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3950 424 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3651 424 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 -1 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 -1 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3352 428 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 -1 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 -1 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 0 1 -1 1 0 1 0 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 0 
1 0 1 -1 1 0 1 0 1 0 1 0 1 -1 1 0 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 -1 1 0 1 0 1 -1 1 0 1 0 1 0 1 -1 
1 0 1 0 1 -1 1 0 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 0 1 -1 1 0 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 -1 1 0 1 0 1 -1 1 0 
1 -1 1 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 
1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 1 -1 
1 0 1 -1 1 -1 1 0 1 -1 1 0 1 -1 1 0 
1 -1 1 -1 1 0 1 -1 1 0 1 -1 1 -1 1 0 
1 -1 1 0 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 
1 0 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 1 0 
1 -1 1 -1 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 
1 -1 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 1 -1 
1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 
1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 0 -1 2 -2 
1 -1 1 -1 1 -1 1 -1 0 -1 2 -2 1 -1 1 -1 
0 -1 2 -2 1 -1 0 -1 2 -2 1 -1 0 -1 2 -2 
1 -1 0 -1 2 -2 0 -1 2 -2 0 -1 2 -2 0 -1 
2 -2 0 -1 2 -2 1 -1 0 -2 2 -2 1 -1 0 -2 
2 -2 1 -1 0 -2 3054 568 300 MP stroke
2 -2 1 -1 0 -2 2 -2 0 -2 2 -2 0 -1 1 -1 
1 -1 0 -2 2 -2 0 -2 2 -2 0 -2 2 -2 0 -2 
2 -2 0 -2 1 -1 0 -1 1 -1 0 -1 1 -1 0 -1 
1 -1 0 -2 2 -2 0 -2 1 -1 0 -2 2 -2 0 -2 
1 -1 0 -2 2 -2 0 -2 1 -1 0 -1 1 -1 0 -2 
1 -1 0 -1 1 -1 0 -2 1 -1 0 -1 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -1 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -1 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 
1 -1 0 -3 1 -1 0 -2 1 -1 0 -2 1 -1 0 -3 
1 -1 0 -2 1 -1 0 -2 1 -1 0 -3 1 -1 0 -2 
1 -1 0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -4 
1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 
1 -1 0 -3 1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 
1 -1 0 -3 1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 
1 -1 0 -3 1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 1 -1 0 -4 
1 -1 0 -4 1 -1 0 -4 1 -1 0 -5 1 -1 0 -4 
1 -1 0 -5 1 -1 0 -4 1 -1 0 -5 1 -1 0 -4 
1 -1 0 -5 1 -1 0 -5 1 -1 0 -5 1 -1 0 -4 
1 -1 0 -5 1 -1 0 -6 1 -1 0 -5 1 -1 0 -5 
1 -1 0 -5 1 -1 0 -5 1 -1 0 -6 1 -1 0 -5 
1 -1 0 -6 1 -1 0 -6 1 -1 0 -5 1 -1 0 -6 
1 -1 0 -6 1 -1 0 -6 1 -1 0 -6 1 -1 0 -6 
1 -1 0 -6 1 -2 0 -6 1 -1 0 -6 1 -1 0 -7 
1 -1 0 -6 1 -2 0 -6 1 -1 0 -7 1 -1 0 -7 
1 -1 0 -7 1 -1 0 -7 1 -1 0 -7 1 -1 0 -7 
1 -1 0 -7 1 -2 0 -7 1 -1 0 -7 1 -2 0 -7 
1 -1 0 -8 1 -1 0 -8 1 -1 0 -8 1 -1 0 -8 
1 -1 0 -8 1 -1 0 -8 1 -2 0 -8 1 -1 0 -8 
1 -2 0 -8 1 -1 0 -9 1 -1 0 -8 1 -2 0 -8 
1 -2 0 -9 1 -1 0 -9 1 -2 0 -8 1 -2 0 -9 
1 -1 0 -9 1 -2 0 -9 1 -2 0 -9 1 -2 0 -9 
1 -2 0 -9 1 -2 0 -9 1 -2 0 -10 1 -2 0 -9 
1 -2 0 -10 1 -2 2893 1406 300 MP stroke
0 -10 1 -2 0 -10 1 -2 0 -10 1 -2 0 -10 1 -2 
0 -11 1 -2 0 -10 1 -2 0 -11 1 -2 0 -11 1 -2 
0 -11 1 -2 0 -11 1 -2 0 -11 1 -3 0 -11 1 -2 
0 -12 2881 1570 26 MP stroke
gr

3580  215 mt 
(n=10) s
3481 1858 mt 
(time \() s
%%IncludeResource: font Symbol
/Symbol /WindowsLatin1Encoding 120 FMSR

3781 1858 mt 
(m) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

3850 1858 mt 
(s\)) s
2544 1053 mt  -90 rotate
(x) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 96 FMSR

2604  993 mt  -90 rotate
(1) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

2544  940 mt  -90 rotate
(\(t\)) s
90 rotate
1 sg
0 1261 1667 0 0 -1261 662 3362 4 MP
PP
-1667 0 0 1261 1667 0 0 -1261 662 3362 5 MP stroke
4 w
DO
SO
6 w
0 sg
 662 2101 mt 2329 2101 L
 662 3362 mt 2329 3362 L
2329 3362 mt 2329 2101 L
 662 3362 mt  662 2101 L
 662 3362 mt 2329 3362 L
 662 3362 mt  662 2101 L
 662 3362 mt  662 3345 L
 662 2101 mt  662 2117 L
 629 3507 mt 
(0) s
1078 3362 mt 1078 3345 L
1078 2101 mt 1078 2117 L
1012 3507 mt 
(50) s
1495 3362 mt 1495 3345 L
1495 2101 mt 1495 2117 L
1395 3507 mt 
(100) s
1912 3362 mt 1912 3345 L
1912 2101 mt 1912 2117 L
1812 3507 mt 
(150) s
2329 3362 mt 2329 3345 L
2329 2101 mt 2329 2117 L
2229 3507 mt 
(200) s
 662 3362 mt  678 3362 L
2329 3362 mt 2312 3362 L
 561 3406 mt 
(0) s
 662 3132 mt  678 3132 L
2329 3132 mt 2312 3132 L
 461 3176 mt 
(0.2) s
 662 2903 mt  678 2903 L
2329 2903 mt 2312 2903 L
 461 2947 mt 
(0.4) s
 662 2674 mt  678 2674 L
2329 2674 mt 2312 2674 L
 461 2718 mt 
(0.6) s
 662 2444 mt  678 2444 L
2329 2444 mt 2312 2444 L
 461 2488 mt 
(0.8) s
 662 2215 mt  678 2215 L
2329 2215 mt 2312 2215 L
 561 2259 mt 
(1) s
 662 2101 mt 2329 2101 L
 662 3362 mt 2329 3362 L
2329 3362 mt 2329 2101 L
 662 3362 mt  662 2101 L
gs 662 2101 1668 1262 rc
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 2030 2215 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1731 2215 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1432 2215 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 -1 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1133 2219 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 -1 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 0 1 0 1 -1 1 0 
1 0 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 -1 1 0 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 -1 1 0 1 0 1 -1 1 0 
1 0 1 0 1 -1 1 0 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 0 1 -1 1 0 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 -1 1 0 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 
1 -1 1 0 1 0 1 -1 1 0 1 -1 1 -1 1 0 
1 -1 1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 
1 -1 1 -1 1 0 1 -1 1 0 1 -1 1 -1 1 0 
1 -1 1 -1 1 0 1 -1 1 -1 1 0 1 -1 1 -1 
1 0 1 -1 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 
1 0 1 -1 1 -1 1 -1 1 -1 1 0 1 -1 1 -1 
1 -1 1 -1 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 
1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 
1 -1 1 -1 1 -1 1 -1 1 -1 0 -1 2 -2 1 -1 
1 -1 1 -1 1 -1 0 -1 2 -2 1 -1 1 -1 0 -1 
2 -2 1 -1 1 -1 0 -1 2 -2 1 -1 0 -1 2 -2 
0 -1 2 -2 1 -1 0 -1 2 -2 0 -1 2 -2 0 -1 
2 -2 1 -1 0 -2 2 -2 0 -1 2 -2 1 -1 0 -2 
2 -2 0 -1 2 -2 834 2359 300 MP stroke
0 -2 2 -2 1 -1 0 -2 2 -2 0 -2 2 -2 0 -1 
1 -1 0 -1 1 -1 0 -1 1 -1 0 -1 1 -1 1 -1 
0 -2 1 -1 0 -1 1 -1 0 -1 1 -1 0 -1 1 -1 
0 -1 1 -1 0 -2 2 -2 0 -2 2 -2 0 -2 1 -1 
0 -2 2 -2 0 -2 1 -1 0 -2 2 -2 0 -2 1 -1 
0 -1 1 -1 0 -2 1 -1 0 -1 1 -1 0 -2 1 -1 
0 -1 1 -1 0 -2 1 -1 0 -1 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -1 1 -1 0 -2 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -2 1 -1 0 -1 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -3 1 -1 0 -2 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -3 1 -1 0 -2 1 -1 0 -2 1 -1 
0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -2 1 -1 
0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 1 -1 
0 -2 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 
0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 
0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 0 -4 1 -1 
0 -3 1 -1 0 -3 1 -1 0 -4 1 -1 0 -3 1 -1 
0 -4 1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 1 -1 
0 -4 1 -1 0 -3 1 -1 0 -4 1 -1 0 -4 1 -1 
0 -4 1 -1 0 -4 1 -1 0 -4 1 -1 0 -5 1 -1 
0 -4 1 -1 0 -4 1 -1 0 -5 1 -1 0 -4 1 -1 
0 -5 1 -1 0 -4 1 -1 0 -5 1 -1 0 -4 1 -1 
0 -5 1 -1 0 -5 1 -1 0 -5 1 -1 0 -5 1 -1 
0 -5 1 -1 0 -5 1 -1 0 -5 1 -1 0 -6 1 -1 
0 -5 1 -1 0 -5 1 -1 0 -6 1 -1 0 -5 1 -2 
0 -5 1 -1 0 -6 1 -1 0 -6 1 -1 0 -6 1 -1 
0 -6 1 -1 0 -6 1 -1 0 -6 1 -1 0 -6 1 -1 
0 -6 1 -2 0 -6 1 -1 0 -6 1 -1 0 -7 1 -1 
0 -7 1 -1 0 -6 1 -2 0 -6 1 -1 0 -7 1 -1 
0 -7 1 -2 0 -6 1 -2 0 -7 1 -1 0 -7 1 -1 
0 -7 1 -2 0 -7 1 -1 0 -8 1 -1 0 -7 1 -2 
0 -7 1 -2 0 -7 1 -2 0 -7 1 -2 0 -8 1 -1 
0 -8 1 -1 0 -8 1 -2 0 -8 1 -1 0 -9 1 -1 
0 -8 1 -2 0 -8 1 -2 0 -8 1 -2 0 -8 1 -2 
0 -9 1 -1 0 -9 1 -2 0 -8 1 -2 0 -9 1 -2 
0 -9 1 -2 0 -9 1 -2 0 -9 1 -2 0 -9 1 -2 
0 -9 1 -2 0 -10 677 3173 300 MP stroke
1 -2 0 -9 1 -2 0 -10 1 -2 0 -10 1 -2 0 -10 
1 -2 0 -10 1 -2 0 -10 1 -2 0 -11 1 -2 0 -10 
1 -2 0 -11 1 -2 0 -11 1 -2 0 -11 1 -2 0 -11 
1 -2 0 -11 1 -3 0 -11 1 -2 0 -12 662 3362 31 MP stroke
gr

1361 2006 mt 
(n=15) s
1262 3650 mt 
(time \() s
%%IncludeResource: font Symbol
/Symbol /WindowsLatin1Encoding 120 FMSR

1562 3650 mt 
(m) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1631 3650 mt 
(s\)) s
 325 2844 mt  -90 rotate
(x) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 96 FMSR

 385 2784 mt  -90 rotate
(1) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 325 2731 mt  -90 rotate
(\(t\)) s
90 rotate
1 sg
0 1261 1667 0 0 -1261 2881 3362 4 MP
PP
-1667 0 0 1261 1667 0 0 -1261 2881 3362 5 MP stroke
4 w
DO
SO
6 w
0 sg
2881 2101 mt 4548 2101 L
2881 3362 mt 4548 3362 L
4548 3362 mt 4548 2101 L
2881 3362 mt 2881 2101 L
2881 3362 mt 4548 3362 L
2881 3362 mt 2881 2101 L
2881 3362 mt 2881 3345 L
2881 2101 mt 2881 2117 L
2848 3507 mt 
(0) s
3297 3362 mt 3297 3345 L
3297 2101 mt 3297 2117 L
3231 3507 mt 
(50) s
3714 3362 mt 3714 3345 L
3714 2101 mt 3714 2117 L
3614 3507 mt 
(100) s
4131 3362 mt 4131 3345 L
4131 2101 mt 4131 2117 L
4031 3507 mt 
(150) s
4548 3362 mt 4548 3345 L
4548 2101 mt 4548 2117 L
4448 3507 mt 
(200) s
2881 3362 mt 2897 3362 L
4548 3362 mt 4531 3362 L
2780 3406 mt 
(0) s
2881 3132 mt 2897 3132 L
4548 3132 mt 4531 3132 L
2680 3176 mt 
(0.2) s
2881 2903 mt 2897 2903 L
4548 2903 mt 4531 2903 L
2680 2947 mt 
(0.4) s
2881 2674 mt 2897 2674 L
4548 2674 mt 4531 2674 L
2680 2718 mt 
(0.6) s
2881 2444 mt 2897 2444 L
4548 2444 mt 4531 2444 L
2680 2488 mt 
(0.8) s
2881 2215 mt 2897 2215 L
4548 2215 mt 4531 2215 L
2780 2259 mt 
(1) s
2881 2101 mt 4548 2101 L
2881 3362 mt 4548 3362 L
4548 3362 mt 4548 2101 L
2881 3362 mt 2881 2101 L
gs 2881 2101 1668 1262 rc
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 4249 2215 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3950 2215 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3651 2215 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 -1 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 3352 2219 300 MP stroke
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 -1 1 0 1 0 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 0 1 0 1 0 1 -1 1 0 
1 0 1 0 1 0 1 0 1 -1 1 0 1 0 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 0 
1 -1 1 0 1 0 1 0 1 0 1 -1 1 0 1 0 
1 0 1 0 1 -1 1 0 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 -1 1 0 1 0 1 0 1 -1 
1 0 1 0 1 0 1 -1 1 0 1 0 1 -1 1 0 
1 0 1 0 1 -1 1 0 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 0 1 -1 1 0 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 -1 1 0 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 
1 -1 1 0 1 0 1 -1 1 -1 1 0 1 -1 1 0 
1 -1 1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 
1 -1 1 -1 1 0 1 -1 1 0 1 -1 1 -1 1 0 
1 -1 1 -1 1 0 1 -1 1 -1 1 0 1 -1 1 -1 
1 0 1 -1 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 
1 0 1 -1 1 -1 1 -1 1 -1 1 0 1 -1 1 -1 
1 -1 1 -1 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 
1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 
1 -1 1 -1 1 -1 1 -1 0 -1 2 -2 1 -1 1 -1 
1 -1 1 -1 1 -1 0 -1 2 -2 1 -1 1 -1 0 -1 
2 -2 1 -1 1 -1 0 -1 2 -2 1 -1 0 -1 2 -2 
0 -1 2 -2 1 -1 0 -1 2 -2 0 -1 2 -2 0 -1 
2 -2 1 -1 0 -2 2 -2 0 -1 2 -2 1 -1 0 -2 
2 -2 0 -1 2 -2 3053 2359 300 MP stroke
0 -2 2 -2 1 -1 0 -2 2 -2 0 -2 2 -2 0 -1 
1 -1 0 -1 1 -1 0 -1 1 -1 0 -1 1 -1 1 -1 
0 -2 1 -1 0 -1 1 -1 0 -1 1 -1 0 -1 1 -1 
0 -1 1 -1 0 -2 2 -2 0 -2 2 -2 0 -2 1 -1 
0 -2 2 -2 0 -2 1 -1 0 -2 2 -2 0 -2 1 -1 
0 -1 1 -1 0 -2 1 -1 0 -1 1 -1 0 -2 1 -1 
0 -1 1 -1 0 -2 1 -1 0 -1 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -1 1 -1 0 -2 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -2 1 -1 0 -1 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -3 1 -1 0 -2 1 -1 0 -2 1 -1 
0 -2 1 -1 0 -3 1 -1 0 -2 1 -1 0 -2 1 -1 
0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -2 1 -1 
0 -3 1 -1 0 -2 1 -1 0 -3 1 -1 0 -3 1 -1 
0 -2 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 
0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 
0 -3 1 -1 0 -3 1 -1 0 -3 1 -1 0 -4 1 -1 
0 -3 1 -1 0 -3 1 -1 0 -4 1 -1 0 -3 1 -1 
0 -4 1 -1 0 -4 1 -1 0 -3 1 -1 0 -4 1 -1 
0 -4 1 -1 0 -3 1 -1 0 -4 1 -1 0 -4 1 -1 
0 -4 1 -1 0 -4 1 -1 0 -4 1 -1 0 -5 1 -1 
0 -4 1 -1 0 -4 1 -1 0 -5 1 -1 0 -4 1 -1 
0 -5 1 -1 0 -4 1 -1 0 -5 1 -1 0 -4 1 -1 
0 -5 1 -1 0 -5 1 -1 0 -5 1 -1 0 -5 1 -1 
0 -5 1 -1 0 -5 1 -1 0 -5 1 -1 0 -6 1 -1 
0 -5 1 -1 0 -5 1 -1 0 -6 1 -1 0 -5 1 -2 
0 -5 1 -1 0 -6 1 -1 0 -6 1 -1 0 -6 1 -1 
0 -6 1 -1 0 -6 1 -1 0 -6 1 -1 0 -6 1 -1 
0 -6 1 -2 0 -6 1 -1 0 -6 1 -1 0 -7 1 -1 
0 -7 1 -1 0 -6 1 -2 0 -6 1 -1 0 -7 1 -1 
0 -7 1 -2 0 -6 1 -2 0 -7 1 -1 0 -7 1 -1 
0 -7 1 -2 0 -7 1 -1 0 -8 1 -1 0 -7 1 -2 
0 -7 1 -2 0 -7 1 -2 0 -7 1 -2 0 -8 1 -1 
0 -8 1 -1 0 -8 1 -2 0 -8 1 -1 0 -9 1 -1 
0 -8 1 -2 0 -8 1 -2 0 -8 1 -2 0 -8 1 -2 
0 -9 1 -1 0 -9 1 -2 0 -8 1 -2 0 -9 1 -2 
0 -9 1 -2 0 -9 1 -2 0 -9 1 -2 0 -9 1 -2 
0 -9 1 -2 0 -10 2896 3173 300 MP stroke
1 -2 0 -9 1 -2 0 -10 1 -2 0 -10 1 -2 0 -10 
1 -2 0 -10 1 -2 0 -10 1 -2 0 -11 1 -2 0 -10 
1 -2 0 -11 1 -2 0 -11 1 -2 0 -11 1 -2 0 -11 
1 -2 0 -11 1 -3 0 -11 1 -2 0 -12 2881 3362 31 MP stroke
gr

3580 2006 mt 
(n=20) s
3481 3650 mt 
(time \() s
%%IncludeResource: font Symbol
/Symbol /WindowsLatin1Encoding 120 FMSR

3781 3650 mt 
(m) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

3850 3650 mt 
(s\)) s
2544 2844 mt  -90 rotate
(x) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 96 FMSR

2604 2784 mt  -90 rotate
(1) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

2544 2731 mt  -90 rotate
(\(t\)) s
90 rotate

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial -135 3252 a Fq(Fig.)23 b(6.)70 b(Responses)24
b(of)g(the)g(KWT)-6 b(A)22 b(netw)o(ork)k(to)e(dif)n(ferent)i(number)e
(of)g(inputs)538 3527 y Fp(V)-7 b(.)46 b(C)t Fq(O)t(N)t(C)t(L)t(U)t(S)t
(I)t(O)t(N)t(S)-82 3667 y Fp(A)f(KWT)-8 b(A)45 b(netw)o(ork)f(is)h(de)n
(v)o(eloped)e(for)h(K-winners-tak)o(e-all)-165 3767 y(operation)31
b(based)i(on)g(a)h(linear)f(programming)d(formulation.)h(The)-165
3866 y(KWT)-8 b(A)47 b(netw)o(ork)e(is)i(sho)n(wn)f(to)g(be)g(stable)h
(and)e(can)i(perform)-165 3966 y(the)36 b(KWT)-8 b(A)37
b(operation)e(in)h(real)h(time.)f(The)g(KWT)-8 b(A)37
b(netw)o(ork)f(is)-165 4065 y(also)24 b(demonstrated)e(to)i(be)f
(capable)g(of)h(solving)f(high-dimensional)-165 4165
y(KWT)-8 b(A)31 b(problems.)f(In)g(addition,)g(compared)e(with)j(se)n
(v)o(eral)g(e)o(xist-)-165 4265 y(ing)i(neural)g(netw)o(orks,)g(the)g
(KWT)-8 b(A)35 b(netw)o(ork)e(proposed)e(has)k(the)-165
4364 y(simplest)28 b(architecture.)624 4540 y(R)t Fq(E)t(F)t(E)t(R)t(E)
t(N)t(C)t(E)t(S)-165 4677 y([1])42 b(A.)32 b(Krogh,)h(J.)f(Hertz)i(and)
g(R.G.)e(P)o(almer)m(,)i Fa(Intr)m(oduction)h(to)f(the)f(Theory)h(of)
-46 4752 y(Neur)o(al)24 b(Computation.)i Fq(Addison-W)-5
b(esle)o(y)l(,)25 b(Redw)o(ook)g(City)l(,)f(CA,)f(1991.)-165
4828 y([2])42 b(D.)22 b(Marr)i(and)g(T)-5 b(.)22 b(Poggio,)i
(\223Cooperati)n(v)o(e)j(computation)f(of)e(stereo)g(disparity)l(,)-5
b(\224)-46 4902 y Fa(Science)p Fq(,)25 b(v)o(ol.)f(195,)f(pp.)g
(283-328,)i(1977.)-165 4978 y([3])42 b(A.L.)20 b(Y)-7
b(uille)24 b(and)e(D.)f(Geiger)m(,)j Fa(The)e(Handbook)i(of)e(Br)o(ain)
g(Theory)h(and)f(Neur)o(al)-46 5053 y(Networks.)17 b
Fq(Chapter)g(W)m(inner)o(-T)-5 b(ak)o(e-All)19 b(Netw)o(orks,)e(pp.)e
(1228-1231,)i(The)f(MIT)-46 5128 y(Press,)23 b(2)g(edition,)i(2002.)
-165 5204 y([4])42 b(W)-6 b(.)24 b(Maass,)h(\223Neural)i(computation)h
(with)e(winner)o(-tak)o(e-all)k(as)25 b(the)h(only)g(non-)-46
5278 y(linear)e(operation,)-5 b(\224)25 b Fa(Advances)f(in)f(Neur)o(al)
g(Information)i(Pr)m(ocessing)e(Systems)p Fq(,)-46 5353
y(v)o(ol.)g(12,)g(2000.)-165 5429 y([5])42 b(W)-6 b(.)29
b(Maass,)i(\223On)g(the)h(computational)j(po)n(wer)d(of)f(winner)o
(-tak)o(e-all,)-5 b(\224)35 b Fa(Neur)o(al)-46 5504 y(Computation)p
Fq(,)25 b(v)o(ol.)f(12,)f(pp.)g(2519-2535,)i(2000.)1996
-42 y([6])42 b(W)-6 b(.J.)18 b(W)-5 b(olfe,)19 b(D.)g(Mathis,)h(C.)f
(Anderson,)h(J.)f(Rothman,)h(M.)f(Gottler)m(,)i(G.)e(Brady)l(,)2115
33 y(R.)27 b(W)-5 b(alk)o(er)m(,)28 b(G.)e(Duane)j(and)e(G.)g
(Alaghband,)i(\223K-winner)f(netw)o(orks,)-5 b(\224)30
b Fa(IEEE)2115 107 y(T)l(r)o(ansactions)c(on)d(Neur)o(al)i(Networks)p
Fq(,)g(v)o(ol.)e(2,)g(pp.)g(310-315,)i(Mar)l(.)f(1991.)1996
183 y([7])42 b(J.)31 b(W)-5 b(ang,)31 b(\223)-5 b(Analogue)33
b(winner)o(-tak)o(e-all)j(neural)e(netw)o(orks)f(for)e(determining)2115
257 y(maximum)21 b(and)g(minimum)g(signals,)-5 b(\224)22
b Fa(Int.)f(J)n(.)g(Electr)m(onics)p Fq(,)i(v)o(ol.)d(77,)h(no.)f(3,)g
(pp.)2115 332 y(355-367,)k(1994.)1996 408 y([8])42 b(K.)c(Urahama)i
(and)g(T)-5 b(.)38 b(Nagao,)h(\223K-winners-tak)o(e-all)44
b(ciucuit)e(with)d(O\(N\))2115 482 y(comple)o(xity)l(,)-5
b(\224)29 b Fa(IEEE)24 b(T)l(r)o(ansactions)k(on)e(Neur)o(al)h
(Networks)p Fq(,)h(v)o(ol.)d(6,)h(pp.)g(776-)2115 557
y(778,)d(May)l(.)h(1995.)1996 632 y([9])42 b(B.)20 b(Sek)o(erkiran)j
(and)d(U.)g(Cilingiroglu,)j(\223)-5 b(A)20 b(CMOS)g(k-winners-tak)o
(e-all)25 b(circuit)2115 707 y(with)31 b(O\(N\))f(comple)o(xity)l(,)-5
b(\224)33 b Fa(IEEE)c(T)l(r)o(ansactions)k(on)d(Cir)n(cuits)i(and)e
(Systems)p Fq(,)2115 782 y(v)o(ol.)23 b(46,)h(no.)f(1,)g(Jan.)g(1999.)
1996 857 y([10])42 b(Jayade)n(v)n(a)23 b(and)e(S.A.)e(Rahman,)i(\223)-5
b(A)19 b(neural)j(netw)o(ork)g(with)f(O\(N\))f(neurons)h(for)2115
932 y(ranking)30 b(N)e(numbers)h(in)f(O\(1/N\))h(times,)-5
b(\224)29 b Fa(IEEE)e(T)l(r)o(ansactions)j(on)f(Cir)n(cuits)2115
1007 y(and)24 b(Systems)g(I)p Fq(,)f(v)o(ol.)h(51,)f(no.)g(10,)h(Oct.)f
(2004.)1996 1082 y([11])42 b(J.)18 b(Y)-7 b(en,)19 b(J.)f(Guo)h(and)h
(H.)e(Chen,)h(\223)-5 b(A)19 b(ne)n(w)g(k-winners-tak)o(e-all)24
b(neural)c(netw)o(ork)2115 1157 y(and)h(its)g(array)h(architecture,)-5
b(\224)25 b Fa(IEEE)19 b(T)l(r)o(ansactions)j(on)f(Neur)o(al)h
(networks)p Fq(,)f(v)o(ol.)2115 1232 y(9,)i(no.)g(5.)g(pp.)h(901-912,)g
(Sept.)g(1998.)1996 1307 y([12])42 b(B.D.)29 b(Calv)o(ert)j(and)e(C.A.)
f(Marino)o(v)l(,)h(\223)-5 b(Another)31 b(k-winners-tak)o(e-all)j
(analog)2115 1382 y(neural)28 b(netw)o(ork,)-5 b(\224)28
b Fa(IEEE)c(T)l(r)o(ansactions)k(on)e(Neur)o(al)h(Networks)p
Fq(,)g(v)o(ol.)f(11,)f(no.)2115 1456 y(4,)e(pp.)g(829-838,)i(Jul.)e
(2000.)1996 1532 y([13])42 b(C.A.)e(Marino)o(v)i(and)e(B.D.)g(Calv)o
(ert,)i(\223Performance)h(analysis)f(for)f(a)f(k-)2115
1607 y(winners-tak)o(e-all)32 b(analog)e(neural)g(netw)o(ork:)f(basic)g
(theory)l(,)-5 b(\224)30 b Fa(IEEE)c(T)l(r)o(ansac-)2115
1681 y(tions)e(on)g(Neur)o(al)h(Networks)p Fq(,)g(v)o(ol.)e(14,)g(no.)h
(4,)f(pp.)g(766-780,)h(Jul.)f(2003.)1996 1757 y([14])42
b(C.A.)25 b(Marino)o(v)i(and)f(J.J.)d(Hop\002eld,)k(\223Stable)g
(computational)i(dynamics)e(for)2115 1831 y(a)h(class)g(of)f(circuits)j
(with)e(O\(N\))f(interconnections)32 b(capable)e(of)d(KWT)-6
b(A)26 b(and)2115 1906 y(rand)d(e)o(xtractions,)-5 b(\224)27
b Fa(IEEE)21 b(T)l(r)o(ansactions)j(on)f(Cir)n(cuits)h(and)f(Systems)p
Fq(,)g(v)o(ol.)f(52,)2115 1981 y(no.)h(5,)g(pp.)h(949-959,)g(May)g
(2005.)1996 2056 y([15])42 b(D.W)-6 b(.)25 b(T)-5 b(ank)27
b(and)g(J.J.)f(Hop\002eld,)h(\223Simple)h(neural)h(optimization)h(netw)
o(orks:)2115 2131 y(An)f(A/D)h(con)m(v)o(erter)m(,)i(signal)f(decision)
h(circuit,)f(and)g(a)e(linear)j(programming)2115 2206
y(circuit,)-5 b(\224)23 b Fa(IEEE)d(T)l(r)o(ansactions)i(on)f(Cir)n
(cuits)h(and)f(Systems)p Fq(,)g(v)o(ol.)g(33,)f(no.)g(5,)g(pp.)2115
2280 y(533-541,)k(1986.)1996 2356 y([16])42 b(J.J.)34
b(Hop\002eld)j(and)f(D.W)-6 b(.)35 b(T)-5 b(ank,)35 b(\223Computing)i
(with)g(neural)g(circuits:)h(A)2115 2431 y(model,)-5
b(\224)25 b Fa(Science)p Fq(,)g(v)o(ol.)f(233,)f(pp.)h(625-633,)g
(1986.)1996 2506 y([17])42 b(S.B.)19 b(Liu)h(and)h(J.)e(W)-5
b(ang,)20 b(\223)-5 b(A)19 b(simpli\002ed)j(dual)f(neural)g(netw)o(ork)
h(for)e(quadratic)2115 2581 y(programming)j(with)f(its)g(KWT)-6
b(A)21 b(application,)-5 b(\224)26 b Fa(IEEE)20 b(T)l(r)o(ansactions)k
(on)d(Neu-)2115 2655 y(r)o(al)j(Networks)p Fq(,)h(v)o(ol.)e(17,)g(no.)g
(6,)h(pp.)f(1500-1510,)h(No)o(v)g(2006.)1996 2731 y([18])42
b(M.P)-7 b(.)28 b(K)n(ennedy)k(and)e(L.O.)e(Chua,)j(\223Neural)g(netw)o
(orks)h(for)d(nonlinear)k(pro-)2115 2806 y(gramming,)-5
b(\224)22 b Fa(IEEE)d(T)l(r)o(ansactions)k(on)d(Cir)n(cuits)i(and)f
(Systems)p Fq(,)g(v)o(ol.)g(35,)f(no.)h(5,)2115 2880
y(pp.)i(554-562,)i(May)l(.)e(1988.)1996 2956 y([19])42
b(S.)32 b(Zhang)g(and)h(A.G.)e(Constantinides,)36 b(\223Lagrange)e
(programming)f(neural)2115 3030 y(netw)o(orks,)-5 b(\224)26
b Fa(IEEE)d(T)l(r)o(ansactions)j(on)e(Cir)n(cuits)i(and)e(Systems)i(II)
p Fq(,)d(v)o(ol.)h(39,)g(no.)2115 3105 y(7,)f(pp.)g(441-452,)i(Jul.)e
(1992.)1996 3181 y([20])42 b(J.)27 b(W)-5 b(ang,)27 b(\223)-5
b(A)27 b(deterministic)k(annealing)f(neural)f(netw)o(ork)g(for)f(con)m
(v)o(e)o(x)h(pro-)2115 3255 y(gramming,)-5 b(\224)25
b Fa(Neur)o(al)g(Networks)p Fq(,)f(v)o(ol.)g(5,)f(no.)g(4,)g(pp.)g
(962-971,)i(1994.)1996 3331 y([21])42 b(Y)-9 b(.)39 b(Xia,)h(\223)-5
b(A)39 b(ne)n(w)h(neural)h(netw)o(ork)h(for)d(solving)i(linear)g(and)f
(quadratic)2115 3405 y(programming)26 b(problems,)-5
b(\224)26 b Fa(IEEE)d(T)l(r)o(ansactions)k(on)d(Neur)o(al)i(Networks)p
Fq(,)g(v)o(ol.)2115 3480 y(7,)d(no.)g(6,)g(pp.)h(1544-1547,)g(No)o(v)l
(.)f(1996.)1996 3556 y([22])42 b(Y)-9 b(.)18 b(Xia,)f(G.)g(Feng)i(and)f
(J.)f(W)-5 b(ang,)17 b(\223)-5 b(A)18 b(primal-dual)i(neural)f(netw)o
(ork)h(for)d(online)2115 3630 y(resolving)29 b(constrained)i(kinematic)
f(redundanc)o(y)g(in)e(robot)g(motion)h(control,)-5 b(\224)2115
3705 y Fa(IEEE)26 b(T)l(r)o(ansactions)k(on)e(Systems,)g(Man)g(and)g
(Cybernetics)p Fq(,)i(v)o(ol.)e(35,)f(no.)h(1,)2115 3780
y(pp.54-64,)c(Feb)m(.)g(2005.)1996 3855 y([23])42 b(Y)-9
b(.)31 b(Xia)g(and)g(J.)f(W)-5 b(ang,)30 b(\223)-5 b(A)31
b(dual)g(neural)i(netw)o(ork)f(for)f(kinematic)i(control)2115
3930 y(of)22 b(redundant)i(robot)f(manipulators,)-5 b(\224)25
b Fa(IEEE)c(T)l(r)o(ansactions)j(on)e(Systems,)h(Man)2115
4005 y(and)h(Cybernetics)p Fq(,)i(v)o(ol.)d(31,)h(no.)f(1,)g
(pp.147-154,)h(Feb)m(.)g(2001.)1996 4080 y([24])42 b(Y)-9
b(.)25 b(Zhang)h(and)g(J.)f(W)-5 b(ang,)25 b(\223)-5
b(A)25 b(dual)h(neural)h(netw)o(ork)g(for)f(con)m(v)o(e)o(x)h
(quadratic)2115 4155 y(programming)40 b(subject)g(to)f(linear)h
(equality)h(and)e(inequality)j(constraints,)-5 b(\224)2115
4230 y Fa(Physics)24 b(Letter)o(s)h(A)p Fq(,)e(pp.)g(271-278,)h(Jun.)f
(2002.)1996 4305 y([25])42 b(S.)24 b(Bo)o(yd)h(and)g(L.)e(V)-7
b(andenbe)o(ghe,)27 b Fa(Con)m(ve)o(x)f(Optimization.)g
Fq(Cambridge)h(Uni-)2115 4380 y(v)o(ersity)e(Press,)e(Cambridge,)i(UK.)
e(2004.)1996 4455 y([26])42 b(Y)-9 b(.)22 b(Xia)h(and)f(J.)g(W)-5
b(ang,)21 b(\223Neural)j(netw)o(ork)g(for)e(solving)i(linear)g
(programming)2115 4530 y(problems)i(with)g(bounded)h(v)n(ariables,)-5
b(\224)29 b Fa(IEEE)24 b(T)l(r)o(ansactions)j(on)e(Neur)o(al)i(Net-)
2115 4605 y(works)p Fq(,)d(v)o(ol.)f(6,)g(no.)g(2,)g(pp.)h(515-519,)g
(1995.)1996 4680 y([27])42 b(Y)-9 b(.)42 b(Xia,)g(\223)-5
b(A)41 b(ne)n(w)h(neural)i(netw)o(ork)f(for)f(solving)h(linear)h
(programming)2115 4755 y(problems)24 b(and)f(its)g(application,)-5
b(\224)27 b Fa(IEEE)21 b(T)l(r)o(ansactions)j(on)f(Neur)o(al)h
(Networks)p Fq(,)2115 4829 y(v)o(ol.)f(7,)g(no.)h(2,)f(pp.)g(525-529,)h
(1996.)1996 4905 y([28])42 b(Y)-9 b(.)20 b(Xia)g(and)g(J.)f(W)-5
b(ang,)19 b(\223)-5 b(A)19 b(recurrent)j(neural)g(netw)o(ork)f(for)f
(solving)h(nonlinear)2115 4980 y(con)m(v)o(e)o(x)29 b(programs)e
(subject)i(to)f(linear)h(constraints,)-5 b(\224)29 b
Fa(IEEE)d(T)l(r)o(ansactions)j(on)2115 5054 y(Neur)o(al)c(Networks)p
Fq(,)g(v)o(ol.)e(16,)g(no.)g(2,)h(pp.)f(378-386,)h(2005.)1996
5130 y([29])42 b(Y)-9 b(.)22 b(Xia)g(and)h(J.)e(W)-5
b(ang,)22 b(\223)-5 b(A)21 b(general)j(projection)h(neural)f(netw)o
(ork)g(for)e(solving)2115 5204 y(monotone)30 b(v)n(ariational)i
(inequalities)h(and)c(related)i(optimization)h(problems,)-5
b(\224)2115 5279 y Fa(IEEE)27 b(T)l(r)o(ansactions)k(on)e(Neur)o(al)h
(Networks)p Fq(,)f(v)o(ol.)g(15,)f(no.)h(2,)f(pp.)g(318-328,)2115
5354 y(2004.)1996 5429 y([30])42 b(D.P)-7 b(.)22 b(Bertsekas)i(and)g
(J.N.)e(Tsitsiklis,)h Fa(P)-5 b(ar)o(allel)25 b(and)e(Distrib)o(uted)i
(Computa-)2115 5504 y(tion:)g(Numerical)g(Methods.)g
Fq(Prentice-Hall,)i(Engle)n(w)o(ood)e(Clif)n(fs,)g(NJ,)e(1989.)p
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
